diff --git a/.dockerignore b/.dockerignore
new file mode 100644
index 000000000..762ee391c
--- /dev/null
+++ b/.dockerignore
@@ -0,0 +1,6 @@
+.git/
+.idea/
+.settings/
+*/target/
+dspace/modules/*/target/
+Dockerfile.*
\ No newline at end of file
diff --git a/.travis.yml b/.travis.yml
index 5317a36b9..877e65839 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -6,6 +6,7 @@ env:
   - MAVEN_OPTS=-Xmx1024M
 
 # Install prerequisites for building Mirage2 more rapidly
+# These versions should be kept in sync with ./dspace/modules/xml-mirage2/pom.xml
 before_install:
   # Remove outdated settings.xml from Travis builds. Workaround for https://github.com/travis-ci/travis-ci/issues/4629
   - rm ~/.m2/settings.xml
@@ -20,7 +21,7 @@ before_install:
   # Print ruby version info (should be installed)
   - ruby -v
   # Install Sass & print version info
-  - gem install sass -v 3.3.14
+  - gem install sass -v 3.4.25
   - sass -v
   # Install Compass & print version info
   - gem install compass -v 1.0.1
diff --git a/Dockerfile.dependencies-jdk7 b/Dockerfile.dependencies-jdk7
new file mode 100644
index 000000000..976e70d5c
--- /dev/null
+++ b/Dockerfile.dependencies-jdk7
@@ -0,0 +1,24 @@
+# This image will be published as dspace/dspace-dependencies:dspace-5_x-jdk7
+# The purpose of this image is to make the build for dspace/dspace run faster 
+
+# Step 1 - Run Maven Build
+FROM maven:3-jdk-7 as build
+WORKDIR /app
+
+# The Mirage2 build cannot run as root.  Setting the user to dspace.
+RUN useradd dspace \
+    && mkdir /home/dspace /app/target \
+    && chown -Rv dspace: /home/dspace /app /app/target
+USER dspace
+
+# Copy the DSpace source code into the workdir (excluding .dockerignore contents)
+ADD --chown=dspace . /app/
+COPY --chown=dspace dspace/src/main/docker/build.properties /app/build.properties
+
+# Trigger the installation of all maven dependencies including the Mirage2 dependencies
+# Clean up the built artifacts in the same step to keep the docker image small
+RUN mvn package -Dmirage2.on=true && cd /app && mvn clean
+
+# Clear the contents of the /app directory so no artifacts are left when dspace:dspace is built
+USER root
+RUN rm -rf /app/*
\ No newline at end of file
diff --git a/Dockerfile.dependencies-jdk8 b/Dockerfile.dependencies-jdk8
new file mode 100644
index 000000000..82fcd4a06
--- /dev/null
+++ b/Dockerfile.dependencies-jdk8
@@ -0,0 +1,24 @@
+# This image will be published as dspace/dspace-dependencies:dspace-5_x-jdk8
+# The purpose of this image is to make the build for dspace/dspace run faster 
+
+# Step 1 - Run Maven Build
+FROM maven:3-jdk-8 as build
+WORKDIR /app
+
+# The Mirage2 build cannot run as root.  Setting the user to dspace.
+RUN useradd dspace \
+    && mkdir /home/dspace /app/target \
+    && chown -Rv dspace: /home/dspace /app /app/target
+USER dspace
+
+# Copy the DSpace source code into the workdir (excluding .dockerignore contents)
+ADD --chown=dspace . /app/
+COPY dspace/src/main/docker/build.properties /app/build.properties
+
+# Trigger the installation of all maven dependencies including the Mirage2 dependencies
+# Clean up the built artifacts in the same step to keep the docker image small
+RUN mvn package -Dmirage2.on=true && mvn clean
+
+# Clear the contents of the /app directory so no artifacts are left when dspace:dspace is built
+USER root
+RUN rm -rf /app/*
\ No newline at end of file
diff --git a/Dockerfile.jdk7 b/Dockerfile.jdk7
new file mode 100644
index 000000000..99e9d1e3b
--- /dev/null
+++ b/Dockerfile.jdk7
@@ -0,0 +1,63 @@
+# This image will be published as dspace/dspace
+# See https://dspace-labs.github.io/DSpace-Docker-Images/ for usage details
+# 
+# This version is JDK7 compatible
+# - tomcat:7-jre7
+# - ANT 1.9.13
+# - maven:3-jdk-7
+# - note: 
+# - default tag for branch: dspace/dspace: dspace/dspace:dspace-5_x-jdk7
+
+# Step 1 - Run Maven Build
+FROM dspace/dspace-dependencies:dspace-5_x-jdk7 as build
+ARG TARGET_DIR=dspace-installer
+WORKDIR /app
+
+# The dspace-install directory will be written to /install
+RUN mkdir /install \
+    && chown -Rv dspace: /install
+
+USER dspace
+
+# Copy the DSpace source code into the workdir (excluding .dockerignore contents)
+ADD --chown=dspace . /app/
+COPY --chown=dspace dspace/src/main/docker/build.properties /app/build.properties
+
+# Build DSpace.  Copy the dspace-install directory to /install.  Clean up the build to keep the docker image small
+RUN mvn package -Dmirage2.on=true && \
+  mv /app/dspace/target/${TARGET_DIR}/* /install && \
+  mvn clean
+
+# Step 2 - Run Ant Deploy
+FROM tomcat:7-jre7 as ant_build
+ARG TARGET_DIR=dspace-installer
+COPY --from=build /install /dspace-src
+WORKDIR /dspace-src
+
+# Create the initial install deployment using ANT
+ENV ANT_VERSION 1.9.13
+ENV ANT_HOME /tmp/ant-$ANT_VERSION
+ENV PATH $ANT_HOME/bin:$PATH
+
+RUN mkdir $ANT_HOME && \
+    wget -qO- "https://www.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz" | tar -zx --strip-components=1 -C $ANT_HOME
+
+RUN ant init_installation update_configs update_code update_webapps update_solr_indexes
+
+# Step 3 - Run tomcat
+# Create a new tomcat image that does not retain the the build directory contents
+FROM tomcat:7-jre7
+ENV DSPACE_INSTALL=/dspace
+COPY --from=ant_build /dspace $DSPACE_INSTALL
+EXPOSE 8080 8009
+
+ENV JAVA_OPTS=-Xmx2000m
+
+RUN ln -s $DSPACE_INSTALL/webapps/solr    /usr/local/tomcat/webapps/solr    && \
+    ln -s $DSPACE_INSTALL/webapps/xmlui   /usr/local/tomcat/webapps/xmlui   && \
+    ln -s $DSPACE_INSTALL/webapps/jspui   /usr/local/tomcat/webapps/jspui   && \
+    ln -s $DSPACE_INSTALL/webapps/rest    /usr/local/tomcat/webapps/rest    && \
+    ln -s $DSPACE_INSTALL/webapps/oai     /usr/local/tomcat/webapps/oai     && \
+    ln -s $DSPACE_INSTALL/webapps/rdf     /usr/local/tomcat/webapps/rdf     && \
+    ln -s $DSPACE_INSTALL/webapps/sword   /usr/local/tomcat/webapps/sword   && \
+    ln -s $DSPACE_INSTALL/webapps/swordv2 /usr/local/tomcat/webapps/swordv2
diff --git a/Dockerfile.jdk7-test b/Dockerfile.jdk7-test
new file mode 100644
index 000000000..fe7acd8ef
--- /dev/null
+++ b/Dockerfile.jdk7-test
@@ -0,0 +1,69 @@
+# This image will be published as dspace/dspace
+# See https://dspace-labs.github.io/DSpace-Docker-Images/ for usage details
+# 
+# This version is JDK7 compatible
+# - tomcat:7-jre7
+# - ANT 1.9.13
+# - maven:3-jdk-7
+# - note: 
+# - default tag for branch: dspace/dspace: dspace/dspace:dspace-5_x-jdk7
+
+# Step 1 - Run Maven Build
+FROM dspace/dspace-dependencies:dspace-5_x-jdk7 as build
+ARG TARGET_DIR=dspace-installer
+WORKDIR /app
+
+# The dspace-install directory will be written to /install
+RUN mkdir /install \
+    && chown -Rv dspace: /install
+
+USER dspace
+
+# Copy the DSpace source code into the workdir (excluding .dockerignore contents)
+ADD --chown=dspace . /app/
+COPY --chown=dspace dspace/src/main/docker/build.properties /app/build.properties
+
+# Build DSpace.  Copy the dspace-install directory to /install.  Clean up the build to keep the docker image small
+RUN mvn package -Dmirage2.on=true && \
+  mv /app/dspace/target/${TARGET_DIR}/* /install && \
+  mvn clean
+
+# Step 2 - Run Ant Deploy
+FROM tomcat:7-jre7 as ant_build
+ARG TARGET_DIR=dspace-installer
+COPY --from=build /install /dspace-src
+WORKDIR /dspace-src
+
+# Create the initial install deployment using ANT
+ENV ANT_VERSION 1.9.13
+ENV ANT_HOME /tmp/ant-$ANT_VERSION
+ENV PATH $ANT_HOME/bin:$PATH
+
+RUN mkdir $ANT_HOME && \
+    wget -qO- "https://www.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz" | tar -zx --strip-components=1 -C $ANT_HOME
+
+RUN ant init_installation update_configs update_code update_webapps update_solr_indexes
+
+# Step 3 - Run tomcat
+# Create a new tomcat image that does not retain the the build directory contents
+FROM tomcat:7-jre7
+ENV DSPACE_INSTALL=/dspace
+COPY --from=ant_build /dspace $DSPACE_INSTALL
+EXPOSE 8080 8009
+
+ENV JAVA_OPTS=-Xmx2000m
+
+RUN ln -s $DSPACE_INSTALL/webapps/solr    /usr/local/tomcat/webapps/solr    && \
+    ln -s $DSPACE_INSTALL/webapps/xmlui   /usr/local/tomcat/webapps/xmlui   && \
+    ln -s $DSPACE_INSTALL/webapps/jspui   /usr/local/tomcat/webapps/jspui   && \
+    ln -s $DSPACE_INSTALL/webapps/rest    /usr/local/tomcat/webapps/rest    && \
+    ln -s $DSPACE_INSTALL/webapps/oai     /usr/local/tomcat/webapps/oai     && \
+    ln -s $DSPACE_INSTALL/webapps/rdf     /usr/local/tomcat/webapps/rdf     && \
+    ln -s $DSPACE_INSTALL/webapps/sword   /usr/local/tomcat/webapps/sword   && \
+    ln -s $DSPACE_INSTALL/webapps/swordv2 /usr/local/tomcat/webapps/swordv2
+
+COPY dspace/src/main/docker/test/solr_web.xml $DSPACE_INSTALL/webapps/solr/WEB-INF/web.xml
+COPY dspace/src/main/docker/test/rest_web.xml $DSPACE_INSTALL/webapps/rest/WEB-INF/web.xml
+
+RUN sed -i -e "s|\${dspace.dir}|$DSPACE_INSTALL|" $DSPACE_INSTALL/webapps/solr/WEB-INF/web.xml && \
+    sed -i -e "s|\${dspace.dir}|$DSPACE_INSTALL|" $DSPACE_INSTALL/webapps/rest/WEB-INF/web.xml
diff --git a/Dockerfile.jdk8 b/Dockerfile.jdk8
new file mode 100644
index 000000000..b411557dd
--- /dev/null
+++ b/Dockerfile.jdk8
@@ -0,0 +1,63 @@
+# This image will be published as dspace/dspace
+# See https://dspace-labs.github.io/DSpace-Docker-Images/ for usage details
+# 
+# This version is JDK8 compatible
+# - tomcat:7-jre8
+# - ANT 1.10.5
+# - maven:3-jdk-8
+# - note: 
+# - default tag for branch: dspace/dspace: dspace/dspace:dspace-5_x-jdk8
+
+# Step 1 - Run Maven Build
+FROM dspace/dspace-dependencies:dspace-5_x-jdk8 as build
+ARG TARGET_DIR=dspace-installer
+WORKDIR /app
+
+# The dspace-install directory will be written to /install
+RUN mkdir /install \
+    && chown -Rv dspace: /install
+
+USER dspace
+
+# Copy the DSpace source code into the workdir (excluding .dockerignore contents)
+ADD --chown=dspace . /app/
+COPY --chown=dspace dspace/src/main/docker/build.properties /app/build.properties
+
+# Build DSpace.  Copy the dspace-install directory to /install.  Clean up the build to keep the docker image small
+RUN mvn package -Dmirage2.on=true && \
+  mv /app/dspace/target/${TARGET_DIR}/* /install && \
+  mvn clean
+
+# Step 2 - Run Ant Deploy
+FROM tomcat:7-jre8 as ant_build
+ARG TARGET_DIR=dspace-installer
+COPY --from=build /install /dspace-src
+WORKDIR /dspace-src
+
+# Create the initial install deployment using ANT
+ENV ANT_VERSION 1.10.5
+ENV ANT_HOME /tmp/ant-$ANT_VERSION
+ENV PATH $ANT_HOME/bin:$PATH
+
+RUN mkdir $ANT_HOME && \
+    wget -qO- "https://www.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz" | tar -zx --strip-components=1 -C $ANT_HOME
+
+RUN ant init_installation update_configs update_code update_webapps update_solr_indexes
+
+# Step 3 - Run tomcat
+# Create a new tomcat image that does not retain the the build directory contents
+FROM tomcat:7-jre8
+ENV DSPACE_INSTALL=/dspace
+COPY --from=ant_build /dspace $DSPACE_INSTALL
+EXPOSE 8080 8009
+
+ENV JAVA_OPTS=-Xmx2000m
+
+RUN ln -s $DSPACE_INSTALL/webapps/solr    /usr/local/tomcat/webapps/solr    && \
+    ln -s $DSPACE_INSTALL/webapps/xmlui   /usr/local/tomcat/webapps/xmlui   && \
+    ln -s $DSPACE_INSTALL/webapps/jspui   /usr/local/tomcat/webapps/jspui   && \
+    ln -s $DSPACE_INSTALL/webapps/rest    /usr/local/tomcat/webapps/rest    && \
+    ln -s $DSPACE_INSTALL/webapps/oai     /usr/local/tomcat/webapps/oai     && \
+    ln -s $DSPACE_INSTALL/webapps/rdf     /usr/local/tomcat/webapps/rdf     && \
+    ln -s $DSPACE_INSTALL/webapps/sword   /usr/local/tomcat/webapps/sword   && \
+    ln -s $DSPACE_INSTALL/webapps/swordv2 /usr/local/tomcat/webapps/swordv2
\ No newline at end of file
diff --git a/Dockerfile.jdk8-test b/Dockerfile.jdk8-test
new file mode 100644
index 000000000..125b3c4cc
--- /dev/null
+++ b/Dockerfile.jdk8-test
@@ -0,0 +1,69 @@
+# This image will be published as dspace/dspace
+# See https://dspace-labs.github.io/DSpace-Docker-Images/ for usage details
+# 
+# This version is JDK8 compatible
+# - tomcat:7-jre8
+# - ANT 1.10.5
+# - maven:3-jdk-8
+# - note: 
+# - default tag for branch: dspace/dspace: dspace/dspace:dspace-5_x-jdk8
+
+# Step 1 - Run Maven Build
+FROM dspace/dspace-dependencies:dspace-5_x-jdk8 as build
+ARG TARGET_DIR=dspace-installer
+WORKDIR /app
+
+# The dspace-install directory will be written to /install
+RUN mkdir /install \
+    && chown -Rv dspace: /install
+
+USER dspace
+
+# Copy the DSpace source code into the workdir (excluding .dockerignore contents)
+ADD --chown=dspace . /app/
+COPY --chown=dspace dspace/src/main/docker/build.properties /app/build.properties
+
+# Build DSpace.  Copy the dspace-install directory to /install.  Clean up the build to keep the docker image small
+RUN mvn package -Dmirage2.on=true && \
+  mv /app/dspace/target/${TARGET_DIR}/* /install && \
+  mvn clean
+
+# Step 2 - Run Ant Deploy
+FROM tomcat:7-jre8 as ant_build
+ARG TARGET_DIR=dspace-installer
+COPY --from=build /install /dspace-src
+WORKDIR /dspace-src
+
+# Create the initial install deployment using ANT
+ENV ANT_VERSION 1.10.5
+ENV ANT_HOME /tmp/ant-$ANT_VERSION
+ENV PATH $ANT_HOME/bin:$PATH
+
+RUN mkdir $ANT_HOME && \
+    wget -qO- "https://www.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz" | tar -zx --strip-components=1 -C $ANT_HOME
+
+RUN ant init_installation update_configs update_code update_webapps update_solr_indexes
+
+# Step 3 - Run tomcat
+# Create a new tomcat image that does not retain the the build directory contents
+FROM tomcat:7-jre8
+ENV DSPACE_INSTALL=/dspace
+COPY --from=ant_build /dspace $DSPACE_INSTALL
+EXPOSE 8080 8009
+
+ENV JAVA_OPTS=-Xmx2000m
+
+RUN ln -s $DSPACE_INSTALL/webapps/solr    /usr/local/tomcat/webapps/solr    && \
+    ln -s $DSPACE_INSTALL/webapps/xmlui   /usr/local/tomcat/webapps/xmlui   && \
+    ln -s $DSPACE_INSTALL/webapps/jspui   /usr/local/tomcat/webapps/jspui   && \
+    ln -s $DSPACE_INSTALL/webapps/rest    /usr/local/tomcat/webapps/rest    && \
+    ln -s $DSPACE_INSTALL/webapps/oai     /usr/local/tomcat/webapps/oai     && \
+    ln -s $DSPACE_INSTALL/webapps/rdf     /usr/local/tomcat/webapps/rdf     && \
+    ln -s $DSPACE_INSTALL/webapps/sword   /usr/local/tomcat/webapps/sword   && \
+    ln -s $DSPACE_INSTALL/webapps/swordv2 /usr/local/tomcat/webapps/swordv2
+    
+COPY dspace/src/main/docker/test/solr_web.xml $DSPACE_INSTALL/webapps/solr/WEB-INF/web.xml
+COPY dspace/src/main/docker/test/rest_web.xml $DSPACE_INSTALL/webapps/rest/WEB-INF/web.xml
+
+RUN sed -i -e "s|\${dspace.dir}|$DSPACE_INSTALL|" $DSPACE_INSTALL/webapps/solr/WEB-INF/web.xml && \
+    sed -i -e "s|\${dspace.dir}|$DSPACE_INSTALL|" $DSPACE_INSTALL/webapps/rest/WEB-INF/web.xml
\ No newline at end of file
diff --git a/LICENSES_THIRD_PARTY b/LICENSES_THIRD_PARTY
index dfd5eb0bb..00f9e3719 100644
--- a/LICENSES_THIRD_PARTY
+++ b/LICENSES_THIRD_PARTY
@@ -22,13 +22,18 @@ https://wiki.duraspace.org/display/DSPACE/Code+Contribution+Guidelines
 
         * Ant-Contrib Tasks (ant-contrib:ant-contrib:1.0b3 - http://ant-contrib.sourceforge.net)
         * Code Generation Library (cglib:cglib:3.1 - http://cglib.sourceforge.net/)
+        * AWS SDK for Java - Core (com.amazonaws:aws-java-sdk-core:1.10.50 - https://aws.amazon.com/sdkforjava)
+        * AWS Java SDK for AWS KMS (com.amazonaws:aws-java-sdk-kms:1.10.50 - https://aws.amazon.com/sdkforjava)
+        * AWS Java SDK for Amazon S3 (com.amazonaws:aws-java-sdk-s3:1.10.50 - https://aws.amazon.com/sdkforjava)
         * HPPC Collections (com.carrotsearch:hppc:0.5.2 - http://labs.carrotsearch.com/hppc.html/hppc)
         * metadata-extractor (com.drewnoakes:metadata-extractor:2.6.2 - http://code.google.com/p/metadata-extractor/)
         * Jackson-annotations (com.fasterxml.jackson.core:jackson-annotations:2.3.0 - http://wiki.fasterxml.com/JacksonHome)
-        * Jackson-core (com.fasterxml.jackson.core:jackson-core:2.1.3 - http://wiki.fasterxml.com/JacksonHome)
+        * Jackson-annotations (com.fasterxml.jackson.core:jackson-annotations:2.9.3 - http://github.com/FasterXML/jackson)
         * Jackson-core (com.fasterxml.jackson.core:jackson-core:2.3.3 - http://wiki.fasterxml.com/JacksonHome)
+        * Jackson-core (com.fasterxml.jackson.core:jackson-core:2.9.3 - https://github.com/FasterXML/jackson-core)
         * jackson-databind (com.fasterxml.jackson.core:jackson-databind:2.3.3 - http://wiki.fasterxml.com/JacksonHome)
-        * Google APIs Client Library for Java (com.google.api-client:google-api-client:1.19.0 - http://code.google.com/p/google-api-java-client/google-api-client/)
+        * jackson-databind (com.fasterxml.jackson.core:jackson-databind:2.9.3 - http://github.com/FasterXML/jackson)
+        * Google APIs Client Library for Java (com.google.api-client:google-api-client:1.19.1 - http://code.google.com/p/google-api-java-client/google-api-client/)
         * Google Analytics API v3-rev103-1.19.0 (com.google.apis:google-api-services-analytics:v3-rev103-1.19.0 - http://nexus.sonatype.org/oss-repository-hosting.html/google-api-services-analytics)
         * FindBugs-jsr305 (com.google.code.findbugs:jsr305:3.0.0 - http://findbugs.sourceforge.net/)
         * Gson (com.google.code.gson:gson:2.2.1 - http://code.google.com/p/google-gson/)
@@ -39,8 +44,6 @@ https://wiki.duraspace.org/display/DSPACE/Code+Contribution+Guidelines
         * Google HTTP Client Library for Java (com.google.http-client:google-http-client:1.19.0 - http://code.google.com/p/google-http-java-client/google-http-client/)
         * Jackson 2 extensions to the Google HTTP Client Library for Java. (com.google.http-client:google-http-client-jackson2:1.19.0 - http://code.google.com/p/google-http-java-client/google-http-client-jackson2/)
         * Google OAuth Client Library for Java (com.google.oauth-client:google-oauth-client:1.19.0 - http://code.google.com/p/google-oauth-java-client/google-oauth-client/)
-        * Java 6 (and higher) extensions to the Google OAuth Client Library for Java. (com.google.oauth-client:google-oauth-client-java6:1.19.0 - http://code.google.com/p/google-oauth-java-client/google-oauth-client-java6/)
-        * Jetty extensions to the Google OAuth Client Library for Java. (com.google.oauth-client:google-oauth-client-jetty:1.19.0 - http://code.google.com/p/google-oauth-java-client/google-oauth-client-jetty/)
         * ConcurrentLinkedHashMap (com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:1.2 - http://code.google.com/p/concurrentlinkedhashmap)
         * FORESITE :: Object Reuse and Exchange library (com.googlecode.foresite-toolkit:foresite:0.9 - http://www.openarchives.org/ore)
         * ISO Parser (com.googlecode.mp4parser:isoparser:1.0-RC-1 - http://code.google.com/p/mp4parser/)
@@ -49,12 +52,13 @@ https://wiki.duraspace.org/display/DSPACE/Code+Contribution+Guidelines
         * Jtwig Core Functions (com.lyncode:jtwig-functions:2.0.1 - http://www.lyncode.com/jtwig-functions)
         * Jtwig Spring (com.lyncode:jtwig-spring:2.0.1 - http://www.lyncode.com/jtwig-spring)
         * Test Support (com.lyncode:test-support:1.0.3 - http://nexus.sonatype.org/oss-repository-hosting.html/test-support)
-        * XOAI : OAI-PMH Java Toolkit (com.lyncode:xoai:3.2.9 - http://www.lyncode.com)
+        * MaxMind DB Reader (com.maxmind.db:maxmind-db:1.2.2 - http://dev.maxmind.com/)
+        * MaxMind GeoIP2 API (com.maxmind.geoip2:geoip2:2.11.0 - http://dev.maxmind.com/geoip/geoip2/web-services)
         * Spatial4J (com.spatial4j:spatial4j:0.4.1 - https://github.com/spatial4j/spatial4j)
         * Commons BeanUtils (commons-beanutils:commons-beanutils:1.8.3 - http://commons.apache.org/beanutils/)
         * Commons CLI (commons-cli:commons-cli:1.2 - http://commons.apache.org/cli/)
         * Apache Commons Codec (commons-codec:commons-codec:1.9 - http://commons.apache.org/proper/commons-codec/)
-        * Collections (commons-collections:commons-collections:3.2 - http://jakarta.apache.org/commons/collections/)
+        * Apache Commons Collections (commons-collections:commons-collections:3.2.2 - http://commons.apache.org/collections/)
         * Commons Configuration (commons-configuration:commons-configuration:1.6 - http://commons.apache.org/${pom.artifactId.substring(8)}/)
         * Commons Configuration (commons-configuration:commons-configuration:1.8 - http://commons.apache.org/configuration/)
         * Commons DBCP (commons-dbcp:commons-dbcp:1.4 - http://commons.apache.org/dbcp/)
@@ -119,9 +123,8 @@ https://wiki.duraspace.org/display/DSPACE/Code+Contribution+Guidelines
         * Excalibur Instrument API (org.apache.excalibur.containerkit:excalibur-instrument-api:2.2.1 - http://www.apache.org/excalibur/excalibur-containerkit/excalibur-instrument-modules/excalibur-instrument-api/)
         * Excalibur Logger (org.apache.excalibur.containerkit:excalibur-logger:2.2.1 - http://www.apache.org/excalibur/excalibur-containerkit/excalibur-logger/)
         * Activation (org.apache.geronimo.specs:geronimo-activation_1.0.2_spec:1.1 - http://geronimo.apache.org/geronimo-activation_1.0.2_spec)
-        * Activation 1.1 (org.apache.geronimo.specs:geronimo-activation_1.1_spec:1.0.2 - http://geronimo.apache.org/specs/geronimo-activation_1.1_spec)
-        * JavaMail 1.4 (org.apache.geronimo.specs:geronimo-javamail_1.4_spec:1.6 - http://geronimo.apache.org/maven/specs/geronimo-javamail_1.4_spec/1.6)
-        * Streaming API for XML (STAX API 1.0) (org.apache.geronimo.specs:geronimo-stax-api_1.0_spec:1.0 - http://geronimo.apache.org/specs/geronimo-stax-api_1.0_spec)
+        * Activation 1.1 (org.apache.geronimo.specs:geronimo-activation_1.1_spec:1.1 - http://geronimo.apache.org/maven/specs/geronimo-activation_1.1_spec/1.1)
+        * JavaMail 1.4 (org.apache.geronimo.specs:geronimo-javamail_1.4_spec:1.7.1 - http://geronimo.apache.org/maven/specs/geronimo-javamail_1.4_spec/1.7.1)
         * Streaming API for XML (STAX API 1.0) (org.apache.geronimo.specs:geronimo-stax-api_1.0_spec:1.0.1 - http://geronimo.apache.org/specs/geronimo-stax-api_1.0_spec)
         * Apache Hadoop Annotations (org.apache.hadoop:hadoop-annotations:2.2.0 - no url defined)
         * Apache Hadoop Auth (org.apache.hadoop:hadoop-auth:2.2.0 - no url defined)
@@ -158,9 +161,9 @@ https://wiki.duraspace.org/display/DSPACE/Code+Contribution+Guidelines
         * Lucene Sandbox (org.apache.lucene:lucene-sandbox:4.10.2 - http://lucene.apache.org/lucene-parent/lucene-sandbox)
         * Lucene Spatial (org.apache.lucene:lucene-spatial:4.10.2 - http://lucene.apache.org/lucene-parent/lucene-spatial)
         * Lucene Suggest (org.apache.lucene:lucene-suggest:4.10.2 - http://lucene.apache.org/lucene-parent/lucene-suggest)
-        * Apache FontBox (org.apache.pdfbox:fontbox:1.8.7 - http://pdfbox.apache.org/)
-        * Apache JempBox (org.apache.pdfbox:jempbox:1.8.7 - http://www.apache.org/pdfbox-parent/jempbox/)
-        * Apache PDFBox (org.apache.pdfbox:pdfbox:1.8.7 - http://www.apache.org/pdfbox-parent/pdfbox/)
+        * Apache FontBox (org.apache.pdfbox:fontbox:1.8.12 - http://pdfbox.apache.org/)
+        * Apache JempBox (org.apache.pdfbox:jempbox:1.8.12 - http://www.apache.org/pdfbox-parent/jempbox/)
+        * Apache PDFBox (org.apache.pdfbox:pdfbox:1.8.12 - http://www.apache.org/pdfbox-parent/pdfbox/)
         * Apache POI (org.apache.poi:poi:3.6 - http://poi.apache.org/)
         * Apache POI (org.apache.poi:poi-ooxml:3.6 - http://poi.apache.org/)
         * Apache POI (org.apache.poi:poi-ooxml-schemas:3.10.1 - http://poi.apache.org/)
@@ -174,8 +177,8 @@ https://wiki.duraspace.org/display/DSPACE/Code+Contribution+Guidelines
         * Apache Tika core (org.apache.tika:tika-core:1.5 - http://tika.apache.org/)
         * Apache Tika parsers (org.apache.tika:tika-parsers:1.5 - http://tika.apache.org/)
         * Apache Tika XMP (org.apache.tika:tika-xmp:1.5 - http://tika.apache.org/)
-        * Axiom API (org.apache.ws.commons.axiom:axiom-api:1.2.10 - http://ws.apache.org/axiom/axiom-api/)
-        * Axiom Impl (org.apache.ws.commons.axiom:axiom-impl:1.2.10 - http://ws.apache.org/axiom/axiom-impl/)
+        * Axiom API (org.apache.ws.commons.axiom:axiom-api:1.2.14 - http://ws.apache.org/axiom/)
+        * Axiom Impl (org.apache.ws.commons.axiom:axiom-impl:1.2.14 - http://ws.apache.org/axiom/)
         * XmlBeans (org.apache.xmlbeans:xmlbeans:2.3.0 - http://xmlbeans.apache.org)
         * XmlBeans (org.apache.xmlbeans:xmlbeans:2.6.0 - http://xmlbeans.apache.org)
         * zookeeper (org.apache.zookeeper:zookeeper:3.4.6 - no url defined)
@@ -188,6 +191,7 @@ https://wiki.duraspace.org/display/DSPACE/Code+Contribution+Guidelines
         * Data Mapper for Jackson (org.codehaus.jackson:jackson-mapper-asl:1.9.2 - http://jackson.codehaus.org)
         * Xml Compatibility extensions for Jackson (org.codehaus.jackson:jackson-xc:1.9.2 - http://jackson.codehaus.org)
         * Jettison (org.codehaus.jettison:jettison:1.1 - no url defined)
+        * Woodstox (org.codehaus.woodstox:woodstox-core-asl:4.1.4 - http://woodstox.codehaus.org)
         * Woodstox (org.codehaus.woodstox:wstx-asl:3.2.0 - http://woodstox.codehaus.org)
         * Woodstox (org.codehaus.woodstox:wstx-asl:3.2.7 - http://woodstox.codehaus.org)
         * databene ContiPerf (org.databene:contiperf:2.2.0 - http://databene.org/contiperf)
@@ -196,12 +200,10 @@ https://wiki.duraspace.org/display/DSPACE/Code+Contribution+Guidelines
         * Ogg and Vorbis for Java, Core (org.gagravarr:vorbis-java-core:0.1 - https://github.com/Gagravarr/VorbisJava)
         * Apache Tika plugin for Ogg, Vorbis and FLAC (org.gagravarr:vorbis-java-tika:0.1 - https://github.com/Gagravarr/VorbisJava)
         * Javassist (org.javassist:javassist:3.16.1-GA - http://www.javassist.org/)
+        * Javassist (org.javassist:javassist:3.18.1-GA - http://www.javassist.org/)
         * Jetty Server (org.mortbay.jetty:jetty:6.1.14 - http://jetty.mortbay.org/project/modules/jetty)
-        * Jetty Server (org.mortbay.jetty:jetty:6.1.26 - http://www.eclipse.org/jetty/jetty-parent/project/modules/jetty)
         * Jetty Servlet Tester (org.mortbay.jetty:jetty-servlet-tester:6.1.14 - http://jetty.mortbay.org/project/jetty-servlet-tester)
         * Jetty Utilities (org.mortbay.jetty:jetty-util:6.1.14 - http://jetty.mortbay.org/project/jetty-util)
-        * Jetty Utilities (org.mortbay.jetty:jetty-util:6.1.26 - http://www.eclipse.org/jetty/jetty-parent/project/jetty-util)
-        * Servlet Specification API (org.mortbay.jetty:servlet-api:2.5-20081211 - http://jetty.mortbay.org/servlet-api)
         * Noggit (org.noggit:noggit:0.5 - http://noggit.org)
         * parboiled-core (org.parboiled:parboiled-core:1.1.6 - http://parboiled.org)
         * parboiled-java (org.parboiled:parboiled-java:1.1.6 - http://parboiled.org)
@@ -248,7 +250,6 @@ https://wiki.duraspace.org/display/DSPACE/Code+Contribution+Guidelines
 
     BSD License:
 
-        * ASM Core (asm:asm:3.1 - http://asm.objectweb.org/asm/)
         * XMP Library for Java (com.adobe.xmp:xmpcore:5.1.2 - http://www.adobe.com/devnet/xmp.html)
         * coverity-escapers (com.coverity.security:coverity-escapers:1.1.1 - http://coverity.com/security)
         * JSONLD Java :: Core (com.github.jsonld-java:jsonld-java:0.5.0 - http://github.com/jsonld-java/jsonld-java/jsonld-java/)
@@ -265,56 +266,70 @@ https://wiki.duraspace.org/display/DSPACE/Code+Contribution+Guidelines
         * Morfologik FSA (org.carrot2:morfologik-fsa:1.7.1 - http://morfologik.blogspot.com/morfologik-fsa/)
         * Morfologik Stemming Dictionary for Polish (org.carrot2:morfologik-polish:1.7.1 - http://morfologik.blogspot.com/morfologik-polish/)
         * Morfologik Stemming APIs (org.carrot2:morfologik-stemming:1.7.1 - http://morfologik.blogspot.com/morfologik-stemming/)
+        * Stax2 API (org.codehaus.woodstox:stax2-api:3.1.1 - http://woodstox.codehaus.org/StAX2)
         * databene ContiPerf (org.databene:contiperf:2.2.0 - http://databene.org/contiperf)
-        * DSpace Kernel :: API and Implementation (org.dspace:dspace-api:5.3-SNAPSHOT - https://github.com/dspace/DSpace/dspace-api)
-        * DSpace I18N :: Language Packs (org.dspace:dspace-api-lang:5.0.4 - http://nexus.sonatype.org/oss-repository-hosting.html/dspace-api-lang)
-        * DSpace JSP-UI (org.dspace:dspace-jspui:5.3-SNAPSHOT - https://github.com/dspace/DSpace/dspace-jspui)
-        * DSpace OAI-PMH (org.dspace:dspace-oai:5.3-SNAPSHOT - https://github.com/dspace/DSpace/dspace-oai)
-        * DSpace RDF (org.dspace:dspace-rdf:5.3-SNAPSHOT - https://github.com/dspace/DSpace/dspace-rdf)
-        * DSpace REST :: API and Implementation (org.dspace:dspace-rest:5.3-SNAPSHOT - http://demo.dspace.org)
-        * DSpace Services Framework :: API and Implementation (org.dspace:dspace-services:5.3-SNAPSHOT - https://github.com/dspace/DSpace/dspace-services)
-        * Apache Solr Webapp (org.dspace:dspace-solr:5.3-SNAPSHOT - https://github.com/dspace/DSpace/dspace-solr)
-        * DSpace SWORD (org.dspace:dspace-sword:5.3-SNAPSHOT - https://github.com/dspace/DSpace/dspace-sword)
-        * DSpace SWORD v2 (org.dspace:dspace-swordv2:5.3-SNAPSHOT - https://github.com/dspace/DSpace/dspace-swordv2)
-        * DSpace XML-UI (Manakin) (org.dspace:dspace-xmlui:5.3-SNAPSHOT - https://github.com/dspace/DSpace/dspace-xmlui)
-        * DSpace XML-UI (Manakin) I18N :: Language Packs (org.dspace:dspace-xmlui-lang:5.0.5 - http://nexus.sonatype.org/oss-repository-hosting.html/dspace-xmlui-lang)
+        * DSpace Kernel :: API and Implementation (org.dspace:dspace-api:5.10-SNAPSHOT - https://github.com/dspace/DSpace/dspace-api)
+        * DSpace I18N :: Language Packs (org.dspace:dspace-api-lang:5.0.7 - http://nexus.sonatype.org/oss-repository-hosting.html/dspace-api-lang)
+        * DSpace JSP-UI (org.dspace:dspace-jspui:5.10-SNAPSHOT - https://github.com/dspace/DSpace/dspace-jspui)
+        * DSpace OAI-PMH (org.dspace:dspace-oai:5.10-SNAPSHOT - https://github.com/dspace/DSpace/dspace-oai)
+        * DSpace RDF (org.dspace:dspace-rdf:5.10-SNAPSHOT - https://github.com/dspace/DSpace/dspace-rdf)
+        * DSpace REST :: API and Implementation (org.dspace:dspace-rest:5.10-SNAPSHOT - http://demo.dspace.org)
+        * DSpace Services Framework :: API and Implementation (org.dspace:dspace-services:5.10-SNAPSHOT - https://github.com/dspace/DSpace/dspace-services)
+        * Apache Solr Webapp (org.dspace:dspace-solr:5.10-SNAPSHOT - https://github.com/dspace/DSpace/dspace-solr)
+        * DSpace SWORD (org.dspace:dspace-sword:5.10-SNAPSHOT - https://github.com/dspace/DSpace/dspace-sword)
+        * DSpace SWORD v2 (org.dspace:dspace-swordv2:5.10-SNAPSHOT - https://github.com/dspace/DSpace/dspace-swordv2)
+        * DSpace XML-UI (Manakin) (org.dspace:dspace-xmlui:5.10-SNAPSHOT - https://github.com/dspace/DSpace/dspace-xmlui)
+        * DSpace XML-UI (Manakin) I18N :: Language Packs (org.dspace:dspace-xmlui-lang:5.0.7 - http://nexus.sonatype.org/oss-repository-hosting.html/dspace-xmlui-lang)
         * handle (org.dspace:handle:6.2 - no url defined)
         * jargon (org.dspace:jargon:1.4.25 - no url defined)
         * mets (org.dspace:mets:1.5.2 - no url defined)
         * oclc-harvester2 (org.dspace:oclc-harvester2:0.1.12 - no url defined)
+        * XOAI : OAI-PMH Java Toolkit (org.dspace:xoai:3.2.10 - http://nexus.sonatype.org/oss-repository-hosting.html/xoai)
         * Repackaged Cocoon Servlet Service Implementation (org.dspace.dependencies.cocoon:dspace-cocoon-servlet-service-impl:1.0.3 - http://projects.dspace.org/dspace-pom/dspace-cocoon-servlet-service-impl)
-        * DSpace Kernel :: Additions and Local Customizations (org.dspace.modules:additions:5.3-SNAPSHOT - https://github.com/dspace/DSpace/modules/additions)
+        * DSpace Kernel :: Additions and Local Customizations (org.dspace.modules:additions:5.10-SNAPSHOT - https://github.com/dspace/DSpace/modules/additions)
         * Hamcrest All (org.hamcrest:hamcrest-all:1.3 - https://github.com/hamcrest/JavaHamcrest/hamcrest-all)
         * Hamcrest Core (org.hamcrest:hamcrest-core:1.3 - https://github.com/hamcrest/JavaHamcrest/hamcrest-core)
         * JBibTeX (org.jbibtex:jbibtex:1.0.10 - http://www.jbibtex.org)
+        * JAXB2 Basics - Runtime (org.jvnet.jaxb2_commons:jaxb2-basics-runtime:0.9.5 - https://github.com/highsource/jaxb2-basics/jaxb2-basics-runtime)
         * ASM Core (org.ow2.asm:asm:4.1 - http://asm.objectweb.org/asm/)
         * ASM Core (org.ow2.asm:asm:4.2 - http://asm.objectweb.org/asm/)
         * ASM Analysis (org.ow2.asm:asm-analysis:4.1 - http://asm.objectweb.org/asm-analysis/)
         * ASM Commons (org.ow2.asm:asm-commons:4.1 - http://asm.objectweb.org/asm-commons/)
         * ASM Tree (org.ow2.asm:asm-tree:4.1 - http://asm.objectweb.org/asm-tree/)
         * ASM Util (org.ow2.asm:asm-util:4.1 - http://asm.objectweb.org/asm-util/)
-        * PostgreSQL JDBC Driver (postgresql:postgresql:9.1-901-1.jdbc4 - http://jdbc.postgresql.org)
         * XMLUnit for Java (xmlunit:xmlunit:1.1 - http://xmlunit.sourceforge.net/)
         * XMLUnit for Java (xmlunit:xmlunit:1.3 - http://xmlunit.sourceforge.net/)
 
     Common Development and Distribution License (CDDL):
 
-        * jersey-core (com.sun.jersey:jersey-core:1.17.1 - https://jersey.java.net/jersey-core/)
-        * jersey-json (com.sun.jersey:jersey-json:1.17.1 - https://jersey.java.net/jersey-json/)
-        * jersey-server (com.sun.jersey:jersey-server:1.17.1 - https://jersey.java.net/jersey-server/)
-        * jersey-servlet (com.sun.jersey:jersey-servlet:1.17.1 - https://jersey.java.net/jersey-servlet/)
-        * jersey-spring (com.sun.jersey.contribs:jersey-spring:1.8 - http://maven.apache.org)
+        * jersey-core (com.sun.jersey:jersey-core:1.19 - https://jersey.java.net/jersey-core/)
+        * jersey-json (com.sun.jersey:jersey-json:1.19 - https://jersey.java.net/jersey-json/)
+        * jersey-server (com.sun.jersey:jersey-server:1.19 - https://jersey.java.net/jersey-server/)
+        * jersey-servlet (com.sun.jersey:jersey-servlet:1.19 - https://jersey.java.net/jersey-servlet/)
+        * jersey-spring (com.sun.jersey.contribs:jersey-spring:1.19 - http://maven.apache.org)
         * JAXB RI (com.sun.xml.bind:jaxb-impl:2.2.3-1 - http://jaxb.java.net/)
         * JAXB Reference Implementation (com.sun.xml.bind:jaxb-impl:2.2.5 - http://jaxb.java.net/)
         * JHighlight (com.uwyn:jhighlight:1.0 - https://jhighlight.dev.java.net/)
         * JavaBeans Activation Framework (JAF) (javax.activation:activation:1.1 - http://java.sun.com/products/javabeans/jaf/index.jsp)
+        * javax.annotation API (javax.annotation:javax.annotation-api:1.2 - http://jcp.org/en/jsr/detail?id=250)
         * JavaMail API (javax.mail:mail:1.4 - https://glassfish.dev.java.net/javaee5/mail/)
         * Java Servlet API (javax.servlet:javax.servlet-api:3.1.0 - http://servlet-spec.java.net)
         * jsp-api (javax.servlet:jsp-api:2.0 - no url defined)
         * jstl (javax.servlet:jstl:1.1.2 - no url defined)
         * servlet-api (javax.servlet:servlet-api:2.5 - no url defined)
+        * javax.ws.rs-api (javax.ws.rs:javax.ws.rs-api:2.0.1 - http://jax-rs-spec.java.net)
+        * jsr311-api (javax.ws.rs:jsr311-api:1.1.1 - https://jsr311.dev.java.net)
         * JAXB API bundle for GlassFish V3 (javax.xml.bind:jaxb-api:2.2.2 - https://jaxb.dev.java.net/)
         * Streaming API for XML (javax.xml.stream:stax-api:1.0-2 - no url defined)
+        * HK2 API module (org.glassfish.hk2:hk2-api:2.4.0-b31 - https://hk2.java.net/hk2-api)
+        * ServiceLocator Default Implementation (org.glassfish.hk2:hk2-locator:2.4.0-b31 - https://hk2.java.net/hk2-locator)
+        * HK2 Implementation Utilities (org.glassfish.hk2:hk2-utils:2.4.0-b31 - https://hk2.java.net/hk2-utils)
+        * OSGi resource locator bundle - used by various API providers that rely on META-INF/services mechanism to locate providers. (org.glassfish.hk2:osgi-resource-locator:1.0.1 - http://glassfish.org/osgi-resource-locator/)
+        * aopalliance version 1.0 repackaged as a module (org.glassfish.hk2.external:aopalliance-repackaged:2.4.0-b31 - https://hk2.java.net/external/aopalliance-repackaged)
+        * javax.inject:1 as OSGi bundle (org.glassfish.hk2.external:javax.inject:2.4.0-b31 - https://hk2.java.net/external/javax.inject)
+        * jersey-repackaged-guava (org.glassfish.jersey.bundles.repackaged:jersey-guava:2.22.1 - https://jersey.java.net/project/project/jersey-guava/)
+        * jersey-core-client (org.glassfish.jersey.core:jersey-client:2.22.1 - https://jersey.java.net/jersey-client/)
+        * jersey-core-common (org.glassfish.jersey.core:jersey-common:2.22.1 - https://jersey.java.net/jersey-common/)
         * Servlet Specification 2.5 API (org.mortbay.jetty:servlet-api-2.5:6.1.14 - http://jetty.mortbay.org/project/modules/servlet-api-2.5)
         * Restlet Core - API and Engine (org.restlet.jee:org.restlet:2.1.1 - http://www.restlet.org/org.restlet)
         * Restlet Extension - Servlet (org.restlet.jee:org.restlet.ext.servlet:2.1.1 - http://www.restlet.org/org.restlet.ext.servlet)
@@ -324,8 +339,6 @@ https://wiki.duraspace.org/display/DSPACE/Code+Contribution+Guidelines
         * JUnit (junit:junit:4.11 - http://junit.org)
         * AspectJ runtime (org.aspectj:aspectjrt:1.6.11 - http://www.aspectj.org)
         * databene ContiPerf (org.databene:contiperf:2.2.0 - http://databene.org/contiperf)
-        * Jetty Server (org.mortbay.jetty:jetty:6.1.26 - http://www.eclipse.org/jetty/jetty-parent/project/modules/jetty)
-        * Jetty Utilities (org.mortbay.jetty:jetty-util:6.1.26 - http://www.eclipse.org/jetty/jetty-parent/project/jetty-util)
         * Restlet Core - API and Engine (org.restlet.jee:org.restlet:2.1.1 - http://www.restlet.org/org.restlet)
         * Restlet Extension - Servlet (org.restlet.jee:org.restlet.ext.servlet:2.1.1 - http://www.restlet.org/org.restlet.ext.servlet)
 
@@ -339,7 +352,6 @@ https://wiki.duraspace.org/display/DSPACE/Code+Contribution+Guidelines
         * Jackson-core (com.fasterxml.jackson.core:jackson-core:2.3.3 - http://wiki.fasterxml.com/JacksonHome)
         * jackson-databind (com.fasterxml.jackson.core:jackson-databind:2.3.3 - http://wiki.fasterxml.com/JacksonHome)
         * FindBugs-Annotations (com.google.code.findbugs:annotations:3.0.0 - http://findbugs.sourceforge.net/)
-        * MaxMind GeoIP API (com.maxmind.geoip:geoip-api:1.2.11 - https://github.com/maxmind/geoip-api-java)
         * JHighlight (com.uwyn:jhighlight:1.0 - https://jhighlight.dev.java.net/)
         * JAX-RS provider for JSON content type (org.codehaus.jackson:jackson-jaxrs:1.9.2 - http://jackson.codehaus.org)
         * Xml Compatibility extensions for Jackson (org.codehaus.jackson:jackson-xc:1.9.2 - http://jackson.codehaus.org)
@@ -347,6 +359,7 @@ https://wiki.duraspace.org/display/DSPACE/Code+Contribution+Guidelines
         * DSpace TM-Extractors Dependency (org.dspace.dependencies:dspace-tm-extractors:1.0.1 - http://projects.dspace.org/dspace-pom/dspace-tm-extractors)
         * im4java (org.im4java:im4java:1.4.0 - http://sourceforge.net/projects/im4java/)
         * Javassist (org.javassist:javassist:3.16.1-GA - http://www.javassist.org/)
+        * Javassist (org.javassist:javassist:3.18.1-GA - http://www.javassist.org/)
         * org.jdesktop - Swing Worker (org.jdesktop:swing-worker:1.1 - no url defined)
         * Restlet Core - API and Engine (org.restlet.jee:org.restlet:2.1.1 - http://www.restlet.org/org.restlet)
         * Restlet Extension - Servlet (org.restlet.jee:org.restlet.ext.servlet:2.1.1 - http://www.restlet.org/org.restlet.ext.servlet)
@@ -364,6 +377,7 @@ https://wiki.duraspace.org/display/DSPACE/Code+Contribution+Guidelines
 
         * Bouncy Castle CMS and S/MIME API (org.bouncycastle:bcmail-jdk15:1.44 - http://www.bouncycastle.org/java.html)
         * Bouncy Castle Provider (org.bouncycastle:bcprov-jdk15:1.44 - http://www.bouncycastle.org/java.html)
+        * ORCID Java API generated via JAXB (org.dspace:orcid-jaxb-api:2.1.0 - https://github.com/DSpace/orcid-jaxb-api)
         * Main (org.jmockit:jmockit:1.10 - http://www.jmockit.org)
         * OpenCloud (org.mcavallo:opencloud:0.3 - http://opencloud.mcavallo.org/)
         * Mockito (org.mockito:mockito-all:1.9.5 - http://www.mockito.org)
@@ -380,6 +394,7 @@ https://wiki.duraspace.org/display/DSPACE/Code+Contribution+Guidelines
         * juniversalchardet (com.googlecode.juniversalchardet:juniversalchardet:1.0.3 - http://juniversalchardet.googlecode.com/)
         * H2 Database Engine (com.h2database:h2:1.4.180 - http://www.h2database.com)
         * Javassist (org.javassist:javassist:3.16.1-GA - http://www.javassist.org/)
+        * Javassist (org.javassist:javassist:3.18.1-GA - http://www.javassist.org/)
         * Rhino (rhino:js:1.6R7 - http://www.mozilla.org/rhino/)
 
     Public Domain:
@@ -388,3 +403,11 @@ https://wiki.duraspace.org/display/DSPACE/Code+Contribution+Guidelines
         * Dough Lea's util.concurrent package (concurrent:concurrent:1.3.4 - no url defined)
         * Reflections (org.reflections:reflections:0.9.9-RC1 - http://code.google.com/p/reflections/reflections/)
         * XZ for Java (org.tukaani:xz:1.4 - http://tukaani.org/xz/java.html)
+
+    The JSON License:
+
+        * JSON in Java (org.json:json:20180130 - https://github.com/douglascrockford/JSON-java)
+
+    The PostgreSQL License:
+
+        * PostgreSQL JDBC Driver - JDBC 4.1 (org.postgresql:postgresql:42.2.1.jre7 - https://github.com/pgjdbc/pgjdbc-parent-poms/pgjdbc-core-parent/pgjdbc-core-prevjre/postgresql)
diff --git a/dspace-api/pom.xml b/dspace-api/pom.xml
index 3cd3f17f9..96d1b5728 100644
--- a/dspace-api/pom.xml
+++ b/dspace-api/pom.xml
@@ -12,7 +12,7 @@
     <parent>
         <groupId>org.dspace</groupId>
         <artifactId>dspace-parent</artifactId>
-        <version>5.9-SNAPSHOT</version>
+        <version>5.11-SNAPSHOT</version>
         <relativePath>..</relativePath>
     </parent>
 
@@ -209,7 +209,7 @@
                             </execution>
                         </executions>
                     </plugin>
-                    
+
                     <!-- FileWeaver plugin is in charge of initializing & "weaving" together
                          the dspace.cfg file to be used by the Unit Testing environment.
                          It weaves two files, the default 'dspace.cfg' and 'dspace.cfg.more',
@@ -528,9 +528,9 @@
             <version>1.8</version>
         </dependency>
         <dependency>
-            <groupId>com.maxmind.geoip</groupId>
-            <artifactId>geoip-api</artifactId>
-            <version>1.2.11</version>
+            <groupId>com.maxmind.geoip2</groupId>
+            <artifactId>geoip2</artifactId>
+            <version>2.11.0</version>
         </dependency>
         <dependency>
             <groupId>org.apache.ant</groupId>
@@ -569,10 +569,10 @@
 
 
         <dependency>
-            <groupId>postgresql</groupId>
+            <groupId>org.postgresql</groupId>
             <artifactId>postgresql</artifactId>
         </dependency>
-		
+
         <dependency>
             <groupId>org.slf4j</groupId>
             <artifactId>slf4j-api</artifactId>
@@ -590,7 +590,7 @@
             <artifactId>im4java</artifactId>
             <version>1.4.0</version>
         </dependency>
-        
+
         <!-- Flyway DB API (flywaydb.org) is used to manage DB upgrades automatically. -->
         <dependency>
             <groupId>org.flywaydb</groupId>
@@ -639,6 +639,66 @@
             <version>1</version>
             <type>jar</type>
         </dependency>
+
+        <dependency>
+            <groupId>org.apache.ws.commons.axiom</groupId>
+            <artifactId>axiom-impl</artifactId>
+            <!-- NOTE: SWORDv2 needs 1.2.14, required by Abdera: https://abdera.apache.org/ -->
+            <version>1.2.14</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.apache.ws.commons.axiom</groupId>
+            <artifactId>axiom-api</artifactId>
+            <!-- NOTE: SWORDv2 needs 1.2.14, required by Abdera: https://abdera.apache.org/ -->
+            <version>1.2.14</version>
+        </dependency>
+        <dependency>
+            <groupId>org.glassfish.jersey.core</groupId>
+            <artifactId>jersey-client</artifactId>
+            <version>2.22.1</version>
+        </dependency>
+        <!-- S3 -->
+        <dependency>
+            <groupId>com.amazonaws</groupId>
+            <artifactId>aws-java-sdk-s3</artifactId>
+            <version>1.10.50</version>
+            <exclusions>
+                <exclusion>
+                    <groupId>joda-time</groupId>
+                    <artifactId>joda-time</artifactId>
+                </exclusion>
+                <exclusion>
+                    <groupId>com.fasterxml.jackson.core</groupId>
+                    <artifactId>jackson-databind</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+        <!-- S3 also wanted jackson... -->
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-core</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-databind</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-annotations</artifactId>
+        </dependency>
+
+        <!-- For ORCID v2 integration -->
+        <dependency>
+            <groupId>org.dspace</groupId>
+            <artifactId>orcid-jaxb-api</artifactId>
+            <version>2.1.0</version>
+        </dependency>
+        <dependency>
+            <groupId>org.json</groupId>
+            <artifactId>json</artifactId>
+            <version>20180130</version>
+        </dependency>
     </dependencies>
 
 </project>
diff --git a/dspace-api/src/main/java/org/dspace/app/bulkedit/DSpaceCSV.java b/dspace-api/src/main/java/org/dspace/app/bulkedit/DSpaceCSV.java
index d3d1fd9a6..4b3f09d57 100644
--- a/dspace-api/src/main/java/org/dspace/app/bulkedit/DSpaceCSV.java
+++ b/dspace-api/src/main/java/org/dspace/app/bulkedit/DSpaceCSV.java
@@ -187,7 +187,7 @@ public class DSpaceCSV implements Serializable
             StringBuilder lineBuilder = new StringBuilder();
             String lineRead;
 
-            while (StringUtils.isNotBlank(lineRead = input.readLine()))
+            while ((lineRead = input.readLine()) != null)
             {
                 if (lineBuilder.length() > 0) {
                     // Already have a previously read value - add this line
diff --git a/dspace-api/src/main/java/org/dspace/app/mediafilter/ImageMagickThumbnailFilter.java b/dspace-api/src/main/java/org/dspace/app/mediafilter/ImageMagickThumbnailFilter.java
index 0b3015b4f..198fb1dfd 100644
--- a/dspace-api/src/main/java/org/dspace/app/mediafilter/ImageMagickThumbnailFilter.java
+++ b/dspace-api/src/main/java/org/dspace/app/mediafilter/ImageMagickThumbnailFilter.java
@@ -116,6 +116,7 @@ public abstract class ImageMagickThumbnailFilter extends MediaFilter {
                 f2.deleteOnExit();
                 ConvertCmd cmd = new ConvertCmd();
                 IMOperation op = new IMOperation();
+                op.autoOrient();
                 op.addImage(f.getAbsolutePath());
                 op.thumbnail(width, height);
                 op.addImage(f2.getAbsolutePath());
@@ -139,7 +140,7 @@ public abstract class ImageMagickThumbnailFilter extends MediaFilter {
                 // PDFs using the CMYK color system can be handled specially if
                 // profiles are defined
                 if (cmyk_profile != null && srgb_profile != null) {
-                        Info imageInfo = new Info(f.getAbsolutePath(), true);
+                        Info imageInfo = new Info(f.getAbsolutePath() + s, true);
                         String imageClass = imageInfo.getImageClass();
                         if (imageClass.contains("CMYK")) {
                                 op.profile(cmyk_profile);
diff --git a/dspace-api/src/main/java/org/dspace/authority/SolrAuthorityInterface.java b/dspace-api/src/main/java/org/dspace/authority/SolrAuthorityInterface.java
new file mode 100644
index 000000000..63ad90921
--- /dev/null
+++ b/dspace-api/src/main/java/org/dspace/authority/SolrAuthorityInterface.java
@@ -0,0 +1,20 @@
+/**
+ * The contents of this file are subject to the license and copyright
+ * detailed in the LICENSE and NOTICE files at the root of the source
+ * tree and available online at
+ *
+ * http://www.dspace.org/license/
+ */
+package org.dspace.authority;
+
+import java.util.List;
+
+/**
+ * @author Jonas Van Goolen (jonas at atmire dot com)
+ */
+public interface SolrAuthorityInterface {
+
+    List<AuthorityValue> queryAuthorities(String text, int max);
+
+    AuthorityValue queryAuthorityID(String id);
+}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/Orcid.java b/dspace-api/src/main/java/org/dspace/authority/orcid/Orcid.java
deleted file mode 100644
index e345812bf..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/Orcid.java
+++ /dev/null
@@ -1,86 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-package org.dspace.authority.orcid;
-
-import org.dspace.authority.AuthorityValue;
-import org.dspace.authority.orcid.model.Bio;
-import org.dspace.authority.orcid.model.Work;
-import org.dspace.authority.orcid.xml.XMLtoBio;
-import org.dspace.authority.orcid.xml.XMLtoWork;
-import org.dspace.authority.rest.RestSource;
-import org.apache.log4j.Logger;
-import org.dspace.utils.DSpace;
-import org.w3c.dom.Document;
-
-import java.net.URLEncoder;
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public class Orcid extends RestSource {
-
-    /**
-     * log4j logger
-     */
-    private static Logger log = Logger.getLogger(Orcid.class);
-
-    private static Orcid orcid;
-
-    public static Orcid getOrcid() {
-        if (orcid == null) {
-            orcid = new DSpace().getServiceManager().getServiceByName("OrcidSource", Orcid.class);
-        }
-        return orcid;
-    }
-
-    private Orcid(String url) {
-        super(url);
-    }
-
-    public Bio getBio(String id) {
-        Document bioDocument = restConnector.get(id + "/orcid-bio");
-        XMLtoBio converter = new XMLtoBio();
-        Bio bio = converter.convert(bioDocument).get(0);
-        bio.setOrcid(id);
-        return bio;
-    }
-
-    public List<Work> getWorks(String id) {
-        Document document = restConnector.get(id + "/orcid-works");
-        XMLtoWork converter = new XMLtoWork();
-        return converter.convert(document);
-    }
-
-    public List<Bio> queryBio(String name, int start, int rows) {
-        Document bioDocument = restConnector.get("search/orcid-bio?q=" + URLEncoder.encode("\"" + name + "\"") + "&start=" + start + "&rows=" + rows);
-        XMLtoBio converter = new XMLtoBio();
-        return converter.convert(bioDocument);
-    }
-
-    @Override
-    public List<AuthorityValue> queryAuthorities(String text, int max) {
-        List<Bio> bios = queryBio(text, 0, max);
-        List<AuthorityValue> authorities = new ArrayList<AuthorityValue>();
-        for (Bio bio : bios) {
-            authorities.add(OrcidAuthorityValue.create(bio));
-        }
-        return authorities;
-    }
-
-    @Override
-    public AuthorityValue queryAuthorityID(String id) {
-        Bio bio = getBio(id);
-        return OrcidAuthorityValue.create(bio);
-    }
-}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/OrcidAuthorityValue.java b/dspace-api/src/main/java/org/dspace/authority/orcid/OrcidAuthorityValue.java
deleted file mode 100644
index f174aee17..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/OrcidAuthorityValue.java
+++ /dev/null
@@ -1,316 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-package org.dspace.authority.orcid;
-
-import org.dspace.authority.AuthorityValue;
-import org.dspace.authority.AuthorityValueGenerator;
-import org.dspace.authority.PersonAuthorityValue;
-import org.dspace.authority.orcid.model.Bio;
-import org.dspace.authority.orcid.model.BioExternalIdentifier;
-import org.dspace.authority.orcid.model.BioName;
-import org.dspace.authority.orcid.model.BioResearcherUrl;
-import org.apache.commons.lang.StringUtils;
-import org.apache.log4j.Logger;
-import org.apache.solr.common.SolrDocument;
-import org.apache.solr.common.SolrInputDocument;
-
-import java.util.*;
-
-/**
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public class OrcidAuthorityValue extends PersonAuthorityValue {
-
-    /**
-     * log4j logger
-     */
-    private static Logger log = Logger.getLogger(OrcidAuthorityValue.class);
-
-    private String orcid_id;
-    private Map<String, List<String>> otherMetadata = new HashMap<String, List<String>>();
-    private boolean update; // used in setValues(Bio bio)
-
-
-    /**
-     * Creates an instance of OrcidAuthorityValue with only uninitialized fields.
-     * This is meant to be filled in with values from an existing record.
-     * To create a brand new OrcidAuthorityValue, use create()
-     */
-    public OrcidAuthorityValue() {
-    }
-
-    public OrcidAuthorityValue(SolrDocument document) {
-        super(document);
-    }
-
-    public String getOrcid_id() {
-        return orcid_id;
-    }
-
-    public void setOrcid_id(String orcid_id) {
-        this.orcid_id = orcid_id;
-    }
-
-    public Map<String, List<String>> getOtherMetadata() {
-        return otherMetadata;
-    }
-
-    public void addOtherMetadata(String label, String data) {
-        List<String> strings = otherMetadata.get(label);
-        if (strings == null) {
-            strings = new ArrayList<String>();
-        }
-        strings.add(data);
-        otherMetadata.put(label, strings);
-    }
-
-    @Override
-    public SolrInputDocument getSolrInputDocument() {
-        SolrInputDocument doc = super.getSolrInputDocument();
-        if (StringUtils.isNotBlank(getOrcid_id())) {
-            doc.addField("orcid_id", getOrcid_id());
-        }
-
-        for (String t : otherMetadata.keySet()) {
-            List<String> data = otherMetadata.get(t);
-            for (String data_entry : data) {
-                doc.addField("label_" + t, data_entry);
-            }
-        }
-        return doc;
-    }
-
-    @Override
-    public void setValues(SolrDocument document) {
-        super.setValues(document);
-        this.orcid_id = String.valueOf(document.getFieldValue("orcid_id"));
-
-        otherMetadata = new HashMap<String, List<String>>();
-        for (String fieldName : document.getFieldNames()) {
-            String labelPrefix = "label_";
-            if (fieldName.startsWith(labelPrefix)) {
-                String label = fieldName.substring(labelPrefix.length());
-                List<String> list = new ArrayList<String>();
-                Collection<Object> fieldValues = document.getFieldValues(fieldName);
-                for (Object o : fieldValues) {
-                    list.add(String.valueOf(o));
-                }
-                otherMetadata.put(label, list);
-            }
-        }
-    }
-
-    public static OrcidAuthorityValue create() {
-        OrcidAuthorityValue orcidAuthorityValue = new OrcidAuthorityValue();
-        orcidAuthorityValue.setId(UUID.randomUUID().toString());
-        orcidAuthorityValue.updateLastModifiedDate();
-        orcidAuthorityValue.setCreationDate(new Date());
-        return orcidAuthorityValue;
-    }
-
-    /**
-     * Create an authority based on a given orcid bio
-     */
-    public static OrcidAuthorityValue create(Bio bio) {
-        OrcidAuthorityValue authority = OrcidAuthorityValue.create();
-
-        authority.setValues(bio);
-
-        return authority;
-    }
-
-    public boolean setValues(Bio bio) {
-        BioName name = bio.getName();
-
-        if (updateValue(bio.getOrcid(), getOrcid_id())) {
-            setOrcid_id(bio.getOrcid());
-        }
-
-        if (updateValue(name.getFamilyName(), getLastName())) {
-            setLastName(name.getFamilyName());
-        }
-
-        if (updateValue(name.getGivenNames(), getFirstName())) {
-            setFirstName(name.getGivenNames());
-        }
-
-        if (StringUtils.isNotBlank(name.getCreditName())) {
-            if (!getNameVariants().contains(name.getCreditName())) {
-                addNameVariant(name.getCreditName());
-                update = true;
-            }
-        }
-        for (String otherName : name.getOtherNames()) {
-            if (!getNameVariants().contains(otherName)) {
-                addNameVariant(otherName);
-                update = true;
-            }
-        }
-
-        if (updateOtherMetadata("country", bio.getCountry())) {
-            addOtherMetadata("country", bio.getCountry());
-        }
-
-        for (String keyword : bio.getKeywords()) {
-            if (updateOtherMetadata("keyword", keyword)) {
-                addOtherMetadata("keyword", keyword);
-            }
-        }
-
-        for (BioExternalIdentifier externalIdentifier : bio.getBioExternalIdentifiers()) {
-            if (updateOtherMetadata("external_identifier", externalIdentifier.toString())) {
-                addOtherMetadata("external_identifier", externalIdentifier.toString());
-            }
-        }
-
-        for (BioResearcherUrl researcherUrl : bio.getResearcherUrls()) {
-            if (updateOtherMetadata("researcher_url", researcherUrl.toString())) {
-                addOtherMetadata("researcher_url", researcherUrl.toString());
-            }
-        }
-
-        if (updateOtherMetadata("biography", bio.getBiography())) {
-            addOtherMetadata("biography", bio.getBiography());
-        }
-
-        setValue(getName());
-
-        if (update) {
-            update();
-        }
-        boolean result = update;
-        update = false;
-        return result;
-    }
-
-    private boolean updateOtherMetadata(String label, String data) {
-        List<String> strings = getOtherMetadata().get(label);
-        boolean update;
-        if (strings == null) {
-            update = StringUtils.isNotBlank(data);
-        } else {
-            update = !strings.contains(data);
-        }
-        if (update) {
-            this.update = true;
-        }
-        return update;
-    }
-
-    private boolean updateValue(String incoming, String resident) {
-        boolean update = StringUtils.isNotBlank(incoming) && !incoming.equals(resident);
-        if (update) {
-            this.update = true;
-        }
-        return update;
-    }
-
-    @Override
-    public Map<String, String> choiceSelectMap() {
-
-        Map<String, String> map = super.choiceSelectMap();
-
-        map.put("orcid", getOrcid_id());
-
-        return map;
-    }
-
-    public String getAuthorityType() {
-        return "orcid";
-    }
-
-    @Override
-    public String generateString() {
-        String generateString = AuthorityValueGenerator.GENERATE + getAuthorityType() + AuthorityValueGenerator.SPLIT;
-        if (StringUtils.isNotBlank(getOrcid_id())) {
-            generateString += getOrcid_id();
-        }
-        return generateString;
-    }
-
-
-    @Override
-    public AuthorityValue newInstance(String info) {
-        AuthorityValue authorityValue = null;
-        if (StringUtils.isNotBlank(info)) {
-            Orcid orcid = Orcid.getOrcid();
-            authorityValue = orcid.queryAuthorityID(info);
-        } else {
-            authorityValue = OrcidAuthorityValue.create();
-        }
-        return authorityValue;
-    }
-
-
-    @Override
-    public boolean equals(Object o) {
-        if (this == o) {
-            return true;
-        }
-        if (o == null || getClass() != o.getClass()) {
-            return false;
-        }
-
-        OrcidAuthorityValue that = (OrcidAuthorityValue) o;
-
-        if (orcid_id != null ? !orcid_id.equals(that.orcid_id) : that.orcid_id != null) {
-            return false;
-        }
-
-        return true;
-    }
-
-    @Override
-    public int hashCode() {
-        return orcid_id != null ? orcid_id.hashCode() : 0;
-    }
-
-    public boolean hasTheSameInformationAs(Object o) {
-        if (this == o) {
-            return true;
-        }
-        if (o == null || getClass() != o.getClass()) {
-            return false;
-        }
-        if (!super.hasTheSameInformationAs(o)) {
-            return false;
-        }
-
-        OrcidAuthorityValue that = (OrcidAuthorityValue) o;
-
-        if (orcid_id != null ? !orcid_id.equals(that.orcid_id) : that.orcid_id != null) {
-            return false;
-        }
-
-        for (String key : otherMetadata.keySet()) {
-            if(otherMetadata.get(key) != null){
-                List<String> metadata = otherMetadata.get(key);
-                List<String> otherMetadata = that.otherMetadata.get(key);
-                if (otherMetadata == null) {
-                    return false;
-                } else {
-                    HashSet<String> metadataSet = new HashSet<String>(metadata);
-                    HashSet<String> otherMetadataSet = new HashSet<String>(otherMetadata);
-                    if (!metadataSet.equals(otherMetadataSet)) {
-                        return false;
-                    }
-                }
-            }else{
-                if(that.otherMetadata.get(key) != null){
-                    return false;
-                }
-            }
-        }
-
-        return true;
-    }
-}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/Orcidv2.java b/dspace-api/src/main/java/org/dspace/authority/orcid/Orcidv2.java
new file mode 100644
index 000000000..af33adcdc
--- /dev/null
+++ b/dspace-api/src/main/java/org/dspace/authority/orcid/Orcidv2.java
@@ -0,0 +1,185 @@
+/**
+ * The contents of this file are subject to the license and copyright
+ * detailed in the LICENSE and NOTICE files at the root of the source
+ * tree and available online at
+ *
+ * http://www.dspace.org/license/
+ */
+package org.dspace.authority.orcid;
+
+import org.apache.commons.lang.StringUtils;
+import org.apache.http.HttpResponse;
+import org.apache.http.client.HttpClient;
+import org.apache.http.client.methods.HttpPost;
+import org.apache.http.impl.client.HttpClientBuilder;
+import org.apache.log4j.Logger;
+import org.dspace.authority.AuthorityValue;
+import org.dspace.authority.SolrAuthorityInterface;
+import org.dspace.authority.orcid.xml.XMLtoBio;
+import org.dspace.authority.rest.RESTConnector;
+import org.json.JSONObject;
+import org.orcid.jaxb.model.record_v2.Person;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.net.URLEncoder;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * @author Jonas Van Goolen (jonas at atmire dot com)
+ * This class contains all methods for retrieving "Person" objects calling the ORCID (version 2) endpoints.
+ * Additionally, this can also create AuthorityValues based on these returned Person objects
+ */
+public class Orcidv2 implements SolrAuthorityInterface {
+
+    private static Logger log = Logger.getLogger(Orcidv2.class);
+
+    public RESTConnector restConnector;
+    private String OAUTHUrl;
+    private String clientId;
+
+    private String clientSecret;
+
+    private String accessToken;
+
+    /**
+     *  Initialize the accessToken that is required for all subsequent calls to ORCID
+     */
+    public void init() throws IOException {
+        if (StringUtils.isNotBlank(accessToken) && StringUtils.isNotBlank(clientSecret)) {
+            String authenticationParameters = "?client_id=" + clientId + "&client_secret=" + clientSecret + "&scope=/read-public&grant_type=client_credentials";
+            HttpPost httpPost = new HttpPost(OAUTHUrl + authenticationParameters);
+            httpPost.addHeader("Accept", "application/json");
+            httpPost.addHeader("Content-Type", "application/x-www-form-urlencoded");
+
+            HttpClient httpClient = HttpClientBuilder.create().build();
+            HttpResponse getResponse = httpClient.execute(httpPost);
+
+            InputStream is = getResponse.getEntity().getContent();
+            BufferedReader streamReader = new BufferedReader(new InputStreamReader(is, "UTF-8"));
+
+            JSONObject responseObject = null;
+            String inputStr;
+            while ((inputStr = streamReader.readLine()) != null && responseObject == null) {
+                if (inputStr.startsWith("{") && inputStr.endsWith("}") && inputStr.contains("access_token")) {
+                    try {
+                        responseObject = new JSONObject(inputStr);
+                    } catch (Exception e) {
+                        //Not as valid as I'd hoped, move along
+                        responseObject = null;
+                    }
+                }
+            }
+
+            if (responseObject != null && responseObject.has("access_token")) {
+                accessToken = (String) responseObject.get("access_token");
+            }
+        }
+    }
+
+    /**
+     * Makes an instance of the Orcidv2 class based on the provided parameters.
+     * This constructor is called through the spring bean initialization
+     */
+    private Orcidv2(String url, String OAUTHUrl, String clientId, String clientSecret) {
+        this.restConnector = new RESTConnector(url);
+        this.OAUTHUrl = OAUTHUrl;
+        this.clientId = clientId;
+        this.clientSecret = clientSecret;
+    }
+
+    /**
+     * Makes an instance of the Orcidv2 class based on the provided parameters.
+     * This constructor is called through the spring bean initialization
+     */
+    private Orcidv2(String url) {
+        this.restConnector = new RESTConnector(url);
+    }
+
+    /**
+     * Makes an instance of the AuthorityValue with the given information.
+     * @param text search string
+     * @return List<AuthorityValue>
+     */
+    @Override
+    public List<AuthorityValue> queryAuthorities(String text, int max) {
+        List<Person> bios = queryBio(text, max);
+        List<AuthorityValue> result = new ArrayList<>();
+        for (Person person : bios) {
+            AuthorityValue orcidAuthorityValue = Orcidv2AuthorityValue.create(person);
+            if (orcidAuthorityValue != null) {
+                result.add(orcidAuthorityValue);
+            }
+        }
+        return result;
+    }
+
+    /**
+     * Create an AuthorityValue from a Person retrieved using the given orcid identifier.
+     * @param id orcid identifier
+     * @return AuthorityValue
+     */
+    public AuthorityValue queryAuthorityID(String id) {
+        Person person = getBio(id);
+        AuthorityValue valueFromPerson = Orcidv2AuthorityValue.create(person);
+        return valueFromPerson;
+    }
+
+    /**
+     * Retrieve a Person object based on a given orcid identifier
+     * @param id orcid identifier
+     * @return Person
+     */
+    public Person getBio(String id) {
+        log.debug("getBio called with ID=" + id);
+        if(!isValid(id)){
+            return null;
+        }
+        InputStream bioDocument = restConnector.get(id + ((id.endsWith("/person")) ? "" : "/person"), accessToken);
+        XMLtoBio converter = new XMLtoBio();
+        Person person = converter.convertSinglePerson(bioDocument);
+        return person;
+    }
+
+
+    /**
+     * Retrieve a list of Person objects.
+     * @param text search string
+     * @param start offset to use
+     * @param rows how many rows to return
+     * @return List<Person>
+     */
+    public List<Person> queryBio(String text, int start, int rows) {
+        if (rows > 100) {
+            throw new IllegalArgumentException("The maximum number of results to retrieve cannot exceed 100.");
+        }
+
+        String searchPath = "search?q=" + URLEncoder.encode(text) + "&start=" + start + "&rows=" + rows;
+        log.debug("queryBio searchPath=" + searchPath + " accessToken=" + accessToken);
+        InputStream bioDocument = restConnector.get(searchPath, accessToken);
+        XMLtoBio converter = new XMLtoBio();
+        List<Person> bios = converter.convert(bioDocument);
+        return bios;
+    }
+
+    /**
+     * Retrieve a list of Person objects.
+     * @param text search string
+     * @param max how many rows to return
+     * @return List<Person>
+     */
+    public List<Person> queryBio(String text, int max) {
+        return queryBio(text, 0, max);
+    }
+
+    /**
+     * Check to see if the provided text has the correct ORCID syntax.
+     * Since only searching on ORCID id is allowed, this way, we filter out any queries that would return a blank result anyway
+     */
+    private boolean isValid(String text) {
+        return StringUtils.isNotBlank(text) && text.matches(Orcidv2AuthorityValue.ORCID_ID_SYNTAX);
+    }
+}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/Orcidv2AuthorityValue.java b/dspace-api/src/main/java/org/dspace/authority/orcid/Orcidv2AuthorityValue.java
new file mode 100644
index 000000000..30eb51b5d
--- /dev/null
+++ b/dspace-api/src/main/java/org/dspace/authority/orcid/Orcidv2AuthorityValue.java
@@ -0,0 +1,330 @@
+/**
+ * The contents of this file are subject to the license and copyright
+ * detailed in the LICENSE and NOTICE files at the root of the source
+ * tree and available online at
+ *
+ * http://www.dspace.org/license/
+ */
+package org.dspace.authority.orcid;
+
+import org.apache.commons.lang.StringUtils;
+import org.apache.solr.common.SolrDocument;
+import org.apache.solr.common.SolrInputDocument;
+import org.dspace.authority.AuthorityValue;
+import org.dspace.authority.AuthorityValueGenerator;
+import org.dspace.authority.PersonAuthorityValue;
+import org.dspace.utils.DSpace;
+import org.orcid.jaxb.model.common_v2.ExternalId;
+import org.orcid.jaxb.model.record_v2.*;
+
+import java.util.*;
+
+/**
+ * @author Jonas Van Goolen (jonas at atmire dot com)
+ */
+public class Orcidv2AuthorityValue extends PersonAuthorityValue {
+
+    /*
+     * The ORCID identifier
+     */
+    private String orcid_id;
+
+    /*
+     * Map containing key-value pairs filled in by "setValues(Person person)".
+     * This represents all dynamic information of the object.
+     */
+    private Map<String, List<String>> otherMetadata = new HashMap<String, List<String>>();
+
+    /**
+     * The syntax that the ORCID id needs to conform to
+     */
+    public static final String ORCID_ID_SYNTAX = "\\d{4}-\\d{4}-\\d{4}-(\\d{3}X|\\d{4})";
+
+
+    /**
+     * Creates an instance of Orcidv2AuthorityValue with only uninitialized fields.
+     * This is meant to be filled in with values from an existing record.
+     * To create a brand new Orcidv2AuthorityValue, use create()
+     */
+    public Orcidv2AuthorityValue() {
+    }
+
+    public Orcidv2AuthorityValue(SolrDocument document) {
+        super(document);
+    }
+
+
+    public String getOrcid_id() {
+        return orcid_id;
+    }
+
+    public void setOrcid_id(String orcid_id) {
+        this.orcid_id = orcid_id;
+    }
+
+    /**
+     * Create an empty authority.
+     * @return OrcidAuthorityValue
+     */
+    public static Orcidv2AuthorityValue create() {
+        Orcidv2AuthorityValue orcidAuthorityValue = new Orcidv2AuthorityValue();
+        orcidAuthorityValue.setId(UUID.randomUUID().toString());
+        orcidAuthorityValue.updateLastModifiedDate();
+        orcidAuthorityValue.setCreationDate(new Date());
+        return orcidAuthorityValue;
+    }
+
+    /**
+     * Create an authority based on a given orcid bio
+     * @return OrcidAuthorityValue
+     */
+    public static Orcidv2AuthorityValue create(Person person) {
+        if (person == null) {
+            return null;
+        }
+        Orcidv2AuthorityValue authority = Orcidv2AuthorityValue.create();
+
+        authority.setValues(person);
+
+        return authority;
+    }
+
+    /**
+     * Initialize this instance based on a Person object
+     * @param person Person
+     */
+    protected void setValues(Person person) {
+        NameType name = person.getName();
+
+        if (!StringUtils.equals(name.getPath(), this.getOrcid_id())) {
+            this.setOrcid_id(name.getPath());
+        }
+
+        if (!StringUtils.equals(name.getFamilyName().getValue(), this.getLastName())) {
+            this.setLastName(name.getFamilyName().getValue());
+        }
+
+        if (!StringUtils.equals(name.getGivenNames().getValue(), this.getFirstName())) {
+            this.setFirstName(name.getGivenNames().getValue());
+        }
+
+        if (name.getCreditName() != null && StringUtils.isNotBlank(name.getCreditName().getValue())) {
+            if (!this.getNameVariants().contains(name.getCreditName())) {
+                this.addNameVariant(name.getCreditName().getValue());
+            }
+        }
+
+        if (person.getKeywords() != null) {
+            for (KeywordType keyword : person.getKeywords().getKeyword()) {
+                if (this.isNewMetadata("keyword", keyword.getContent())) {
+                    this.addOtherMetadata("keyword", keyword.getContent());
+                }
+            }
+        }
+
+        ExternalIdentifiers externalIdentifiers = person.getExternalIdentifiers();
+        if (externalIdentifiers != null) {
+            for (ExternalId externalIdentifier : externalIdentifiers.getExternalIdentifier()) {
+                if (this.isNewMetadata("external_identifier", externalIdentifier.getExternalIdValue())) {
+                    this.addOtherMetadata("external_identifier", externalIdentifier.getExternalIdValue());
+
+                }
+            }
+        }
+        if (person.getResearcherUrls() != null) {
+            for (ResearcherUrlType researcherUrl : person.getResearcherUrls().getResearcherUrl()) {
+                if (this.isNewMetadata("researcher_url", researcherUrl.getUrl().getValue())) {
+                    this.addOtherMetadata("researcher_url", researcherUrl.getUrl().getValue());
+                }
+            }
+
+        }
+        if (person.getBiography() != null) {
+            if (this.isNewMetadata("biography", person.getBiography().getContent())) {
+                this.addOtherMetadata("biography", person.getBiography().getContent());
+            }
+        }
+
+        this.setValue(this.getName());
+
+    }
+
+    /**
+     * Makes an instance of the AuthorityValue with the given information.
+     * @param info string info
+     * @return AuthorityValue
+     */
+    @Override
+    public AuthorityValue newInstance(String info) {
+        AuthorityValue authorityValue = null;
+        if (StringUtils.isNotBlank(info)) {
+            Orcidv2 orcid = new DSpace().getServiceManager().getServiceByName("AuthoritySource", Orcidv2.class);
+            authorityValue = orcid.queryAuthorityID(info);
+        } else {
+            authorityValue = this.create();
+        }
+        return authorityValue;
+    }
+
+    @Override
+    public void setValue(String value) {
+        super.setValue(value);
+    }
+
+    /**
+     * Check to see if the provided label / data pair is already present in the "otherMetadata" or not
+     * */
+    public boolean isNewMetadata(String label, String data) {
+        List<String> strings = getOtherMetadata().get(label);
+        boolean update;
+        if (strings == null) {
+            update = StringUtils.isNotBlank(data);
+        } else {
+            update = !strings.contains(data);
+        }
+        return update;
+    }
+
+    /**
+     * Add additional metadata to the otherMetadata map*/
+    public void addOtherMetadata(String label, String data) {
+        List<String> strings = otherMetadata.get(label);
+        if (strings == null) {
+            strings = new ArrayList<>();
+        }
+        strings.add(data);
+        otherMetadata.put(label, strings);
+    }
+
+    public Map<String, List<String>> getOtherMetadata() {
+        return otherMetadata;
+    }
+
+
+    /**
+     * Generate a solr record from this instance
+     * @return SolrInputDocument
+     */
+    @Override
+    public SolrInputDocument getSolrInputDocument() {
+        SolrInputDocument doc = super.getSolrInputDocument();
+        if (StringUtils.isNotBlank(getOrcid_id())) {
+            doc.addField("orcid_id", getOrcid_id());
+        }
+
+        for (String t : otherMetadata.keySet()) {
+            List<String> data = otherMetadata.get(t);
+            for (String data_entry : data) {
+                doc.addField("label_" + t, data_entry);
+            }
+        }
+        return doc;
+    }
+
+    /**
+     * Information that can be used the choice ui
+     * @return map
+     */
+    @Override
+    public Map<String, String> choiceSelectMap() {
+
+        Map<String, String> map = super.choiceSelectMap();
+
+        String orcid_id = getOrcid_id();
+        if (StringUtils.isNotBlank(orcid_id)) {
+            map.put("orcid", orcid_id);
+        }
+
+        return map;
+    }
+
+    @Override
+    public String getAuthorityType() {
+        return "orcid";
+    }
+
+    /**
+     * Provides a string that will allow this AuthorityType to be recognized and provides information to create a new instance to be created using public Orcidv2AuthorityValue newInstance(String info).
+     * @return see {@link org.dspace.authority.AuthorityValueGenerator#GENERATE AuthorityValueGenerator.GENERATE}
+     */
+    @Override
+    public String generateString() {
+        String generateString = AuthorityValueGenerator.GENERATE + getAuthorityType() + AuthorityValueGenerator.SPLIT;
+        if (StringUtils.isNotBlank(getOrcid_id())) {
+            generateString += getOrcid_id();
+        }
+        return generateString;
+    }
+
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) {
+            return true;
+        }
+        if (o == null || getClass() != o.getClass()) {
+            return false;
+        }
+
+        Orcidv2AuthorityValue that = (Orcidv2AuthorityValue) o;
+
+        if (orcid_id != null ? !orcid_id.equals(that.orcid_id) : that.orcid_id != null) {
+            return false;
+        }
+
+        return true;
+    }
+
+    @Override
+    public int hashCode() {
+        return orcid_id != null ? orcid_id.hashCode() : 0;
+    }
+
+    /**
+     * The regular equals() only checks if both AuthorityValues describe the same authority.
+     * This method checks if the AuthorityValues have different information
+     * E.g. it is used to decide when lastModified should be updated.
+     * @param o object
+     * @return true or false
+     */
+    @Override
+    public boolean hasTheSameInformationAs(Object o) {
+        if (this == o) {
+            return true;
+        }
+        if (o == null || getClass() != o.getClass()) {
+            return false;
+        }
+        if (!super.hasTheSameInformationAs(o)) {
+            return false;
+        }
+
+        Orcidv2AuthorityValue that = (Orcidv2AuthorityValue) o;
+
+        if (orcid_id != null ? !orcid_id.equals(that.orcid_id) : that.orcid_id != null) {
+            return false;
+        }
+
+        for (String key : otherMetadata.keySet()) {
+            if (otherMetadata.get(key) != null) {
+                List<String> metadata = otherMetadata.get(key);
+                List<String> otherMetadata = that.otherMetadata.get(key);
+                if (otherMetadata == null) {
+                    return false;
+                } else {
+                    HashSet<String> metadataSet = new HashSet<String>(metadata);
+                    HashSet<String> otherMetadataSet = new HashSet<String>(otherMetadata);
+                    if (!metadataSet.equals(otherMetadataSet)) {
+                        return false;
+                    }
+                }
+            } else {
+                if (that.otherMetadata.get(key) != null) {
+                    return false;
+                }
+            }
+        }
+
+        return true;
+    }
+}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/model/Bio.java b/dspace-api/src/main/java/org/dspace/authority/orcid/model/Bio.java
deleted file mode 100644
index b3ede32f3..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/model/Bio.java
+++ /dev/null
@@ -1,113 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-
-package org.dspace.authority.orcid.model;
-
-import java.util.LinkedHashSet;
-import java.util.Set;
-
-/**
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public class Bio {
-
-    protected String orcid;
-
-    protected BioName name;
-
-    protected String country;
-
-    protected Set<String> keywords;
-
-    protected Set<BioExternalIdentifier> bioExternalIdentifiers;
-
-    protected Set<BioResearcherUrl> researcherUrls;
-
-    protected String biography;
-
-    public Bio() {
-        this.name = new BioName();
-        keywords = new LinkedHashSet<String>();
-        bioExternalIdentifiers = new LinkedHashSet<BioExternalIdentifier>();
-        researcherUrls = new LinkedHashSet<BioResearcherUrl>();
-    }
-
-    public String getOrcid() {
-        return orcid;
-    }
-
-    public void setOrcid(String orcid) {
-        this.orcid = orcid;
-    }
-
-    public BioName getName() {
-        return name;
-    }
-
-    public void setName(BioName name) {
-        this.name = name;
-    }
-
-    public String getCountry() {
-        return country;
-    }
-
-    public void setCountry(String country) {
-        this.country = country;
-    }
-
-    public Set<String> getKeywords() {
-        return keywords;
-    }
-
-    public void addKeyword(String keyword) {
-        this.keywords.add(keyword);
-    }
-
-    public Set<BioExternalIdentifier> getBioExternalIdentifiers() {
-        return bioExternalIdentifiers;
-    }
-
-    public void addExternalIdentifier(BioExternalIdentifier externalReference) {
-        bioExternalIdentifiers.add(externalReference);
-    }
-
-    public Set<BioResearcherUrl> getResearcherUrls() {
-        return researcherUrls;
-    }
-
-    public void addResearcherUrl(BioResearcherUrl researcherUrl) {
-        researcherUrls.add(researcherUrl);
-    }
-
-    public String getBiography() {
-        return biography;
-    }
-
-    public void setBiography(String biography) {
-        this.biography = biography;
-    }
-
-    @Override
-    public String toString() {
-        return "Bio{" +
-                "orcid='" + orcid + '\'' +
-                ", name=" + name +
-                ", country='" + country + '\'' +
-                ", keywords=" + keywords +
-                ", bioExternalIdentifiers=" + bioExternalIdentifiers +
-                ", researcherUrls=" + researcherUrls +
-                ", biography='" + biography + '\'' +
-                '}';
-    }
-}
-
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/model/BioExternalIdentifier.java b/dspace-api/src/main/java/org/dspace/authority/orcid/model/BioExternalIdentifier.java
deleted file mode 100644
index 65f4161b0..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/model/BioExternalIdentifier.java
+++ /dev/null
@@ -1,109 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-package org.dspace.authority.orcid.model;
-
-/**
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public class BioExternalIdentifier {
-
-
-    protected String id_orcid;
-    protected String id_common_name;
-    protected String id_reference;
-    protected String id_url;
-
-    public BioExternalIdentifier(String id_orcid, String id_common_name, String id_reference, String id_url) {
-        this.id_orcid = id_orcid;
-        this.id_common_name = id_common_name;
-        this.id_reference = id_reference;
-        this.id_url = id_url;
-    }
-
-    public String getId_orcid() {
-        return id_orcid;
-    }
-
-    public void setId_orcid(String id_orcid) {
-        this.id_orcid = id_orcid;
-    }
-
-    public String getId_common_name() {
-        return id_common_name;
-    }
-
-    public void setId_common_name(String id_common_name) {
-        this.id_common_name = id_common_name;
-    }
-
-    public String getId_reference() {
-        return id_reference;
-    }
-
-    public void setId_reference(String id_reference) {
-        this.id_reference = id_reference;
-    }
-
-    public String getId_url() {
-        return id_url;
-    }
-
-    public void setId_url(String id_url) {
-        this.id_url = id_url;
-    }
-
-    @Override
-    public String toString() {
-        return "BioExternalIdentifier{" +
-                "id_orcid='" + id_orcid + '\'' +
-                ", id_common_name='" + id_common_name + '\'' +
-                ", id_reference='" + id_reference + '\'' +
-                ", id_url='" + id_url + '\'' +
-                '}';
-    }
-
-    @Override
-    public boolean equals(Object o) {
-        if (this == o) {
-            return true;
-        }
-        if (o == null || getClass() != o.getClass()) {
-            return false;
-        }
-
-        BioExternalIdentifier that = (BioExternalIdentifier) o;
-
-        if (id_common_name != null ? !id_common_name.equals(that.id_common_name) : that.id_common_name != null) {
-            return false;
-        }
-        if (id_orcid != null ? !id_orcid.equals(that.id_orcid) : that.id_orcid != null) {
-            return false;
-        }
-        if (id_reference != null ? !id_reference.equals(that.id_reference) : that.id_reference != null) {
-            return false;
-        }
-        if (id_url != null ? !id_url.equals(that.id_url) : that.id_url != null) {
-            return false;
-        }
-
-        return true;
-    }
-
-    @Override
-    public int hashCode() {
-        int result = id_orcid != null ? id_orcid.hashCode() : 0;
-        result = 31 * result + (id_common_name != null ? id_common_name.hashCode() : 0);
-        result = 31 * result + (id_reference != null ? id_reference.hashCode() : 0);
-        result = 31 * result + (id_url != null ? id_url.hashCode() : 0);
-        return result;
-    }
-}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/model/BioName.java b/dspace-api/src/main/java/org/dspace/authority/orcid/model/BioName.java
deleted file mode 100644
index faae5dacf..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/model/BioName.java
+++ /dev/null
@@ -1,115 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-package org.dspace.authority.orcid.model;
-
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public class BioName {
-
-    protected String givenNames;
-    protected String familyName;
-    protected String creditName;
-    protected List<String> otherNames;
-
-    BioName() {
-        otherNames = new ArrayList<String>();
-    }
-
-    BioName(String givenNames, String familyName, String creditName, List<String> otherNames) {
-        this.givenNames = givenNames;
-        this.familyName = familyName;
-        this.creditName = creditName;
-        this.otherNames = otherNames;
-    }
-
-    public String getGivenNames() {
-        return givenNames;
-    }
-
-    public void setGivenNames(String givenNames) {
-        this.givenNames = givenNames;
-    }
-
-    public String getFamilyName() {
-        return familyName;
-    }
-
-    public void setFamilyName(String familyName) {
-        this.familyName = familyName;
-    }
-
-    public String getCreditName() {
-        return creditName;
-    }
-
-    public void setCreditName(String creditName) {
-        this.creditName = creditName;
-    }
-
-    public List<String> getOtherNames() {
-        return otherNames;
-    }
-
-    public void setOtherNames(List<String> otherNames) {
-        this.otherNames = otherNames;
-    }
-
-    @Override
-    public String toString() {
-        return "BioName{" +
-                "givenNames='" + givenNames + '\'' +
-                ", familyName='" + familyName + '\'' +
-                ", creditName='" + creditName + '\'' +
-                ", otherNames=" + otherNames +
-                '}';
-    }
-
-    @Override
-    public boolean equals(Object o) {
-        if (this == o) {
-            return true;
-        }
-        if (o == null || getClass() != o.getClass()) {
-            return false;
-        }
-
-        BioName bioName = (BioName) o;
-
-        if (creditName != null ? !creditName.equals(bioName.creditName) : bioName.creditName != null) {
-            return false;
-        }
-        if (familyName != null ? !familyName.equals(bioName.familyName) : bioName.familyName != null) {
-            return false;
-        }
-        if (givenNames != null ? !givenNames.equals(bioName.givenNames) : bioName.givenNames != null) {
-            return false;
-        }
-        if (otherNames != null ? !otherNames.equals(bioName.otherNames) : bioName.otherNames != null) {
-            return false;
-        }
-
-        return true;
-    }
-
-    @Override
-    public int hashCode() {
-        int result = givenNames != null ? givenNames.hashCode() : 0;
-        result = 31 * result + (familyName != null ? familyName.hashCode() : 0);
-        result = 31 * result + (creditName != null ? creditName.hashCode() : 0);
-        result = 31 * result + (otherNames != null ? otherNames.hashCode() : 0);
-        return result;
-    }
-}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/model/BioResearcherUrl.java b/dspace-api/src/main/java/org/dspace/authority/orcid/model/BioResearcherUrl.java
deleted file mode 100644
index 6f3965b2e..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/model/BioResearcherUrl.java
+++ /dev/null
@@ -1,78 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-package org.dspace.authority.orcid.model;
-
-/**
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public class BioResearcherUrl {
-
-    protected String name;
-    protected String url;
-
-    public BioResearcherUrl(String name, String url) {
-        this.name = name;
-        this.url = url;
-    }
-
-    public String getName() {
-        return name;
-    }
-
-    public void setName(String name) {
-        this.name = name;
-    }
-
-    public String getUrl() {
-        return url;
-    }
-
-    public void setUrl(String url) {
-        this.url = url;
-    }
-
-    @Override
-    public String toString() {
-        return "BioResearcherUrl{" +
-                "name='" + name + '\'' +
-                ", url='" + url + '\'' +
-                '}';
-    }
-
-    @Override
-    public boolean equals(Object o) {
-        if (this == o) {
-            return true;
-        }
-        if (o == null || getClass() != o.getClass()) {
-            return false;
-        }
-
-        BioResearcherUrl that = (BioResearcherUrl) o;
-
-        if (name != null ? !name.equals(that.name) : that.name != null) {
-            return false;
-        }
-        if (url != null ? !url.equals(that.url) : that.url != null) {
-            return false;
-        }
-
-        return true;
-    }
-
-    @Override
-    public int hashCode() {
-        int result = name != null ? name.hashCode() : 0;
-        result = 31 * result + (url != null ? url.hashCode() : 0);
-        return result;
-    }
-}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/model/Citation.java b/dspace-api/src/main/java/org/dspace/authority/orcid/model/Citation.java
deleted file mode 100644
index 04ae3071e..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/model/Citation.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-package org.dspace.authority.orcid.model;
-
-/**
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public class Citation {
-
-    private CitationType type;
-    private String citation;
-
-    public Citation(CitationType type, String citation) {
-        this.type = type;
-        this.citation = citation;
-    }
-
-    public CitationType getType() {
-        return type;
-    }
-
-    public void setType(CitationType type) {
-        this.type = type;
-    }
-
-    public String getCitation() {
-        return citation;
-    }
-
-    public void setCitation(String citation) {
-        this.citation = citation;
-    }
-
-    @Override
-    public String toString() {
-        return "Citation{" +
-                "type=" + type +
-                ", citation='" + citation + '\'' +
-                '}';
-    }
-}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/model/CitationType.java b/dspace-api/src/main/java/org/dspace/authority/orcid/model/CitationType.java
deleted file mode 100644
index 687b3f667..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/model/CitationType.java
+++ /dev/null
@@ -1,29 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-
-package org.dspace.authority.orcid.model;
-
-/**
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public enum CitationType {
-
-    FORMATTED_UNSPECIFIED,
-    BIBTEX,
-    FORMATTED_APA,
-    FORMATTED_HARVARD,
-    FORMATTED_IEEE,
-    FORMATTED_MLA,
-    FORMATTED_VANCOUVER,
-    FORMATTED_CHICAGO
-
-}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/model/Contributor.java b/dspace-api/src/main/java/org/dspace/authority/orcid/model/Contributor.java
deleted file mode 100644
index b5fc118ad..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/model/Contributor.java
+++ /dev/null
@@ -1,111 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-
-package org.dspace.authority.orcid.model;
-
-import java.util.Set;
-
-/**
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public class Contributor {
-
-    private String orcid;
-    private String creditName;
-    private String email;
-    private Set<ContributorAttribute> contributorAttributes;
-
-    public Contributor(String orcid, String creditName, String email, Set<ContributorAttribute> contributorAttributes) {
-        this.orcid = orcid;
-        this.creditName = creditName;
-        this.email = email;
-        this.contributorAttributes = contributorAttributes;
-    }
-
-    public String getOrcid() {
-        return orcid;
-    }
-
-    public void setOrcid(String orcid) {
-        this.orcid = orcid;
-    }
-
-    public String getCreditName() {
-        return creditName;
-    }
-
-    public void setCreditName(String creditName) {
-        this.creditName = creditName;
-    }
-
-    public String getEmail() {
-        return email;
-    }
-
-    public void setEmail(String email) {
-        this.email = email;
-    }
-
-    public Set<ContributorAttribute> getContributorAttributes() {
-        return contributorAttributes;
-    }
-
-    public void setContributorAttributes(Set<ContributorAttribute> contributorAttributes) {
-        this.contributorAttributes = contributorAttributes;
-    }
-
-    @Override
-    public String toString() {
-        return "Contributor{" +
-                "orcid='" + orcid + '\'' +
-                ", creditName='" + creditName + '\'' +
-                ", email='" + email + '\'' +
-                ", contributorAttributes=" + contributorAttributes +
-                '}';
-    }
-
-    @Override
-    public boolean equals(Object o) {
-        if (this == o) {
-            return true;
-        }
-        if (o == null || getClass() != o.getClass()) {
-            return false;
-        }
-
-        Contributor that = (Contributor) o;
-
-        if (contributorAttributes != null ? !contributorAttributes.equals(that.contributorAttributes) : that.contributorAttributes != null) {
-            return false;
-        }
-        if (creditName != null ? !creditName.equals(that.creditName) : that.creditName != null) {
-            return false;
-        }
-        if (email != null ? !email.equals(that.email) : that.email != null) {
-            return false;
-        }
-        if (orcid != null ? !orcid.equals(that.orcid) : that.orcid != null) {
-            return false;
-        }
-
-        return true;
-    }
-
-    @Override
-    public int hashCode() {
-        int result = orcid != null ? orcid.hashCode() : 0;
-        result = 31 * result + (creditName != null ? creditName.hashCode() : 0);
-        result = 31 * result + (email != null ? email.hashCode() : 0);
-        result = 31 * result + (contributorAttributes != null ? contributorAttributes.hashCode() : 0);
-        return result;
-    }
-}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/model/ContributorAttribute.java b/dspace-api/src/main/java/org/dspace/authority/orcid/model/ContributorAttribute.java
deleted file mode 100644
index ec9f84340..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/model/ContributorAttribute.java
+++ /dev/null
@@ -1,79 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-
-package org.dspace.authority.orcid.model;
-
-/**
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public class ContributorAttribute {
-
-    private ContributorAttributeRole role;
-    private ContributorAttributeSequence sequence;
-
-    public ContributorAttribute(ContributorAttributeRole role, ContributorAttributeSequence sequence) {
-        this.role = role;
-        this.sequence = sequence;
-    }
-
-    public ContributorAttributeRole getRole() {
-        return role;
-    }
-
-    public void setRole(ContributorAttributeRole role) {
-        this.role = role;
-    }
-
-    public ContributorAttributeSequence getSequence() {
-        return sequence;
-    }
-
-    public void setSequence(ContributorAttributeSequence sequence) {
-        this.sequence = sequence;
-    }
-
-    @Override
-    public String toString() {
-        return "ContributorAttribute{" +
-                "role=" + role +
-                ", sequence=" + sequence +
-                '}';
-    }
-
-    @Override
-    public boolean equals(Object o) {
-        if (this == o) {
-            return true;
-        }
-        if (o == null || getClass() != o.getClass()) {
-            return false;
-        }
-
-        ContributorAttribute that = (ContributorAttribute) o;
-
-        if (role != that.role) {
-            return false;
-        }
-        if (sequence != that.sequence) {
-            return false;
-        }
-
-        return true;
-    }
-
-    @Override
-    public int hashCode() {
-        int result = role != null ? role.hashCode() : 0;
-        result = 31 * result + (sequence != null ? sequence.hashCode() : 0);
-        return result;
-    }
-}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/model/ContributorAttributeRole.java b/dspace-api/src/main/java/org/dspace/authority/orcid/model/ContributorAttributeRole.java
deleted file mode 100644
index a22546b56..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/model/ContributorAttributeRole.java
+++ /dev/null
@@ -1,32 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-package org.dspace.authority.orcid.model;
-
-/**
- * http://support.orcid.org/knowledgebase/articles/118843-anatomy-of-a-contributor
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public enum ContributorAttributeRole {
-
-    AUTHOR,
-    ASSIGNEE,
-    EDITOR,
-    CHAIR_OR_TRANSLATOR,
-    CO_INVESTIGATOR,
-    CO_INVENTOR,
-    GRADUATE_STUDENT,
-    OTHER_INVENTOR,
-    PRINCIPAL_INVESTIGATOR,
-    POSTDOCTORAL_RESEARCHER,
-    SUPPORT_STAFF
-
-}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/model/ContributorAttributeSequence.java b/dspace-api/src/main/java/org/dspace/authority/orcid/model/ContributorAttributeSequence.java
deleted file mode 100644
index 8407fe28d..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/model/ContributorAttributeSequence.java
+++ /dev/null
@@ -1,23 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-package org.dspace.authority.orcid.model;
-
-/**
- * http://support.orcid.org/knowledgebase/articles/118843-anatomy-of-a-contributor
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public enum ContributorAttributeSequence {
-
-    FIRST,
-    ADDITIONAL
-
-}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/model/Work.java b/dspace-api/src/main/java/org/dspace/authority/orcid/model/Work.java
deleted file mode 100644
index 0b7552d1e..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/model/Work.java
+++ /dev/null
@@ -1,117 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-package org.dspace.authority.orcid.model;
-
-import java.util.Set;
-
-/**
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public class Work {
-
-    private WorkTitle workTitle;
-    private String description;
-    private Citation citation;
-    private WorkType workType;
-    private String publicationDate;
-    private WorkExternalIdentifier workExternalIdentifier;
-    private String url;
-    private Set<Contributor> contributors;
-    private String workSource;
-
-    public WorkTitle getWorkTitle() {
-        return workTitle;
-    }
-
-    public void setWorkTitle(WorkTitle workTitle) {
-        this.workTitle = workTitle;
-    }
-
-    public String getDescription() {
-        return description;
-    }
-
-    public void setDescription(String description) {
-        this.description = description;
-    }
-
-    public Citation getCitation() {
-        return citation;
-    }
-
-    public void setCitation(Citation citation) {
-        this.citation = citation;
-    }
-
-    public WorkType getWorkType() {
-        return workType;
-    }
-
-    public void setWorkType(WorkType workType) {
-        this.workType = workType;
-    }
-
-    public String getPublicationDate() {
-        return publicationDate;
-    }
-
-    public void setPublicationDate(String publicationDate) {
-        this.publicationDate = publicationDate;
-    }
-
-    public WorkExternalIdentifier getWorkExternalIdentifier() {
-        return workExternalIdentifier;
-    }
-
-    public void setWorkExternalIdentifier(WorkExternalIdentifier workExternalIdentifier) {
-        this.workExternalIdentifier = workExternalIdentifier;
-    }
-
-    public String getUrl() {
-        return url;
-    }
-
-    public void setUrl(String url) {
-        this.url = url;
-    }
-
-    public Set<Contributor> getContributors() {
-        return contributors;
-    }
-
-    public void setContributors(Set<Contributor> contributors) {
-        this.contributors = contributors;
-    }
-
-    public String getWorkSource() {
-        return workSource;
-    }
-
-    public void setWorkSource(String workSource) {
-        this.workSource = workSource;
-    }
-
-    @Override
-    public String toString() {
-        return "Work{" +
-                "workTitle=" + workTitle +
-                ", description='" + description + '\'' +
-                ", citation=" + citation +
-                ", workType=" + workType +
-                ", publicationDate='" + publicationDate + '\'' +
-                ", workExternalIdentifier=" + workExternalIdentifier +
-                ", url='" + url + '\'' +
-                ", contributors=" + contributors +
-                ", workSource='" + workSource + '\'' +
-                '}';
-    }
-}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/model/WorkExternalIdentifier.java b/dspace-api/src/main/java/org/dspace/authority/orcid/model/WorkExternalIdentifier.java
deleted file mode 100644
index b0fca0303..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/model/WorkExternalIdentifier.java
+++ /dev/null
@@ -1,71 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-package org.dspace.authority.orcid.model;
-
-/**
- * http://support.orcid.org/knowledgebase/articles/118807
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public class WorkExternalIdentifier {
-
-    private WorkExternalIdentifierType workExternalIdentifierType;
-    private String workExternalIdenfitierID;
-
-    public WorkExternalIdentifier(WorkExternalIdentifierType workExternalIdentifierType, String workExternalIdenfitierID) {
-        this.workExternalIdentifierType = workExternalIdentifierType;
-        this.workExternalIdenfitierID = workExternalIdenfitierID;
-    }
-
-    public WorkExternalIdentifierType getWorkExternalIdentifierType() {
-        return workExternalIdentifierType;
-    }
-
-    public void setWorkExternalIdentifierType(WorkExternalIdentifierType workExternalIdentifierType) {
-        this.workExternalIdentifierType = workExternalIdentifierType;
-    }
-
-    @Override
-    public String toString() {
-        return "WorkExternalIdentifier{" +
-                "workExternalIdentifierType=" + workExternalIdentifierType +
-                ", workExternalIdenfitierID='" + workExternalIdenfitierID + '\'' +
-                '}';
-    }
-
-    @Override
-    public boolean equals(Object o) {
-        if (this == o) {
-            return true;
-        }
-        if (o == null || getClass() != o.getClass()) {
-            return false;
-        }
-
-        WorkExternalIdentifier that = (WorkExternalIdentifier) o;
-
-        if (workExternalIdenfitierID != null ? !workExternalIdenfitierID.equals(that.workExternalIdenfitierID) : that.workExternalIdenfitierID != null) {
-            return false;
-        }
-        if (workExternalIdentifierType != that.workExternalIdentifierType) {
-            return false;
-        }
-
-        return true;
-    }
-
-    @Override
-    public int hashCode() {
-        int result = workExternalIdentifierType != null ? workExternalIdentifierType.hashCode() : 0;
-        result = 31 * result + (workExternalIdenfitierID != null ? workExternalIdenfitierID.hashCode() : 0);
-        return result;
-    }
-}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/model/WorkExternalIdentifierType.java b/dspace-api/src/main/java/org/dspace/authority/orcid/model/WorkExternalIdentifierType.java
deleted file mode 100644
index 17d74371f..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/model/WorkExternalIdentifierType.java
+++ /dev/null
@@ -1,42 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-package org.dspace.authority.orcid.model;
-
-/**
- * http://support.orcid.org/knowledgebase/articles/118807
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public enum WorkExternalIdentifierType {
-
-//    OTHER_ID,
-    ARXIV,
-    ASIN,
-    ASIN_TLD,
-    BIBCODE,
-    DOI,
-    EID,
-    ISBN,
-    ISSN,
-    JFM,
-    JSTOR,
-    LCCN,
-    MR,
-    OCLC,
-    OL,
-    OSTI,
-    PMC,
-    PMID,
-    RFC,
-    SSRN,
-    ZBL
-
-}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/model/WorkTitle.java b/dspace-api/src/main/java/org/dspace/authority/orcid/model/WorkTitle.java
deleted file mode 100644
index e9961c9d2..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/model/WorkTitle.java
+++ /dev/null
@@ -1,64 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-package org.dspace.authority.orcid.model;
-
-import java.util.Map;
-
-/**
- * http://support.orcid.org/knowledgebase/articles/118807
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public class WorkTitle {
-
-    private String title;
-    private String subtitle;
-    private Map<String, String> translatedTitles;
-
-    public WorkTitle(String title, String subtitle, Map<String, String> translatedTitles) {
-        this.title = title;
-        this.subtitle = subtitle;
-        this.translatedTitles = translatedTitles;
-    }
-
-    public String getTitle() {
-        return title;
-    }
-
-    public void setTitle(String title) {
-        this.title = title;
-    }
-
-    public String getSubtitle() {
-        return subtitle;
-    }
-
-    public void setSubtitle(String subtitle) {
-        this.subtitle = subtitle;
-    }
-
-    public String getTranslatedTitles(String languageCode) {
-        return translatedTitles.get(languageCode);
-    }
-
-    public void setTranslatedTitle(String languageCode, String translatedTitle) {
-        translatedTitles.put(languageCode, translatedTitle);
-    }
-
-    @Override
-    public String toString() {
-        return "WorkTitle{" +
-                "title='" + title + '\'' +
-                ", subtitle='" + subtitle + '\'' +
-                ", translatedTitles=" + translatedTitles +
-                '}';
-    }
-}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/model/WorkType.java b/dspace-api/src/main/java/org/dspace/authority/orcid/model/WorkType.java
deleted file mode 100644
index 5c4ca354c..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/model/WorkType.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-package org.dspace.authority.orcid.model;
-
-/**
- * http://support.orcid.org/knowledgebase/articles/118795
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public enum WorkType {
-
-    BOOK,
-    BOOK_CHAPTER,
-    BOOK_REVIEW,
-    DICTIONARY_ENTRY,
-    DISSERTATION,
-    ENCYCLOPEDIA_ARTICLE,
-    EDITED_BOOK,
-    JOURNAL_ARTICLE,
-    JOURNAL_ISSUE,
-    MAGAZINE_ARTICLE,
-    MANUAL,
-    ONLINE_RESOURCE,
-    NEWSLETTER_ARTICLE,
-    NEWSPAPER_ARTICLE,
-    REPORT,
-    RESEARCH_TOOL,
-    SUPERVISED_STUDENT_PUBLICATION,
-    TEST,
-    TRANSLATION,
-    WEBSITE,
-    CONFERENCE_ABSTRACT,
-    CONFERENCE_PAPER,
-    CONFERENCE_POSTER,
-    DISCLOSURE,
-    LICENSE,
-    PATENT,
-    REGISTERED_COPYRIGHT,
-    ARTISTIC_PERFORMANCE,
-    DATA_SET,
-    INVENTION,
-    LECTURE_SPEECH,
-    RESEARCH_TECHNIQUE,
-    SPIN_OFF_COMPANY,
-    STANDARDS_AND_POLICY,
-    TECHNICAL_STANDARD,
-    OTHER
-
-}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/xml/Converter.java b/dspace-api/src/main/java/org/dspace/authority/orcid/xml/Converter.java
index b445013bc..93394a189 100644
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/xml/Converter.java
+++ b/dspace-api/src/main/java/org/dspace/authority/orcid/xml/Converter.java
@@ -8,7 +8,13 @@
 package org.dspace.authority.orcid.xml;
 
 import org.apache.log4j.Logger;
-import org.w3c.dom.Document;
+import org.xml.sax.SAXException;
+
+import javax.xml.bind.JAXBContext;
+import javax.xml.bind.JAXBException;
+import javax.xml.bind.Unmarshaller;
+import java.io.InputStream;
+import java.net.URISyntaxException;
 
 /**
  *
@@ -24,11 +30,15 @@ public abstract class Converter<T> {
      */
     private static Logger log = Logger.getLogger(Converter.class);
 
+    public abstract T convert(InputStream document);
 
-    protected void processError(Document xml) {
-        String errorMessage = XMLErrors.getErrorMessage(xml);
-        log.error("The orcid-message reports an error: " + errorMessage);
+    protected Object unmarshall(InputStream input, Class<?> type) throws SAXException, URISyntaxException {
+        try {
+            JAXBContext context = JAXBContext.newInstance(type);
+            Unmarshaller unmarshaller = context.createUnmarshaller();
+            return unmarshaller.unmarshal(input);
+        } catch (JAXBException e) {
+            throw new RuntimeException("Unable to unmarshall orcid message" + e);
+        }
     }
-
-    public abstract T convert(Document document);
 }
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/xml/XMLErrors.java b/dspace-api/src/main/java/org/dspace/authority/orcid/xml/XMLErrors.java
deleted file mode 100644
index ddf10ee2a..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/xml/XMLErrors.java
+++ /dev/null
@@ -1,73 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-package org.dspace.authority.orcid.xml;
-
-import org.dspace.authority.util.XMLUtils;
-import org.apache.log4j.Logger;
-import org.w3c.dom.Document;
-
-import javax.xml.xpath.XPathExpressionException;
-
-/**
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public class XMLErrors {
-
-    /**
-     * log4j logger
-     */
-    private static Logger log = Logger.getLogger(XMLErrors.class);
-
-    private static final String ERROR_DESC = "/orcid-message/error-desc";
-
-    /**
-     * Evaluates whether a given xml document contains errors or not.
-     *
-     * @param xml The given xml document
-     * @return true if the given xml document is null
-     * or if it contains errors
-     */
-    public static boolean check(Document xml) {
-
-        if (xml == null) {
-            return true;
-        }
-
-        String textContent = null;
-
-        try {
-            textContent = XMLUtils.getTextContent(xml, ERROR_DESC);
-        } catch (XPathExpressionException e) {
-            log.error("Error while checking for errors in orcid message", e);
-        }
-
-        return textContent == null;
-    }
-
-    public static String getErrorMessage(Document xml) {
-
-        if (xml == null) {
-            return "Did not receive an XML document.";
-        }
-
-        String textContent = null;
-
-        try {
-            textContent = XMLUtils.getTextContent(xml, ERROR_DESC);
-        } catch (XPathExpressionException e) {
-            log.error("Error while checking for errors in orcid message", e);
-        }
-
-        return textContent;
-    }
-
-}
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/xml/XMLtoBio.java b/dspace-api/src/main/java/org/dspace/authority/orcid/xml/XMLtoBio.java
index 7b2705ca5..8a5ef19ed 100644
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/xml/XMLtoBio.java
+++ b/dspace-api/src/main/java/org/dspace/authority/orcid/xml/XMLtoBio.java
@@ -7,23 +7,22 @@
  */
 package org.dspace.authority.orcid.xml;
 
-import org.dspace.authority.orcid.model.Bio;
-import org.dspace.authority.orcid.model.BioExternalIdentifier;
-import org.dspace.authority.orcid.model.BioName;
-import org.dspace.authority.orcid.model.BioResearcherUrl;
-import org.dspace.authority.util.XMLUtils;
-import org.apache.log4j.Logger;
-import org.w3c.dom.Document;
-import org.w3c.dom.Node;
-import org.w3c.dom.NodeList;
 
-import javax.xml.xpath.XPathExpressionException;
+import org.apache.log4j.Logger;
+import org.dspace.authority.orcid.Orcidv2;
+import org.dspace.utils.DSpace;
+import org.orcid.jaxb.model.common_v2.OrcidId;
+import org.orcid.jaxb.model.record_v2.Person;
+import org.orcid.jaxb.model.search_v2.Result;
+import org.orcid.jaxb.model.search_v2.Search;
+import org.xml.sax.SAXException;
+
+import java.io.InputStream;
+import java.net.URISyntaxException;
 import java.util.ArrayList;
-import java.util.Iterator;
 import java.util.List;
 
 /**
- *
  * @author Antoine Snyers (antoine at atmire.com)
  * @author Kevin Van de Velde (kevin at atmire dot com)
  * @author Ben Bosman (ben at atmire dot com)
@@ -36,216 +35,39 @@ public class XMLtoBio extends Converter {
      */
     private static Logger log = Logger.getLogger(XMLtoBio.class);
 
-    /**
-     * orcid-message XPATHs
-     */
-
-    protected String ORCID_BIO = "//orcid-bio";
-
-//    protected String ORCID = "parent::*/orcid";
-    protected String ORCID = "parent::*/orcid-identifier/path";
-
-    protected String PERSONAL_DETAILS = "personal-details";
-    protected String GIVEN_NAMES = PERSONAL_DETAILS + "/given-names";
-    protected String FAMILY_NAME = PERSONAL_DETAILS + "/family-name";
-    protected String CREDIT_NAME = PERSONAL_DETAILS + "/credit-name";
-    protected String OTHER_NAMES = PERSONAL_DETAILS + "/other-names";
-    protected String OTHER_NAME = OTHER_NAMES + "/other-name";
-
-    protected String CONTACT_DETAILS = "contact-details";
-    protected String COUNTRY = CONTACT_DETAILS + "/address/country";
-
-    protected String KEYWORDS = "keywords";
-    protected String KEYWORD = KEYWORDS + "/keyword";
-
-    protected String EXTERNAL_IDENTIFIERS = "external-identifiers";
-    protected String EXTERNAL_IDENTIFIER = EXTERNAL_IDENTIFIERS + "/external-identifier";
-    protected String EXTERNAL_ID_ORCID = "external-id-orcid";
-    protected String EXTERNAL_ID_COMMNON_NAME = "external-id-common-name";
-    protected String EXTERNAL_ID_REFERENCE = "external-id-reference";
-    protected String EXTERNAL_ID_URL = "external-id-url";
-
-    protected String RESEARCHER_URLS = "researcher-urls";
-    protected String RESEARCHER_URL = "researcher-urls/researcher-url";
-    protected String URL_NAME = "url-name";
-    protected String URL = "url";
-
-    protected String BIOGRAPHY = ORCID_BIO + "/biography";
-
-    protected String AFFILIATIONS = ORCID_BIO + "/affiliation";
-
-    /**
-     * Regex
-     */
-
-    protected String ORCID_NOT_FOUND = "ORCID [\\d-]* not found";
-
-
-    public List<Bio> convert(Document xml) {
-        List<Bio> result = new ArrayList<Bio>();
-
-        if (XMLErrors.check(xml)) {
-
-            try {
-                Iterator<Node> iterator = XMLUtils.getNodeListIterator(xml, ORCID_BIO);
-                while (iterator.hasNext()) {
-                    Bio bio = convertBio(iterator.next());
-                    result.add(bio);
-                }
-            } catch (XPathExpressionException e) {
-                log.error("Error in xpath syntax", e);
-            }
-        } else {
-            processError(xml);
-        }
-
-        return result;
-    }
-
-    private Bio convertBio(Node node) {
-        Bio bio = new Bio();
-
-        setOrcid(node,bio);
-        setPersonalDetails(node, bio);
-        setContactDetails(node, bio);
-        setKeywords(node, bio);
-        setExternalIdentifiers(node, bio);
-        setResearcherUrls(node, bio);
-        setBiography(node, bio);
-
-        return bio;
-    }
-
-    protected void processError(Document xml)  {
-        String errorMessage = XMLErrors.getErrorMessage(xml);
-
-        if(errorMessage.matches(ORCID_NOT_FOUND))
-        {
-            // do something?
-        }
-
-        log.error("The orcid-message reports an error: " + errorMessage);
-    }
-
-
-    private void setOrcid(Node node, Bio bio) {
+    @Override
+    public List<Person> convert(InputStream xml) {
+        List<Person> bios= new ArrayList<>();
         try {
-            String orcid = XMLUtils.getTextContent(node, ORCID);
-            bio.setOrcid(orcid);
-        } catch (XPathExpressionException e) {
-            log.debug("Error in finding the biography in bio xml.", e);
-        }
-    }
-
-    protected void setBiography(Node xml, Bio bio) {
-        try {
-            String biography = XMLUtils.getTextContent(xml, BIOGRAPHY);
-            bio.setBiography(biography);
-        } catch (XPathExpressionException e) {
-            log.error("Error in finding the biography in bio xml.", e);
-        }
-    }
-
-    protected void setResearcherUrls(Node xml, Bio bio) {
-        try {
-            NodeList researcher_urls = XMLUtils.getNodeList(xml, RESEARCHER_URL);
-            if (researcher_urls != null) {
-                for (int i = 0; i < researcher_urls.getLength(); i++) {
-                    Node researcher_url = researcher_urls.item(i);
-                    if (researcher_url.getNodeType() != Node.TEXT_NODE) {
-                        String url_name = XMLUtils.getTextContent(researcher_url, URL_NAME);
-                        String url = XMLUtils.getTextContent(researcher_url, URL);
-                        BioResearcherUrl researcherUrl = new BioResearcherUrl(url_name, url);
-                        bio.addResearcherUrl(researcherUrl);
-                    }
-                }
-            }
-        } catch (XPathExpressionException e) {
-            log.error("Error in finding the researcher url in bio xml.", e);
-        }
-    }
-
-    protected void setExternalIdentifiers(Node xml, Bio bio) {
-        try {
-
-            Iterator<Node> iterator = XMLUtils.getNodeListIterator(xml, EXTERNAL_IDENTIFIER);
-            while (iterator.hasNext()) {
-                Node external_identifier = iterator.next();
-                String id_orcid = XMLUtils.getTextContent(external_identifier, EXTERNAL_ID_ORCID);
-                String id_common_name = XMLUtils.getTextContent(external_identifier, EXTERNAL_ID_COMMNON_NAME);
-                String id_reference = XMLUtils.getTextContent(external_identifier, EXTERNAL_ID_REFERENCE);
-                String id_url = XMLUtils.getTextContent(external_identifier, EXTERNAL_ID_URL);
-                BioExternalIdentifier externalIdentifier = new BioExternalIdentifier(id_orcid, id_common_name, id_reference, id_url);
-                bio.addExternalIdentifier(externalIdentifier);
-            }
-
-        } catch (XPathExpressionException e) {
-            log.error("Error in finding the external identifier in bio xml.", e);
-        }
-    }
-
-    protected void setKeywords(Node xml, Bio bio) {
-        try {
-            NodeList keywords = XMLUtils.getNodeList(xml, KEYWORD);
-            if (keywords != null) {
-                for (int i = 0; i < keywords.getLength(); i++) {
-                    String keyword = keywords.item(i).getTextContent();
-                    String[] split = keyword.split(",");
-                    for (String k : split) {
-                        bio.addKeyword(k.trim());
+            Orcidv2 connector = new DSpace().getServiceManager().getServiceByName("AuthoritySource", Orcidv2.class);
+
+            Search search = (Search) unmarshall(xml, Search.class);
+            for(Result result : search.getResult()){
+                OrcidId orcidIdentifier = result.getOrcidIdentifier();
+                if(orcidIdentifier!=null){
+                    log.debug("Found OrcidId=" + orcidIdentifier.toString());
+                    String orcid = orcidIdentifier.getUriPath();
+                    Person bio = connector.getBio(orcid);
+                    if(bio!=null){
+                        bios.add(bio);
                     }
                 }
             }
-        } catch (XPathExpressionException e) {
-            log.error("Error in finding the keywords in bio xml.", e);
-        }
-    }
-
-    protected void setContactDetails(Node xml, Bio bio) {
-        try {
-            String country = XMLUtils.getTextContent(xml, COUNTRY);
-            bio.setCountry(country);
-        } catch (XPathExpressionException e) {
-            log.error("Error in finding the country in bio xml.", e);
+        } catch (SAXException | URISyntaxException e) {
+            log.error(e);
         }
+        return bios;
     }
 
-    protected void setPersonalDetails(Node xml, Bio bio) {
-        BioName name = bio.getName();
-
-        try {
-            String givenNames = XMLUtils.getTextContent(xml, GIVEN_NAMES);
-            name.setGivenNames(givenNames);
-        } catch (XPathExpressionException e) {
-            log.error("Error in finding the given names in bio xml.", e);
-        }
-
+    public Person convertSinglePerson(InputStream xml) {
+        Person person = null;
         try {
-            String familyName = XMLUtils.getTextContent(xml, FAMILY_NAME);
-            name.setFamilyName(familyName);
-        } catch (XPathExpressionException e) {
-            log.error("Error in finding the family name in bio xml.", e);
-        }
-
-        try {
-            String creditName = XMLUtils.getTextContent(xml, CREDIT_NAME);
-            name.setCreditName(creditName);
-        } catch (XPathExpressionException e) {
-            log.error("Error in finding the credit name in bio xml.", e);
-        }
-
-        try {
-
-            Iterator<Node> iterator = XMLUtils.getNodeListIterator(xml, OTHER_NAME);
-            while (iterator.hasNext()) {
-                Node otherName = iterator.next();
-                String textContent = otherName.getTextContent();
-                name.getOtherNames().add(textContent.trim());
-            }
-
-        } catch (XPathExpressionException e) {
-            log.error("Error in finding the other names in bio xml.", e);
+            person = (Person) unmarshall(xml, Person.class);
+            return person;
+        } catch (SAXException | URISyntaxException e) {
+            log.error(e);
         }
+        return null;
     }
 
 }
diff --git a/dspace-api/src/main/java/org/dspace/authority/orcid/xml/XMLtoWork.java b/dspace-api/src/main/java/org/dspace/authority/orcid/xml/XMLtoWork.java
deleted file mode 100644
index 56ca0febe..000000000
--- a/dspace-api/src/main/java/org/dspace/authority/orcid/xml/XMLtoWork.java
+++ /dev/null
@@ -1,239 +0,0 @@
-/**
- * The contents of this file are subject to the license and copyright
- * detailed in the LICENSE and NOTICE files at the root of the source
- * tree and available online at
- *
- * http://www.dspace.org/license/
- */
-package org.dspace.authority.orcid.xml;
-
-import org.dspace.authority.orcid.model.*;
-import org.dspace.authority.util.*;
-import org.apache.commons.lang.StringUtils;
-import org.apache.log4j.Logger;
-import org.w3c.dom.Document;
-import org.w3c.dom.Node;
-import org.w3c.dom.NodeList;
-
-import javax.xml.xpath.XPathExpressionException;
-import java.util.*;
-
-/**
- *
- * @author Antoine Snyers (antoine at atmire.com)
- * @author Kevin Van de Velde (kevin at atmire dot com)
- * @author Ben Bosman (ben at atmire dot com)
- * @author Mark Diggory (markd at atmire dot com)
- */
-public class XMLtoWork extends Converter {
-
-    /**
-     * log4j logger
-     */
-    private static Logger log = Logger.getLogger(XMLtoWork.class);
-
-    /**
-     * orcid-message XPATHs
-     */
-
-    protected String ORCID_WORKS = "//orcid-works";
-    protected String ORCID_WORK = ORCID_WORKS + "/orcid-work";
-
-    protected String WORK_TITLE = "work-title";
-    protected String TITLE = WORK_TITLE + "/title";
-    protected String SUBTITLE = WORK_TITLE + "/subtitle";
-    protected String TRANSLATED_TITLES = WORK_TITLE + "/translated-title";
-    protected String TRANSLATED_TITLES_LANGUAGE = "@language-code";
-
-    protected String SHORT_DESCRIPTION = "short-description";
-
-    protected String WORK_CITATION = "work-citation";
-    protected String CITATION_TYPE = WORK_CITATION + "/work-citation-type";
-    protected String CITATION = WORK_CITATION + "/citation";
-
-    protected String WORK_TYPE = "work-type";
-
-    protected String PUBLICATION_DATE = "publication-date";
-    protected String YEAR = PUBLICATION_DATE + "/year";
-    protected String MONTH = PUBLICATION_DATE + "/month";
-    protected String DAY = PUBLICATION_DATE + "/day";
-
-    protected String WORK_EXTERNAL_IDENTIFIERS = "work-external-identifiers";
-    protected String WORK_EXTERNAL_IDENTIFIER = WORK_EXTERNAL_IDENTIFIERS + "/work-external-identifier";
-    protected String WORK_EXTERNAL_IDENTIFIER_TYPE = "work-external-identifier-type";
-    protected String WORK_EXTERNAL_IDENTIFIER_ID = "work-external-identifier-id";
-
-    protected String URL = "url";
-
-    protected String WORK_CONTRIBUTOR = "work-contributors";
-    protected String CONTRIBUTOR = WORK_CONTRIBUTOR+"/contributor";
-    protected String CONTRIBUTOR_ORCID = "contributor-orcid";
-    protected String CREDIT_NAME = "credit-name";
-    protected String CONTRIBUTOR_EMAIL = "contributor-email";
-    protected String CONTRIBUTOR_ATTRIBUTES = "contributor-attributes";
-    protected String CONTRIBUTOR_SEQUENCE = "contributor-sequence";
-    protected String CONTRIBUTOR_ROLE = "contributor-role";
-
-    protected String WORK_SOURCE = "work-source";
-
-
-    public List<Work> convert(Document document) {
-        List<Work> result = new ArrayList<Work>();
-
-        if (XMLErrors.check(document)) {
-
-            try {
-                Iterator<Node> iterator = XMLUtils.getNodeListIterator(document, ORCID_WORK);
-                while (iterator.hasNext()) {
-                    Work work = convertWork(iterator.next());
-                    result.add(work);
-                }
-            } catch (XPathExpressionException e) {
-                log.error("Error in xpath syntax", e);
-            }
-        } else {
-            processError(document);
-        }
-
-        return result;
-    }
-
-    protected Work convertWork(Node node) throws XPathExpressionException {
-        Work work = new Work();
-        setTitle(node, work);
-        setDescription(node, work);
-        setCitation(node, work);
-        setWorkType(node, work);
-        setPublicationDate(node, work);
-        setExternalIdentifiers(node, work);
-        setUrl(node, work);
-        setContributors(node, work);
-        setWorkSource(node, work);
-
-        return work;
-    }
-
-    protected void setWorkSource(Node node, Work work) throws XPathExpressionException {
-        String workSource = XMLUtils.getTextContent(node, WORK_SOURCE);
-        work.setWorkSource(workSource);
-    }
-
-    protected void setContributors(Node node, Work work) throws XPathExpressionException {
-
-        Set<Contributor> contributors = new HashSet<Contributor>();
-
-        Iterator<Node> iterator = XMLUtils.getNodeListIterator(node, CONTRIBUTOR);
-        while (iterator.hasNext()) {
-            Node nextContributorNode = iterator.next();
-            String orcid = XMLUtils.getTextContent(nextContributorNode, CONTRIBUTOR_ORCID);
-            String creditName = XMLUtils.getTextContent(nextContributorNode, CREDIT_NAME);
-            String email = XMLUtils.getTextContent(nextContributorNode, CONTRIBUTOR_EMAIL);
-
-            Set<ContributorAttribute> contributorAttributes = new HashSet<ContributorAttribute>();
-            NodeList attributeNodes = XMLUtils.getNodeList(nextContributorNode, CONTRIBUTOR_ATTRIBUTES);
-            Iterator<Node> attributesIterator = XMLUtils.getNodeListIterator(attributeNodes);
-            while (attributesIterator.hasNext()) {
-                Node nextAttribute = attributesIterator.next();
-
-                String roleText = XMLUtils.getTextContent(nextAttribute, CONTRIBUTOR_ROLE);
-                ContributorAttributeRole role = EnumUtils.lookup(ContributorAttributeRole.class, roleText);
-
-                String sequenceText = XMLUtils.getTextContent(nextAttribute, CONTRIBUTOR_SEQUENCE);
-                ContributorAttributeSequence sequence = EnumUtils.lookup(ContributorAttributeSequence.class, sequenceText);
-
-                ContributorAttribute attribute = new ContributorAttribute(role, sequence);
-                contributorAttributes.add(attribute);
-            }
-
-            Contributor contributor = new Contributor(orcid, creditName, email, contributorAttributes);
-            contributors.add(contributor);
-        }
-
-        work.setContributors(contributors);
-    }
-
-    protected void setUrl(Node node, Work work) throws XPathExpressionException {
-        String url = XMLUtils.getTextContent(node, URL);
-        work.setUrl(url);
-    }
-
-    protected void setExternalIdentifiers(Node node, Work work) throws XPathExpressionException {
-
-        Iterator<Node> iterator = XMLUtils.getNodeListIterator(node, WORK_EXTERNAL_IDENTIFIER);
-        while (iterator.hasNext()) {
-            Node work_external_identifier = iterator.next();
-            String typeText = XMLUtils.getTextContent(work_external_identifier, WORK_EXTERNAL_IDENTIFIER_TYPE);
-
-            WorkExternalIdentifierType type = EnumUtils.lookup(WorkExternalIdentifierType.class, typeText);
-
-            String id = XMLUtils.getTextContent(work_external_identifier, WORK_EXTERNAL_IDENTIFIER_ID);
-
-            WorkExternalIdentifier externalID = new WorkExternalIdentifier(type, id);
-            work.setWorkExternalIdentifier(externalID);
-        }
-    }
-
-    protected void setPublicationDate(Node node, Work work) throws XPathExpressionException {
-
-        String year = XMLUtils.getTextContent(node, YEAR);
-        String month = XMLUtils.getTextContent(node, MONTH);
-        String day = XMLUtils.getTextContent(node, DAY);
-
-        String publicationDate = year;
-        if (StringUtils.isNotBlank(month)) {
-            publicationDate += "-" + month;
-            if (StringUtils.isNotBlank(day)) {
-                publicationDate += "-" + day;
-            }
-        }
-
-        work.setPublicationDate(publicationDate);
-    }
-
-    protected void setWorkType(Node node, Work work) throws XPathExpressionException {
-
-        String workTypeText = XMLUtils.getTextContent(node, WORK_TYPE);
-        WorkType workType = EnumUtils.lookup(WorkType.class, workTypeText);
-
-        work.setWorkType(workType);
-    }
-
-    protected void setCitation(Node node, Work work) throws XPathExpressionException {
-
-        String typeText = XMLUtils.getTextContent(node, CITATION_TYPE);
-        CitationType type = EnumUtils.lookup(CitationType.class, typeText);
-
-        String citationtext = XMLUtils.getTextContent(node, CITATION);
-
-        Citation citation = new Citation(type, citationtext);
-        work.setCitation(citation);
-    }
-
-    protected void setDescription(Node node, Work work) throws XPathExpressionException {
-
-        String description = null;
-        description = XMLUtils.getTextContent(node, SHORT_DESCRIPTION);
-        work.setDescription(description);
-    }
-
-    protected void setTitle(Node node, Work work) throws XPathExpressionException {
-
-        String title = XMLUtils.getTextContent(node, TITLE);
-
-        String subtitle = XMLUtils.getTextContent(node, SUBTITLE);
-
-        Map<String, String> translatedTitles = new HashMap<String, String>();
-        NodeList nodeList = XMLUtils.getNodeList(node, TRANSLATED_TITLES);
-        Iterator<Node> iterator = XMLUtils.getNodeListIterator(nodeList);
-        while (iterator.hasNext()) {
-            Node languageNode = iterator.next();
-            String language = XMLUtils.getTextContent(languageNode, TRANSLATED_TITLES_LANGUAGE);
-            String translated_title = XMLUtils.getTextContent(languageNode, ".");
-            translatedTitles.put(language, translated_title);
-        }
-
-        WorkTitle workTitle = new WorkTitle(title, subtitle, translatedTitles);
-        work.setWorkTitle(workTitle);
-    }
-
-}
diff --git a/dspace-api/src/main/java/org/dspace/authority/rest/RESTConnector.java b/dspace-api/src/main/java/org/dspace/authority/rest/RESTConnector.java
index 7a5adf157..ae67a3c00 100644
--- a/dspace-api/src/main/java/org/dspace/authority/rest/RESTConnector.java
+++ b/dspace-api/src/main/java/org/dspace/authority/rest/RESTConnector.java
@@ -7,13 +7,12 @@
  */
 package org.dspace.authority.rest;
 
-import org.apache.http.impl.client.HttpClientBuilder;
-import org.dspace.authority.util.XMLUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.http.HttpResponse;
 import org.apache.http.client.HttpClient;
 import org.apache.http.client.methods.HttpGet;
+import org.apache.http.impl.client.HttpClientBuilder;
 import org.apache.log4j.Logger;
-import org.w3c.dom.Document;
 
 import java.io.InputStream;
 import java.util.Scanner;
@@ -38,26 +37,28 @@ public class RESTConnector {
         this.url = url;
     }
 
-    public Document get(String path) {
-        Document document = null;
+    public InputStream get(String path, String accessToken) {
 
         InputStream result = null;
         path = trimSlashes(path);
 
         String fullPath = url + '/' + path;
         HttpGet httpGet = new HttpGet(fullPath);
+        if(StringUtils.isNotBlank(accessToken)){
+            httpGet.addHeader("Content-Type", "application/vnd.orcid+xml");
+            httpGet.addHeader("Authorization","Bearer "+accessToken);
+        }
         try {
             HttpClient httpClient = HttpClientBuilder.create().build();
             HttpResponse getResponse = httpClient.execute(httpGet);
             //do not close this httpClient
             result = getResponse.getEntity().getContent();
-            document = XMLUtils.convertStreamToXML(result);
 
         } catch (Exception e) {
             getGotError(e, fullPath);
         }
 
-        return document;
+        return result;
     }
 
     protected void getGotError(Exception e, String fullPath) {
diff --git a/dspace-api/src/main/java/org/dspace/authority/rest/RestSource.java b/dspace-api/src/main/java/org/dspace/authority/rest/RestSource.java
index f6d99b4a5..ad0a29c39 100644
--- a/dspace-api/src/main/java/org/dspace/authority/rest/RestSource.java
+++ b/dspace-api/src/main/java/org/dspace/authority/rest/RestSource.java
@@ -7,9 +7,7 @@
  */
 package org.dspace.authority.rest;
 
-import org.dspace.authority.AuthorityValue;
-
-import java.util.List;
+import org.dspace.authority.SolrAuthorityInterface;
 
 /**
  *
@@ -18,21 +16,11 @@ import java.util.List;
  * @author Ben Bosman (ben at atmire dot com)
  * @author Mark Diggory (markd at atmire dot com)
  */
-public abstract class RestSource {
+public abstract class RestSource implements SolrAuthorityInterface {
 
     protected RESTConnector restConnector;
 
     public RestSource(String url) {
         this.restConnector = new RESTConnector(url);
     }
-
-    /**
-     * TODO
-     * com.atmire.org.dspace.authority.rest.RestSource#queryAuthorities -> add field, so the source can decide whether to query /users or something else.
-     * -> implement subclasses
-     * -> implement usages
-     */
-    public abstract List<AuthorityValue> queryAuthorities(String text, int max);
-
-    public abstract AuthorityValue queryAuthorityID(String id);
 }
diff --git a/dspace-api/src/main/java/org/dspace/content/Item.java b/dspace-api/src/main/java/org/dspace/content/Item.java
index 13696273f..ec42bf194 100644
--- a/dspace-api/src/main/java/org/dspace/content/Item.java
+++ b/dspace-api/src/main/java/org/dspace/content/Item.java
@@ -1275,9 +1275,6 @@ public class Item extends DSpaceObject
         log.info(LogManager.getHeader(ourContext, "delete_item", "item_id="
                 + getID()));
 
-        // Remove from cache
-        ourContext.removeCached(this, getID());
-
         // Remove from browse indices, if appropriate
         /** XXX FIXME
          ** Although all other Browse index updates are managed through
@@ -1324,6 +1321,8 @@ public class Item extends DSpaceObject
         // remove version attached to the item
         removeVersion();
 
+        // Remove from cache
+        ourContext.removeCached(this, getID());
 
         // Finally remove item row
         DatabaseManager.delete(ourContext, itemRow);
diff --git a/dspace-api/src/main/java/org/dspace/content/authority/SolrAuthority.java b/dspace-api/src/main/java/org/dspace/content/authority/SolrAuthority.java
index 9fc770173..0eb98d1c0 100644
--- a/dspace-api/src/main/java/org/dspace/content/authority/SolrAuthority.java
+++ b/dspace-api/src/main/java/org/dspace/content/authority/SolrAuthority.java
@@ -7,9 +7,6 @@
  */
 package org.dspace.content.authority;
 
-import org.dspace.authority.AuthoritySearchService;
-import org.dspace.authority.AuthorityValue;
-import org.dspace.authority.rest.RestSource;
 import org.apache.commons.lang.StringUtils;
 import org.apache.log4j.Logger;
 import org.apache.solr.client.solrj.SolrQuery;
@@ -17,6 +14,9 @@ import org.apache.solr.client.solrj.response.QueryResponse;
 import org.apache.solr.common.SolrDocument;
 import org.apache.solr.common.SolrDocumentList;
 import org.apache.solr.common.params.CommonParams;
+import org.dspace.authority.AuthoritySearchService;
+import org.dspace.authority.AuthorityValue;
+import org.dspace.authority.SolrAuthorityInterface;
 import org.dspace.core.ConfigurationManager;
 import org.dspace.utils.DSpace;
 
@@ -35,7 +35,7 @@ import java.util.Map;
 public class SolrAuthority implements ChoiceAuthority {
 
     private static final Logger log = Logger.getLogger(SolrAuthority.class);
-    private RestSource source = new DSpace().getServiceManager().getServiceByName("AuthoritySource", RestSource.class);
+    protected SolrAuthorityInterface source = new DSpace().getServiceManager().getServiceByName("AuthoritySource", SolrAuthorityInterface.class);
     private boolean externalResults = false;
 
     public Choices getMatches(String field, String text, int collection, int start, int limit, String locale, boolean bestMatch) {
diff --git a/dspace-api/src/main/java/org/dspace/statistics/ElasticSearchLogger.java b/dspace-api/src/main/java/org/dspace/statistics/ElasticSearchLogger.java
index 41da518d9..0e6383da3 100644
--- a/dspace-api/src/main/java/org/dspace/statistics/ElasticSearchLogger.java
+++ b/dspace-api/src/main/java/org/dspace/statistics/ElasticSearchLogger.java
@@ -7,14 +7,24 @@
  */
 package org.dspace.statistics;
 
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.IOException;
+import java.net.InetAddress;
+import java.net.URL;
+import java.sql.SQLException;
+import java.util.*;
+import javax.servlet.http.HttpServletRequest;
 
 import com.google.common.base.Charsets;
 import com.google.common.io.Resources;
-import com.maxmind.geoip.Location;
-import com.maxmind.geoip.LookupService;
+import com.maxmind.geoip2.DatabaseReader;
+import com.maxmind.geoip2.model.CityResponse;
+
 import org.apache.commons.lang.exception.ExceptionUtils;
 import org.apache.commons.lang.time.DateFormatUtils;
 import org.apache.log4j.Logger;
+
 import org.dspace.content.*;
 import org.dspace.content.Collection;
 import org.dspace.core.ConfigurationManager;
@@ -30,7 +40,6 @@ import org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestBuild
 import org.elasticsearch.action.admin.indices.mapping.put.PutMappingResponse;
 import org.elasticsearch.action.index.IndexRequestBuilder;
 import org.elasticsearch.client.Client;
-
 import org.elasticsearch.client.transport.TransportClient;
 import org.elasticsearch.common.settings.ImmutableSettings;
 import org.elasticsearch.common.settings.Settings;
@@ -41,13 +50,6 @@ import org.elasticsearch.common.xcontent.XContentFactory;
 import org.elasticsearch.node.Node;
 import org.elasticsearch.node.NodeBuilder;
 
-import javax.servlet.http.HttpServletRequest;
-import java.io.FileNotFoundException;
-import java.io.IOException;
-import java.net.URL;
-import java.sql.SQLException;
-import java.util.*;
-
 public class ElasticSearchLogger {
 
     private static Logger log = Logger.getLogger(ElasticSearchLogger.class);
@@ -58,8 +60,6 @@ public class ElasticSearchLogger {
 
     public static final String DATE_FORMAT_DCDATE = "yyyy-MM-dd'T'HH:mm:ss'Z'";
 
-    private static LookupService locationService;
-
     public static String clusterName = "dspacestatslogging";
     public static String indexName = "dspaceindex";
     public static String indexType = "stats";
@@ -68,6 +68,8 @@ public class ElasticSearchLogger {
 
     private static Client client;
 
+    protected static DatabaseReader locationService;
+
     public static enum ClientType {
         NODE, LOCAL, TRANSPORT
     }
@@ -93,16 +95,24 @@ public class ElasticSearchLogger {
     public void initializeElasticSearch() {
         log.info("DSpace ElasticSearchLogger Initializing");
         try {
-        LookupService service = null;
+        DatabaseReader service = null;
         // Get the db file for the location
-        String dbfile = ConfigurationManager.getProperty("usage-statistics", "dbfile");
-        if (dbfile != null) {
+        String dbPath = ConfigurationManager.getProperty("usage-statistics.dbfile");
+        if (dbPath != null) {
             try {
-                service = new LookupService(dbfile, LookupService.GEOIP_STANDARD);
+                File dbFile = new File(dbPath);
+                service = new DatabaseReader.Builder(dbFile).build();
             } catch (FileNotFoundException fe) {
-                log.error("The GeoLite Database file is missing (" + dbfile + ")! Usage Statistics cannot generate location based reports! Please see the DSpace installation instructions for instructions to install this file.", fe);
+                log.error(
+                        "The GeoLite Database file is missing (" + dbPath + ")! Usage Statistics cannot generate location"
+                            + " based reports! Please see the DSpace installation instructions for instructions to"
+                            + " install this file.",
+                        fe);
             } catch (IOException e) {
-                log.error("Unable to load GeoLite Database file (" + dbfile + ")! You may need to reinstall it. See the DSpace installation instructions for more details.", e);
+                log.error(
+                        "Unable to load GeoLite Database file (" + dbPath + ")! You may need to reinstall it. See the"
+                            + " DSpace installation instructions for more details.",
+                        e);
             }
         } else {
             log.error("The required 'dbfile' configuration is missing in usage-statistics.cfg!");
@@ -257,21 +267,24 @@ public class ElasticSearchLogger {
 
             // Save the location information if valid, save the event without
             // location information if not valid
-            Location location = locationService.getLocation(ip);
-            if (location != null
-                    && !("--".equals(location.countryCode)
-                    && location.latitude == -180 && location.longitude == -180)) {
+            InetAddress ipAddress = InetAddress.getByName(ip);
+            CityResponse location = locationService.city(ipAddress);
+            String countryCode = location.getCountry().getIsoCode();
+            double latitude = location.getLocation().getLatitude();
+            double longitude = location.getLocation().getLongitude();
+            if (!("--".equals(countryCode)
+                    && latitude == -180 && longitude == -180)) {
                 try {
                     docBuilder.field("continent", LocationUtils
-                            .getContinentCode(location.countryCode));
-                } catch (Exception e) {
+                            .getContinentCode(countryCode));
+                } catch (IOException e) {
                     System.out
-                            .println("COUNTRY ERROR: " + location.countryCode);
+                            .println("COUNTRY ERROR: " + countryCode);
                 }
-                docBuilder.field("countryCode", location.countryCode);
-                docBuilder.field("city", location.city);
-                docBuilder.field("latitude", location.latitude);
-                docBuilder.field("longitude", location.longitude);
+                docBuilder.field("countryCode", countryCode);
+                docBuilder.field("city", location.getCity().getName());
+                docBuilder.field("latitude", latitude);
+                docBuilder.field("longitude", longitude);
                 docBuilder.field("isBot", isSpiderBot);
 
                 if (request.getHeader("User-Agent") != null) {
@@ -373,22 +386,25 @@ public class ElasticSearchLogger {
             }
 
             // Save the location information if valid, save the event without
-            // location information if not valid
-            Location location = locationService.getLocation(ip);
-            if (location != null
-                    && !("--".equals(location.countryCode)
-                    && location.latitude == -180 && location.longitude == -180)) {
+            // location information if not valid.
+            InetAddress ipAddress = InetAddress.getByName(ip);
+            CityResponse location = locationService.city(ipAddress);
+            String countryCode = location.getCountry().getIsoCode();
+            double latitude = location.getLocation().getLatitude();
+            double longitude = location.getLocation().getLongitude();
+            if (!("--".equals(countryCode)
+                    && latitude == -180 && longitude == -180)) {
                 try {
                     docBuilder.field("continent", LocationUtils
-                            .getContinentCode(location.countryCode));
-                } catch (Exception e) {
+                            .getContinentCode(countryCode));
+                } catch (IOException e) {
                     System.out
-                            .println("COUNTRY ERROR: " + location.countryCode);
+                            .println("COUNTRY ERROR: " + countryCode);
                 }
-                docBuilder.field("countryCode", location.countryCode);
-                docBuilder.field("city", location.city);
-                docBuilder.field("latitude", location.latitude);
-                docBuilder.field("longitude", location.longitude);
+                docBuilder.field("countryCode", countryCode);
+                docBuilder.field("city", location.getCity().getName());
+                docBuilder.field("latitude", latitude);
+                docBuilder.field("longitude", longitude);
                 docBuilder.field("isBot", isSpiderBot);
 
                 if (userAgent != null) {
diff --git a/dspace-api/src/main/java/org/dspace/statistics/SolrLogger.java b/dspace-api/src/main/java/org/dspace/statistics/SolrLogger.java
index 98acf310b..bdc3d4b52 100644
--- a/dspace-api/src/main/java/org/dspace/statistics/SolrLogger.java
+++ b/dspace-api/src/main/java/org/dspace/statistics/SolrLogger.java
@@ -7,10 +7,37 @@
  */
 package org.dspace.statistics;
 
+import java.io.File;
+import java.io.FileFilter;
+import java.io.FileNotFoundException;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.Reader;
+import java.io.UnsupportedEncodingException;
+import java.net.InetAddress;
+import java.net.URLEncoder;
+import java.sql.SQLException;
+import java.text.DateFormat;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.Date;
+import java.util.EnumSet;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+import javax.servlet.http.HttpServletRequest;
+
 import au.com.bytecode.opencsv.CSVReader;
 import au.com.bytecode.opencsv.CSVWriter;
-import com.maxmind.geoip.Location;
-import com.maxmind.geoip.LookupService;
+import com.maxmind.geoip2.DatabaseReader;
+import com.maxmind.geoip2.exception.GeoIp2Exception;
+import com.maxmind.geoip2.model.CityResponse;
 import org.apache.commons.io.FileUtils;
 import org.apache.commons.lang.ArrayUtils;
 import org.apache.commons.lang.StringUtils;
@@ -18,9 +45,7 @@ import org.apache.commons.lang.time.DateFormatUtils;
 import org.apache.http.HttpResponse;
 import org.apache.http.client.methods.HttpGet;
 import org.apache.http.impl.client.DefaultHttpClient;
-import org.apache.log4j.Logger;
 import org.apache.solr.client.solrj.SolrQuery;
-import org.apache.solr.client.solrj.SolrServer;
 import org.apache.solr.client.solrj.SolrServerException;
 import org.apache.solr.client.solrj.impl.HttpSolrServer;
 import org.apache.solr.client.solrj.request.AbstractUpdateRequest;
@@ -38,7 +63,6 @@ import org.apache.solr.common.SolrDocumentList;
 import org.apache.solr.common.SolrInputDocument;
 import org.apache.solr.common.luke.FieldFlag;
 import org.apache.solr.common.params.*;
-import org.apache.solr.common.util.JavaBinCodec;
 import org.dspace.content.*;
 import org.dspace.content.Collection;
 import org.dspace.core.ConfigurationManager;
@@ -50,15 +74,10 @@ import org.dspace.statistics.util.DnsLookup;
 import org.dspace.statistics.util.LocationUtils;
 import org.dspace.statistics.util.SpiderDetector;
 import org.dspace.usage.UsageWorkflowEvent;
-
-import javax.servlet.http.HttpServletRequest;
-import java.io.*;
-import java.net.URLEncoder;
-import java.sql.SQLException;
-import java.text.DateFormat;
-import java.text.ParseException;
-import java.text.SimpleDateFormat;
-import java.util.*;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.InitializingBean;
+import org.springframework.beans.factory.annotation.Autowired;
 
 /**
  * Static holder for a HttpSolrClient connection pool to issue
@@ -71,8 +90,8 @@ import java.util.*;
  */
 public class SolrLogger
 {
-    private static final Logger log = Logger.getLogger(SolrLogger.class);
-	
+    private static final Logger log = LoggerFactory.getLogger(SolrLogger.class);
+
     private static final String MULTIPLE_VALUES_SPLITTER = "|";
     
     private static final HttpSolrServer solr;
@@ -81,7 +100,7 @@ public class SolrLogger
 
     public static final String DATE_FORMAT_DCDATE = "yyyy-MM-dd'T'HH:mm:ss'Z'";
 
-    private static final LookupService locationService;
+    private static final DatabaseReader locationService;
 
     private static final boolean useProxies;
 
@@ -149,23 +168,24 @@ public class SolrLogger
         // Read in the file so we don't have to do it all the time
         //spiderIps = SpiderDetector.getSpiderIpAddresses();
 
-        LookupService service = null;
+        DatabaseReader service = null;
         // Get the db file for the location
-        String dbfile = ConfigurationManager.getProperty("usage-statistics", "dbfile");
-        if (dbfile != null)
-        {
-            try
-            {
-                service = new LookupService(dbfile,
-                        LookupService.GEOIP_STANDARD);
-            }
-            catch (FileNotFoundException fe)
-            {
-                log.error("The GeoLite Database file is missing (" + dbfile + ")! Solr Statistics cannot generate location based reports! Please see the DSpace installation instructions for instructions to install this file.", fe);
-            }
-            catch (IOException e)
-            {
-                log.error("Unable to load GeoLite Database file (" + dbfile + ")! You may need to reinstall it. See the DSpace installation instructions for more details.", e);
+        String dbPath = ConfigurationManager.getProperty("usage-statistics", "dbfile");
+        if (dbPath != null) {
+            try {
+                File dbFile = new File(dbPath);
+                service = new DatabaseReader.Builder(dbFile).build();
+            } catch (FileNotFoundException fe) {
+                log.error(
+                    "The GeoLite Database file is missing (" + dbPath + ")! Solr Statistics cannot generate location " +
+                        "based reports! Please see the DSpace installation instructions for instructions to install " +
+                        "this file.",
+                    fe);
+            } catch (IOException e) {
+                log.error(
+                    "Unable to load GeoLite Database file (" + dbPath + ")! You may need to reinstall it. See the " +
+                        "DSpace installation instructions for more details.",
+                    e);
             }
         }
         else
@@ -340,30 +360,32 @@ public class SolrLogger
 		    doc1.addField("isBot",isSpiderBot);
             // Save the location information if valid, save the event without
             // location information if not valid
-            if(locationService != null)
-            {
-                Location location = locationService.getLocation(ip);
-                if (location != null
-                        && !("--".equals(location.countryCode)
-                        && location.latitude == -180 && location.longitude == -180))
-                {
-                    try
-                    {
-                        doc1.addField("continent", LocationUtils
-                                .getContinentCode(location.countryCode));
-                    }
-                    catch (Exception e)
-                    {
-                        System.out
-                                .println("COUNTRY ERROR: " + location.countryCode);
+            if (locationService != null) {
+                try {
+                    InetAddress ipAddress = InetAddress.getByName(ip);
+                    CityResponse location = locationService.city(ipAddress);
+                    String countryCode = location.getCountry().getIsoCode();
+                    double latitude = location.getLocation().getLatitude();
+                    double longitude = location.getLocation().getLongitude();
+                    if (!(
+                            "--".equals(countryCode)
+                            && latitude == -180
+                            && longitude == -180)
+                    ) {
+                        try {
+                            doc1.addField("continent", LocationUtils
+                                .getContinentCode(countryCode));
+                        } catch (Exception e) {
+                            System.out
+                                .println("COUNTRY ERROR: " + countryCode);
+                        }
+                        doc1.addField("countryCode", countryCode);
+                        doc1.addField("city", location.getCity().getName());
+                        doc1.addField("latitude", latitude);
+                        doc1.addField("longitude", longitude);
                     }
-                    doc1.addField("countryCode", location.countryCode);
-                    doc1.addField("city", location.city);
-                    doc1.addField("latitude", location.latitude);
-                    doc1.addField("longitude", location.longitude);
-                    
-
-
+                } catch (IOException | GeoIp2Exception e) {
+                    log.error("Unable to get location of request:  {}", e.getMessage());
                 }
             }
         }
@@ -426,30 +448,32 @@ public class SolrLogger
 		    doc1.addField("isBot",isSpiderBot);
             // Save the location information if valid, save the event without
             // location information if not valid
-            if(locationService != null)
-            {
-                Location location = locationService.getLocation(ip);
-                if (location != null
-                        && !("--".equals(location.countryCode)
-                        && location.latitude == -180 && location.longitude == -180))
-                {
-                    try
-                    {
-                        doc1.addField("continent", LocationUtils
-                                .getContinentCode(location.countryCode));
-                    }
-                    catch (Exception e)
-                    {
-                        System.out
-                                .println("COUNTRY ERROR: " + location.countryCode);
+            if (locationService != null) {
+                try {
+                    InetAddress ipAddress = InetAddress.getByName(ip);
+                    CityResponse location = locationService.city(ipAddress);
+                    String countryCode = location.getCountry().getIsoCode();
+                    double latitude = location.getLocation().getLatitude();
+                    double longitude = location.getLocation().getLongitude();
+                    if (!(
+                            "--".equals(countryCode)
+                            && latitude == -180
+                            && longitude == -180)
+                    ) {
+                        try {
+                            doc1.addField("continent", LocationUtils
+                                .getContinentCode(countryCode));
+                        } catch (Exception e) {
+                            System.out
+                                .println("COUNTRY ERROR: " + countryCode);
+                        }
+                        doc1.addField("countryCode", countryCode);
+                        doc1.addField("city", location.getCity().getName());
+                        doc1.addField("latitude", latitude);
+                        doc1.addField("longitude", longitude);
                     }
-                    doc1.addField("countryCode", location.countryCode);
-                    doc1.addField("city", location.city);
-                    doc1.addField("latitude", location.latitude);
-                    doc1.addField("longitude", location.longitude);
-                    
-
-
+                } catch (GeoIp2Exception | IOException e) {
+                    log.error("Unable to get location of request:  {}", e.getMessage());
                 }
             }
         }
diff --git a/dspace-api/src/main/java/org/dspace/statistics/util/StatisticsDataGenerator.java b/dspace-api/src/main/java/org/dspace/statistics/util/StatisticsDataGenerator.java
index 4ac33cd9f..987e0edd2 100644
--- a/dspace-api/src/main/java/org/dspace/statistics/util/StatisticsDataGenerator.java
+++ b/dspace-api/src/main/java/org/dspace/statistics/util/StatisticsDataGenerator.java
@@ -22,8 +22,10 @@ import org.dspace.statistics.SolrLogger;
 import java.util.Date;
 import java.text.SimpleDateFormat;
 
-import com.maxmind.geoip.LookupService;
-import com.maxmind.geoip.Location;
+import com.maxmind.geoip2.DatabaseReader;
+import com.maxmind.geoip2.model.CityResponse;
+import java.io.File;
+import java.net.InetAddress;
 
 /**
  * Test class to generate random statistics data.
@@ -194,17 +196,17 @@ public class StatisticsDataGenerator {
 		solr.commit();
 
 		String prevIp = null;
-		String dbfile = ConfigurationManager.getProperty("usage-statistics", "dbfile");
-		LookupService cl = new LookupService(dbfile,
-				LookupService.GEOIP_STANDARD);
+		String dbPath = ConfigurationManager.getProperty("usage-statistics", "dbfile");
+        File dbFile = new File(dbPath);
+		DatabaseReader cl = new DatabaseReader.Builder(dbFile).build();
 		int countryErrors = 0;
 		for (int i = 0; i < nrLogs; i++) {
 			String ip = "";
 			Date time;
 			String continent;
 			String countryCode;
-			float longitude;
-			float latitude;
+			double longitude;
+			double latitude;
 			String city;
 
 			// 1. Generate an ip for our user
@@ -219,9 +221,11 @@ public class StatisticsDataGenerator {
             ip = ipBuilder.toString();
             
 			// 2 Depending on our ip get all the location info
-			Location location;
+            InetAddress ipAddress;
+			CityResponse location;
 			try {
-				location = cl.getLocation(ip);
+                ipAddress = InetAddress.getByName(ip);
+				location = cl.city(ipAddress);
 			} catch (Exception e) {
 				location = null;
 			}
@@ -233,13 +237,14 @@ public class StatisticsDataGenerator {
                     continue;
                 }
 				ip = prevIp;
-				location = cl.getLocation(ip);
+                ipAddress = InetAddress.getByName(ip);
+				location = cl.city(ipAddress);
 			}
 
-			city = location.city;
-			countryCode = location.countryCode;
-			longitude = location.longitude;
-			latitude = location.latitude;
+			city = location.getCity().getName();
+			countryCode = location.getCountry().getIsoCode();
+			longitude = location.getLocation().getLongitude();
+			latitude = location.getLocation().getLatitude();
 			try {
 				continent = LocationUtils.getContinentCode(countryCode);
 			} catch (Exception e) {
diff --git a/dspace-api/src/main/java/org/dspace/statistics/util/StatisticsImporter.java b/dspace-api/src/main/java/org/dspace/statistics/util/StatisticsImporter.java
index 531519837..231e3c020 100644
--- a/dspace-api/src/main/java/org/dspace/statistics/util/StatisticsImporter.java
+++ b/dspace-api/src/main/java/org/dspace/statistics/util/StatisticsImporter.java
@@ -7,7 +7,29 @@
  */
 package org.dspace.statistics.util;
 
-import org.apache.commons.cli.*;
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.FileReader;
+import java.io.FilenameFilter;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.net.InetAddress;
+import java.text.DecimalFormat;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.LinkedHashMap;
+import java.util.List;
+import java.util.Random;
+
+import com.maxmind.geoip2.DatabaseReader;
+import com.maxmind.geoip2.model.CityResponse;
+import org.apache.commons.cli.CommandLine;
+import org.apache.commons.cli.CommandLineParser;
+import org.apache.commons.cli.HelpFormatter;
+import org.apache.commons.cli.Options;
+import org.apache.commons.cli.PosixParser;
 import org.apache.commons.lang.time.DateFormatUtils;
 import org.apache.log4j.Logger;
 import org.apache.solr.common.SolrInputDocument;
@@ -21,13 +43,6 @@ import org.dspace.core.ConfigurationManager;
 import org.dspace.eperson.EPerson;
 import org.dspace.statistics.SolrLogger;
 
-import java.text.*;
-import java.io.*;
-import java.util.*;
-
-import com.maxmind.geoip.LookupService;
-import com.maxmind.geoip.Location;
-
 /**
  * Class to load intermediate statistics files (produced from log files by {@link ClassicDSpaceLogConverter}) into Solr.
  *
@@ -45,8 +60,10 @@ public class StatisticsImporter
     /** Solr server connection */
     private static HttpSolrServer solr;
 
-    /** GEOIP lookup service */
-    private static LookupService geoipLookup;
+    /**
+     * GEOIP lookup service
+     */
+    private static DatabaseReader geoipLookup;
 
     /** Whether to skip the DNS reverse lookup or not */
     private static boolean skipReverseDNS = false;
@@ -170,8 +187,8 @@ public class StatisticsImporter
             String continent = "";
             String country = "";
             String countryCode = "";
-            float longitude = 0f;
-            float latitude = 0f;
+            double longitude = 0f;
+            double latitude = 0f;
             String city = "";
             String dns;
 
@@ -236,15 +253,15 @@ public class StatisticsImporter
                 }
 
                 // Get the geo information for the user
-                Location location;
                 try {
-                    location = geoipLookup.getLocation(ip);
-                    city = location.city;
-                    country = location.countryName;
-                    countryCode = location.countryCode;
-                    longitude = location.longitude;
-                    latitude = location.latitude;
-                    if(verbose) {
+                    InetAddress ipAddress = InetAddress.getByName(ip);
+                    CityResponse cityResponse = geoipLookup.city(ipAddress);
+                    city = cityResponse.getCity().getName();
+                    country = cityResponse.getCountry().getName();
+                    countryCode = cityResponse.getCountry().getIsoCode();
+                    longitude = cityResponse.getLocation().getLongitude();
+                    latitude = cityResponse.getLocation().getLatitude();
+                    if (verbose) {
                         data += (", country = " + country);
                         data += (", city = " + city);
                         System.out.println(data);
@@ -450,18 +467,21 @@ public class StatisticsImporter
         }
 		solr = new HttpSolrServer(sserver);
 
-        String dbfile = ConfigurationManager.getProperty("usage-statistics", "dbfile");
-        try
-        {
-            geoipLookup = new LookupService(dbfile, LookupService.GEOIP_STANDARD);
-        }
-        catch (FileNotFoundException fe)
-        {
-            log.error("The GeoLite Database file is missing (" + dbfile + ")! Solr Statistics cannot generate location based reports! Please see the DSpace installation instructions for instructions to install this file.", fe);
-        }
-        catch (IOException e)
-        {
-            log.error("Unable to load GeoLite Database file (" + dbfile + ")! You may need to reinstall it. See the DSpace installation instructions for more details.", e);
+        String dbPath = ConfigurationManager.getProperty("usage-statistics", "dbfile");
+        try {
+            File dbFile = new File(dbPath);
+            geoipLookup = new DatabaseReader.Builder(dbFile).build();
+        } catch (FileNotFoundException fe) {
+            log.error(
+                "The GeoLite Database file is missing (" + dbPath + ")! Solr Statistics cannot generate location " +
+                    "based reports! Please see the DSpace installation instructions for instructions to install this " +
+                    "file.",
+                fe);
+        } catch (IOException e) {
+            log.error(
+                "Unable to load GeoLite Database file (" + dbPath + ")! You may need to reinstall it. See the DSpace " +
+                    "installation instructions for more details.",
+                e);
         }
 
 
diff --git a/dspace-api/src/main/java/org/dspace/statistics/util/StatisticsImporterElasticSearch.java b/dspace-api/src/main/java/org/dspace/statistics/util/StatisticsImporterElasticSearch.java
index 9ba2fd433..f0b9f250b 100644
--- a/dspace-api/src/main/java/org/dspace/statistics/util/StatisticsImporterElasticSearch.java
+++ b/dspace-api/src/main/java/org/dspace/statistics/util/StatisticsImporterElasticSearch.java
@@ -7,8 +7,13 @@
  */
 package org.dspace.statistics.util;
 
-import com.maxmind.geoip.Location;
-import com.maxmind.geoip.LookupService;
+import java.io.*;
+import java.net.InetAddress;
+
+import com.maxmind.geoip2.DatabaseReader;
+import com.maxmind.geoip2.exception.GeoIp2Exception;
+import com.maxmind.geoip2.model.CityResponse;
+
 import org.apache.commons.cli.*;
 import org.apache.commons.lang.time.DateFormatUtils;
 import org.apache.log4j.Logger;
@@ -24,13 +29,10 @@ import org.dspace.statistics.SolrLogger;
 import org.elasticsearch.action.bulk.BulkRequestBuilder;
 import org.elasticsearch.action.bulk.BulkResponse;
 import org.elasticsearch.client.Client;
-
 import org.elasticsearch.common.geo.GeoPoint;
 import org.elasticsearch.common.xcontent.XContentBuilder;
 import org.elasticsearch.common.xcontent.XContentFactory;
 
-
-import java.io.*;
 import java.text.DecimalFormat;
 import java.text.SimpleDateFormat;
 import java.util.Date;
@@ -38,8 +40,6 @@ import java.util.LinkedHashMap;
 import java.util.Map;
 import java.util.Random;
 
-import static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;
-
 /**
  * Class to load intermediate statistics files (produced from log files by <code>ClassicDSpaceLogConverter</code>) into Elastic Search
  *
@@ -56,7 +56,7 @@ public class StatisticsImporterElasticSearch {
     //TODO ES Client
 
     /** GEOIP lookup service */
-    private static LookupService geoipLookup;
+    private static DatabaseReader geoipLookup;
 
     /** Metadata storage information */
     private static Map<String, String> metadataStorageInfo;
@@ -107,8 +107,8 @@ public class StatisticsImporterElasticSearch {
             String continent = "";
             String country = "";
             String countryCode = "";
-            float longitude = 0f;
-            float latitude = 0f;
+            double longitude = 0f;
+            double latitude = 0f;
             String city = "";
             String dns;
 
@@ -176,15 +176,15 @@ public class StatisticsImporterElasticSearch {
                 }
 
                 // Get the geo information for the user
-                Location location;
                 try {
-                    location = geoipLookup.getLocation(ip);
-                    city = location.city;
-                    country = location.countryName;
-                    countryCode = location.countryCode;
-                    longitude = location.longitude;
-                    latitude = location.latitude;
-                    if(verbose) {
+                    InetAddress ipAddress = InetAddress.getByName(ip);
+                    CityResponse cityResponse = geoipLookup.city(ipAddress);
+                    city = cityResponse.getCity().getName();
+                    country = cityResponse.getCountry().getName();
+                    countryCode = cityResponse.getCountry().getIsoCode();
+                    longitude = cityResponse.getLocation().getLongitude();
+                    latitude = cityResponse.getLocation().getLatitude();
+                    if (verbose) {
                         data += (", country = " + country);
                         data += (", city = " + city);
                         System.out.println(data);
@@ -198,7 +198,7 @@ public class StatisticsImporterElasticSearch {
                         }
                         continue;
                     }
-                } catch (Exception e) {
+                } catch (GeoIp2Exception | IOException e) {
                     // No problem - just can't look them up
                 }
 
@@ -386,20 +386,22 @@ public class StatisticsImporterElasticSearch {
         // Verbose option
         boolean verbose = line.hasOption('v');
 
-        String dbfile = ConfigurationManager.getProperty("usage-statistics", "dbfile");
-        try
-        {
-            geoipLookup = new LookupService(dbfile, LookupService.GEOIP_STANDARD);
-        }
-        catch (FileNotFoundException fe)
-        {
-            log.error("The GeoLite Database file is missing (" + dbfile + ")! Elastic Search  Statistics cannot generate location based reports! Please see the DSpace installation instructions for instructions to install this file.", fe);
+        String dbPath = ConfigurationManager.getProperty("usage-statistics", "dbfile");
+        try {
+            File dbFile = new File(dbPath);
+            geoipLookup = new DatabaseReader.Builder(dbFile).build();
+        } catch (FileNotFoundException fe) {
+            log.error(
+                "The GeoLite Database file is missing (" + dbPath + ")! ElasticSearch Statistics cannot generate location " +
+                    "based reports! Please see the DSpace installation instructions for instructions to install this " +
+                    "file.",
+                fe);
+        } catch (IOException e) {
+            log.error(
+                "Unable to load GeoLite Database file (" + dbPath + ")! You may need to reinstall it. See the DSpace " +
+                    "installation instructions for more details.",
+                e);
         }
-        catch (IOException e)
-        {
-            log.error("Unable to load GeoLite Database file (" + dbfile + ")! You may need to reinstall it. See the DSpace installation instructions for more details.", e);
-        }
-
 
         StatisticsImporterElasticSearch elasticSearchImporter = new StatisticsImporterElasticSearch();
         if (line.hasOption('m'))
diff --git a/dspace-api/src/test/java/org/dspace/app/bulkedit/DSpaceCSVTest.java b/dspace-api/src/test/java/org/dspace/app/bulkedit/DSpaceCSVTest.java
index abf939b5f..a27245d8e 100644
--- a/dspace-api/src/test/java/org/dspace/app/bulkedit/DSpaceCSVTest.java
+++ b/dspace-api/src/test/java/org/dspace/app/bulkedit/DSpaceCSVTest.java
@@ -44,8 +44,9 @@ public class DSpaceCSVTest extends AbstractUnitTest
                             "2,2,Two authors,\"Lewis, Stuart||Bloggs, Joe\",Two people wrote this item",
                             "3,2,Three authors,\"Lewis, Stuart||Bloggs, Joe||Loaf, Meat\",Three people wrote this item",
                             "4,2,\"Two line\ntitle\",\"Lewis, Stuart\",abstract",
-                            "5,2,\"\"\"Embedded quotes\"\" here\",\"Lewis, Stuart\",\"Abstract with\ntwo\nnew lines\"",
-                            "6,2,\"\"\"Unbalanced embedded\"\" quotes\"\" here\",\"Lewis, Stuart\",\"Abstract with\ntwo\nnew lines\"",};
+                            "5,2,\"Empty lines\n\nshould work too (DS-3245).\",\"Lewis, Stuart\",abstract",
+                            "6,2,\"\"\"Embedded quotes\"\" here\",\"Lewis, Stuart\",\"Abstract with\ntwo\nnew lines\"",
+                            "7,2,\"\"\"Unbalanced embedded\"\" quotes\"\" here\",\"Lewis, Stuart\",\"Abstract with\ntwo\nnew lines\"",};
             // Write the string to a file
             String filename = "test.csv";
             BufferedWriter out = new BufferedWriter(
@@ -61,7 +62,7 @@ public class DSpaceCSVTest extends AbstractUnitTest
             // Test the CSV parsing was OK
             DSpaceCSV dcsv = new DSpaceCSV(new File(filename), context);
             String[] lines = dcsv.getCSVLinesAsStringArray();
-            assertThat("testDSpaceCSV Good CSV", lines.length, equalTo(7));
+            assertThat("testDSpaceCSV Good CSV", lines.length, equalTo(8));
 
             // Check the new lines are OK
             List<DSpaceCSVLine> csvLines = dcsv.getCSVLines();
@@ -99,7 +100,7 @@ public class DSpaceCSVTest extends AbstractUnitTest
                 assertThat("testDSpaceCSV Bad heading CSV", e.getMessage(), equalTo("Unknown metadata element in column 4: dc.contributor.foobar"));
             }
             lines = dcsv.getCSVLinesAsStringArray();
-            assertThat("testDSpaceCSV Good CSV", lines.length, equalTo(7));
+            assertThat("testDSpaceCSV Good CSV", lines.length, equalTo(8));
 
 
             // Test the CSV parsing with a bad heading schema value
diff --git a/dspace-api/src/test/java/org/dspace/content/InstallItemTest.java b/dspace-api/src/test/java/org/dspace/content/InstallItemTest.java
index 26f1f6dea..fd4a5e86f 100644
--- a/dspace-api/src/test/java/org/dspace/content/InstallItemTest.java
+++ b/dspace-api/src/test/java/org/dspace/content/InstallItemTest.java
@@ -9,6 +9,7 @@ package org.dspace.content;
 
 import mockit.*;
 
+import org.dspace.authorize.AuthorizeException;
 import org.dspace.authorize.AuthorizeManager;
 import org.dspace.core.Constants;
 import org.dspace.core.Context;
@@ -24,6 +25,9 @@ import java.util.TimeZone;
 
 import org.dspace.AbstractUnitTest;
 import org.apache.log4j.Logger;
+import org.dspace.storage.rdbms.DatabaseManager;
+import org.dspace.storage.rdbms.TableRow;
+import org.dspace.storage.rdbms.TableRowIterator;
 import org.junit.*;
 import static org.junit.Assert.* ;
 import static org.hamcrest.CoreMatchers.*;
@@ -36,6 +40,53 @@ import org.junit.rules.ExpectedException;
 public class InstallItemTest extends AbstractUnitTest
 {
 
+    private Collection collection;
+
+    @Before
+    @Override
+    public void init()
+    {
+        super.init();
+        try {
+            context.turnOffAuthorisationSystem();
+            this.collection = Collection.create(context);
+            context.restoreAuthSystemState();
+        }
+        catch (SQLException | AuthorizeException ex)
+        {
+            log.error("SQL Error in init", ex);
+            fail("SQL Error in init: " + ex.getMessage());
+        }
+    }
+
+    /**
+     * This method will be run after every test as per @After. It will
+     * clean resources initialized by the @Before methods.
+     *
+     * Other methods can be annotated with @After here or in subclasses
+     * but no execution order is guaranteed
+     *
+     * It is important to delete the items generated by this test, as they
+     * all use the same handle and the VersionedIdentifierProvider does
+     * not allow to register a handle already in use. If we delete the
+     * collection the items and their handles should also be deleted.
+     */
+    @After
+    @Override
+    public void destroy()
+    {
+        try {
+            context.turnOffAuthorisationSystem();
+            this.collection.delete();
+            context.restoreAuthSystemState();
+        } catch (SQLException | AuthorizeException | IOException ex) {
+            log.error("SQL Error in destroy", ex);
+            fail("SQL Error in destroy: " + ex.getMessage());
+            context.abort();
+        }
+        super.destroy();
+    }
+
     /** log4j category */
     private static final Logger log = Logger.getLogger(InstallItemTest.class);
 
@@ -50,8 +101,7 @@ public class InstallItemTest extends AbstractUnitTest
     public void testInstallItem_Context_InProgressSubmission() throws Exception 
     {
         context.turnOffAuthorisationSystem();
-        Collection col = Collection.create(context);
-        WorkspaceItem is = WorkspaceItem.create(context, col, false);
+        WorkspaceItem is = WorkspaceItem.create(context, this.collection, false);
 
         Item result = InstallItem.installItem(context, is);
         context.restoreAuthSystemState();
@@ -65,9 +115,8 @@ public class InstallItemTest extends AbstractUnitTest
     public void testInstallItem_validHandle() throws Exception
     {
         context.turnOffAuthorisationSystem();
-        String handle = "1345/567";
-        Collection col = Collection.create(context);
-        WorkspaceItem is = WorkspaceItem.create(context, col, false);
+        String handle = "123456789/56789";
+        WorkspaceItem is = WorkspaceItem.create(context, this.collection, false);
       
         //Test assigning a specified handle to an item
         // (this handle should not already be used by system, as it doesn't start with "1234567689" prefix)
@@ -93,17 +142,15 @@ public class InstallItemTest extends AbstractUnitTest
             AuthorizeManager.isAdmin((Context) any); result = true;
         }};
 
-        String handle = "1345/567";
-        Collection col = Collection.create(context);
-        WorkspaceItem is = WorkspaceItem.create(context, col, false);
-        WorkspaceItem is2 = WorkspaceItem.create(context, col, false);
+        String handle = "123456789/56789";
+        WorkspaceItem is = WorkspaceItem.create(context, this.collection, false);
+        WorkspaceItem is2 = WorkspaceItem.create(context, this.collection, false);
         
         //Test assigning the same Handle to two different items
         InstallItem.installItem(context, is, handle);
 
         // Assigning the same handle again should throw a RuntimeException
         thrown.expect(RuntimeException.class);
-        thrown.expectMessage("Error while attempting to create identifier");
         InstallItem.installItem(context, is2, handle);
         fail("Exception expected");
     }
@@ -116,9 +163,8 @@ public class InstallItemTest extends AbstractUnitTest
     public void testRestoreItem() throws Exception
     {
         context.turnOffAuthorisationSystem();
-        String handle = "1345/567";
-        Collection col = Collection.create(context);
-        WorkspaceItem is = WorkspaceItem.create(context, col, false);
+        String handle = "123456789/56789";
+        WorkspaceItem is = WorkspaceItem.create(context, this.collection, false);
 
         //get current date
         DCDate now = DCDate.getCurrent();
@@ -189,9 +235,8 @@ public class InstallItemTest extends AbstractUnitTest
     {
         //create a dummy WorkspaceItem
         context.turnOffAuthorisationSystem();
-        String handle = "1345/567";
-        Collection col = Collection.create(context);
-        WorkspaceItem is = WorkspaceItem.create(context, col, false);
+        String handle = "123456789/56789";
+        WorkspaceItem is = WorkspaceItem.create(context, this.collection, false);
 
         // Set "today" as "dc.date.issued"
         is.getItem().addMetadata("dc", "date", "issued", Item.ANY, "today");
@@ -224,9 +269,8 @@ public class InstallItemTest extends AbstractUnitTest
     {
         //create a dummy WorkspaceItem with no dc.date.issued
         context.turnOffAuthorisationSystem();
-        String handle = "1345/567";
-        Collection col = Collection.create(context);
-        WorkspaceItem is = WorkspaceItem.create(context, col, false);
+        String handle = "123456789/56789";
+        WorkspaceItem is = WorkspaceItem.create(context, this.collection, false);
 
         Item result = InstallItem.installItem(context, is, handle);
         context.restoreAuthSystemState();
@@ -244,9 +288,8 @@ public class InstallItemTest extends AbstractUnitTest
     {
         //create a dummy WorkspaceItem
         context.turnOffAuthorisationSystem();
-        String handle = "1345/567";
-        Collection col = Collection.create(context);
-        WorkspaceItem is = WorkspaceItem.create(context, col, false);
+        String handle = "123456789/56789";
+        WorkspaceItem is = WorkspaceItem.create(context, this.collection, false);
 
         // Set "today" as "dc.date.issued"
         is.getItem().addMetadata("dc", "date", "issued", Item.ANY, "today");
diff --git a/dspace-api/src/test/java/org/dspace/content/packager/DSpaceAIPIntegrationTest.java b/dspace-api/src/test/java/org/dspace/content/packager/DSpaceAIPIntegrationTest.java
index e2a0291e0..b16dc14a8 100644
--- a/dspace-api/src/test/java/org/dspace/content/packager/DSpaceAIPIntegrationTest.java
+++ b/dspace-api/src/test/java/org/dspace/content/packager/DSpaceAIPIntegrationTest.java
@@ -908,6 +908,7 @@ public class DSpaceAIPIntegrationTest extends AbstractUnitTest
 
         // Remove all existing policies from the Item
         AuthorizeManager.removeAllPolicies(context, item);
+        context.commit();
 
         // Export item AIP
         log.info("testRestoreItemNoPolicies() - CREATE Item AIP");
diff --git a/dspace-jspui/pom.xml b/dspace-jspui/pom.xml
index b8eda3892..f4d12e02a 100644
--- a/dspace-jspui/pom.xml
+++ b/dspace-jspui/pom.xml
@@ -13,7 +13,7 @@
    <parent>
       <groupId>org.dspace</groupId>
       <artifactId>dspace-parent</artifactId>
-      <version>5.9-SNAPSHOT</version>
+      <version>5.11-SNAPSHOT</version>
       <relativePath>..</relativePath>
    </parent>
 
diff --git a/dspace-jspui/src/main/java/org/dspace/app/webui/discovery/DiscoverySearchRequestProcessor.java b/dspace-jspui/src/main/java/org/dspace/app/webui/discovery/DiscoverySearchRequestProcessor.java
index 409b8dc9f..448788954 100644
--- a/dspace-jspui/src/main/java/org/dspace/app/webui/discovery/DiscoverySearchRequestProcessor.java
+++ b/dspace-jspui/src/main/java/org/dspace/app/webui/discovery/DiscoverySearchRequestProcessor.java
@@ -418,12 +418,23 @@ public class DiscoverySearchRequestProcessor implements SearchRequestProcessor
             }
             catch (SQLException e)
             {
-                throw new SearchProcessorException(e.getMessage(), e);            }
 
-            if ("submit_export_metadata".equals(UIUtil.getSubmitButton(request,
-                    "submit")))
-            {
-                exportMetadata(context, response, resultsItems);
+            }
+
+            if ("submit_export_metadata".equals(UIUtil.getSubmitButton(request,"submit"))) {
+                try {
+                    if (AuthorizeManager.isAdmin(context)) {
+                        exportMetadata(context, response, resultsItems);
+                    }
+                    else {
+                        JSPManager.showJSP(request, response, "/error/authorize.jsp");
+                    }
+                }
+                catch (SQLException e)
+                {
+                    throw new SearchProcessorException(e.getMessage(), e);
+                }
+
             }
         }
         catch (SearchServiceException e)
diff --git a/dspace-jspui/src/main/java/org/dspace/app/webui/jsptag/SelectEPersonTag.java b/dspace-jspui/src/main/java/org/dspace/app/webui/jsptag/SelectEPersonTag.java
index 144abfa5b..21e3dc5d8 100644
--- a/dspace-jspui/src/main/java/org/dspace/app/webui/jsptag/SelectEPersonTag.java
+++ b/dspace-jspui/src/main/java/org/dspace/app/webui/jsptag/SelectEPersonTag.java
@@ -17,6 +17,7 @@ import javax.servlet.jsp.tagext.TagSupport;
 
 import org.apache.commons.lang.ArrayUtils;
 import org.dspace.eperson.EPerson;
+import org.dspace.core.Utils;
 
 /**
  * <p>
@@ -122,7 +123,7 @@ public class SelectEPersonTag extends TagSupport
                 for (int i = 0; i < epeople.length; i++)
                 {
                     out.print("<option value=\"" + epeople[i].getID() + "\">");
-                    out.print(epeople[i].getFullName() + " ("
+                    out.print(Utils.addEntities(epeople[i].getFullName()) + " ("
                             + epeople[i].getEmail() + ")");
                     out.println("</option>");
                 }
diff --git a/dspace-jspui/src/main/java/org/dspace/app/webui/jsptag/SelectGroupTag.java b/dspace-jspui/src/main/java/org/dspace/app/webui/jsptag/SelectGroupTag.java
index cfa519c41..4de21ab71 100644
--- a/dspace-jspui/src/main/java/org/dspace/app/webui/jsptag/SelectGroupTag.java
+++ b/dspace-jspui/src/main/java/org/dspace/app/webui/jsptag/SelectGroupTag.java
@@ -17,6 +17,7 @@ import javax.servlet.jsp.tagext.TagSupport;
 
 import org.apache.commons.lang.ArrayUtils;
 import org.dspace.eperson.Group;
+import org.dspace.core.Utils;
 
 /**
  * <P>Tag for producing an e-person select widget in a form.  Somewhat
@@ -119,7 +120,7 @@ public class SelectGroupTag extends TagSupport
 				for (int i = 0; i < groups.length; i++)
 				{
 					out.print("<option value=\"" + groups[i].getID() + "\">");
-					out.print(groups[i].getName() + " (" + groups[i].getID() + ")");
+					out.print(Utils.addEntities(groups[i].getName()) + " (" + groups[i].getID() + ")");
 					out.println("</option>");
 				}
 			}
diff --git a/dspace-jspui/src/main/webapp/dspace-admin/group-group-select.jsp b/dspace-jspui/src/main/webapp/dspace-admin/group-group-select.jsp
index c2deb05ff..b627b514b 100644
--- a/dspace-jspui/src/main/webapp/dspace-admin/group-group-select.jsp
+++ b/dspace-jspui/src/main/webapp/dspace-admin/group-group-select.jsp
@@ -29,6 +29,7 @@
 <%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>
 
 <%@ page import="org.dspace.eperson.Group"   %>
+<%@ page import="org.dspace.core.Utils" %>
 
 <%
     Group group = (Group) request.getAttribute("group");
@@ -56,7 +57,7 @@
                     <select class="form-control" size="15" name="groups_id" multiple="multiple">
                         <%  for (int i = 0; i < groups.length; i++) { %>
                             <option value="<%= groups[i].getID()%>">
-                                <%= groups[i].getName()%>
+                                <%= Utils.addEntities(groups[i].getName())%>
                             </option>
                         <%  } %>
                 </select>
diff --git a/dspace-jspui/src/main/webapp/dspace-admin/supervise-confirm-remove.jsp b/dspace-jspui/src/main/webapp/dspace-admin/supervise-confirm-remove.jsp
index 59fcb23aa..419ba3d93 100644
--- a/dspace-jspui/src/main/webapp/dspace-admin/supervise-confirm-remove.jsp
+++ b/dspace-jspui/src/main/webapp/dspace-admin/supervise-confirm-remove.jsp
@@ -81,7 +81,7 @@
 <div class="row">
 <label class="col-md-2"><fmt:message key="jsp.dspace-admin.supervise-confirm-remove.supervisorgroupheader"/>:</label>
 <span>
-<%= group.getName() %>
+<%= Utils.addEntities(group.getName()) %>
 </span>
 </div>
 <br/>
diff --git a/dspace-jspui/src/main/webapp/dspace-admin/supervise-link.jsp b/dspace-jspui/src/main/webapp/dspace-admin/supervise-link.jsp
index 18f35fc6a..1b0f7161b 100644
--- a/dspace-jspui/src/main/webapp/dspace-admin/supervise-link.jsp
+++ b/dspace-jspui/src/main/webapp/dspace-admin/supervise-link.jsp
@@ -62,7 +62,7 @@
     for (int i = 0; i < groups.length; i++)
     {
 %>
-                <option value="<%= groups[i].getID() %>"><%= groups[i].getName() %></option>
+                <option value="<%= groups[i].getID() %>"><%= Utils.addEntities(groups[i].getName()) %></option>
 <%
     }
 %>
diff --git a/dspace-jspui/src/main/webapp/tools/eperson-list.jsp b/dspace-jspui/src/main/webapp/tools/eperson-list.jsp
index 16b79e1f0..262c89291 100644
--- a/dspace-jspui/src/main/webapp/tools/eperson-list.jsp
+++ b/dspace-jspui/src/main/webapp/tools/eperson-list.jsp
@@ -290,7 +290,7 @@ function clearEPeople()
 			<td headers="t1">
 			    <input class="btn btn-success" type="button" value="<%
 			if (multiple) { %><fmt:message key="jsp.tools.general.add"/><% }
-			else {          %><fmt:message key="jsp.tools.general.select"/><% } %>" onclick="javascript:<%= clearList %>addEPerson(<%= e.getID() %>, '<%= email %>', '<%= fullname %>');<%= closeWindow %>"/></td>
+			else {          %><fmt:message key="jsp.tools.general.select"/><% } %>" onclick="javascript:<%= clearList %>addEPerson(<%= e.getID() %>, '<%= email %>', '<%= Utils.addEntities(fullname) %>');<%= closeWindow %>"/></td>
 			<td headers="t2"><%= e.getID() %></td>
 			<td headers="t3"><%= (e.getEmail() == null ? "" : Utils.addEntities(e.getEmail())) %></td>
             <td headers="t4">
diff --git a/dspace-jspui/src/main/webapp/tools/group-edit.jsp b/dspace-jspui/src/main/webapp/tools/group-edit.jsp
index 5c105af11..6b4b4539a 100644
--- a/dspace-jspui/src/main/webapp/tools/group-edit.jsp
+++ b/dspace-jspui/src/main/webapp/tools/group-edit.jsp
@@ -49,7 +49,7 @@
                parentlink="/dspace-admin"
                nocache="true">
 
-	<h1><fmt:message key="jsp.tools.group-edit.title"/> : <%=group.getName()%> (id: <%=group.getID()%>)
+	<h1><fmt:message key="jsp.tools.group-edit.title"/> : <%=Utils.addEntities(group.getName())%> (id: <%=group.getID()%>)
 	<dspace:popup page="<%= LocaleSupport.getLocalizedMessage(pageContext, \"help.collection-admin\") +\"#groupeditor\"%>"><fmt:message key="jsp.help"/></dspace:popup>
 	</h1>
     <form name="epersongroup" method="post" action="">
diff --git a/dspace-jspui/src/main/webapp/tools/group-list.jsp b/dspace-jspui/src/main/webapp/tools/group-list.jsp
index 66f00f14c..1b8d03ea1 100644
--- a/dspace-jspui/src/main/webapp/tools/group-list.jsp
+++ b/dspace-jspui/src/main/webapp/tools/group-list.jsp
@@ -27,6 +27,7 @@
 
 <%@ page import="org.dspace.eperson.EPerson" %>
 <%@ page import="org.dspace.eperson.Group" %>
+<%@ page import="org.dspace.core.Utils" %>
 
 <%
     Group[] groups =
@@ -72,7 +73,7 @@
             <tr>
                 <td class="<%= row %>RowOddCol"><%= groups[i].getID() %></td>
                 <td class="<%= row %>RowEvenCol">
-                    <%= groups[i].getName() %>
+                    <%= Utils.addEntities(groups[i].getName()) %>
                 </td>
                 <td class="<%= row %>RowOddCol">
 <%
diff --git a/dspace-jspui/src/main/webapp/tools/group-select-list.jsp b/dspace-jspui/src/main/webapp/tools/group-select-list.jsp
index f335cf295..75b244eef 100644
--- a/dspace-jspui/src/main/webapp/tools/group-select-list.jsp
+++ b/dspace-jspui/src/main/webapp/tools/group-select-list.jsp
@@ -181,7 +181,7 @@ function clearGroups()
 	if (multiple) { %><fmt:message key="jsp.tools.general.add"/><% }
 	else {          %><fmt:message key="jsp.tools.general.select"/><% } %>" onclick="javascript:<%= clearList %>addGroup('<%= g.getID() %>', '<%= Utils.addEntities(fullname) %>');<%= closeWindow %>"/></td>
 			<td headers="t2" class=""><%= g.getID() %></td>
-			<td headers="t3" class=""> <%= g.getName()%></td>
+			<td headers="t3" class=""> <%= Utils.addEntities(g.getName())%></td>
         </tr>
 <%
         row = (row.equals("odd") ? "even" : "odd");
diff --git a/dspace-lni/dspace-lni-client/pom.xml b/dspace-lni/dspace-lni-client/pom.xml
index d7894b536..c38263ddb 100644
--- a/dspace-lni/dspace-lni-client/pom.xml
+++ b/dspace-lni/dspace-lni-client/pom.xml
@@ -11,7 +11,7 @@
    <parent>
       <groupId>org.dspace</groupId>
       <artifactId>dspace-parent</artifactId>
-      <version>5.9-SNAPSHOT</version>
+      <version>5.11-SNAPSHOT</version>
       <relativePath>../..</relativePath>
    </parent>
    
diff --git a/dspace-lni/pom.xml b/dspace-lni/pom.xml
index 236418706..67a2f4333 100644
--- a/dspace-lni/pom.xml
+++ b/dspace-lni/pom.xml
@@ -11,7 +11,7 @@
    <parent>
       <groupId>org.dspace</groupId>
       <artifactId>dspace-parent</artifactId>
-      <version>5.9-SNAPSHOT</version>
+      <version>5.11-SNAPSHOT</version>
       <relativePath>..</relativePath>
    </parent>
 
diff --git a/dspace-oai/pom.xml b/dspace-oai/pom.xml
index cd2bebe1e..af89005ee 100644
--- a/dspace-oai/pom.xml
+++ b/dspace-oai/pom.xml
@@ -8,7 +8,7 @@
     <parent>
         <artifactId>dspace-parent</artifactId>
         <groupId>org.dspace</groupId>
-        <version>5.9-SNAPSHOT</version>
+        <version>5.11-SNAPSHOT</version>
         <relativePath>..</relativePath>
     </parent>
 
diff --git a/dspace-oai/src/main/java/org/dspace/xoai/app/XOAI.java b/dspace-oai/src/main/java/org/dspace/xoai/app/XOAI.java
index ef374790b..04e1ed441 100644
--- a/dspace-oai/src/main/java/org/dspace/xoai/app/XOAI.java
+++ b/dspace-oai/src/main/java/org/dspace/xoai/app/XOAI.java
@@ -276,14 +276,15 @@ public class XOAI {
         }
 
         ByteArrayOutputStream out = new ByteArrayOutputStream();
-        XmlOutputContext context = XmlOutputContext.emptyContext(out, Second);
-        retrieveMetadata(item).write(context);
-        context.getWriter().flush();
-        context.getWriter().close();
+        XmlOutputContext xmlContext = XmlOutputContext.emptyContext(out, Second);
+        retrieveMetadata(context, item).write(xmlContext);
+        xmlContext.getWriter().flush();
+        xmlContext.getWriter().close();
         doc.addField("item.compile", out.toString());
 
         if (verbose) {
-            println("Item with handle " + handle + " indexed");
+            println(String.format("Item %d with handle %s indexed",
+                    item.getID(), handle));
         }
 
 
@@ -465,7 +466,7 @@ public class XOAI {
             while (iterator.hasNext()) {
                 Item item = iterator.next();
                 if (verbose) System.out.println("Compiling item with handle: " + item.getHandle());
-                xoaiItemCacheService.put(item, retrieveMetadata(item));
+                xoaiItemCacheService.put(item, retrieveMetadata(context, item));
                 context.clearCache();
             }
 
diff --git a/dspace-oai/src/main/java/org/dspace/xoai/data/DSpaceSolrItem.java b/dspace-oai/src/main/java/org/dspace/xoai/data/DSpaceSolrItem.java
index f28517ddf..b686a16a4 100644
--- a/dspace-oai/src/main/java/org/dspace/xoai/data/DSpaceSolrItem.java
+++ b/dspace-oai/src/main/java/org/dspace/xoai/data/DSpaceSolrItem.java
@@ -17,6 +17,7 @@ import org.apache.solr.common.SolrDocument;
 
 import com.lyncode.xoai.dataprovider.core.ItemMetadata;
 import com.lyncode.xoai.dataprovider.core.ReferenceSet;
+import java.util.Collection;
 
 /**
  * 
@@ -40,10 +41,21 @@ public class DSpaceSolrItem extends DSpaceItem
         handle = (String) doc.getFieldValue("item.handle");
         lastMod = (Date) doc.getFieldValue("item.lastmodified");
         sets = new ArrayList<ReferenceSet>();
-        for (Object obj : doc.getFieldValues("item.communities"))
-            sets.add(new ReferenceSet((String) obj));
-        for (Object obj : doc.getFieldValues("item.collections"))
-            sets.add(new ReferenceSet((String) obj));
+
+        Collection<Object> communities = doc.getFieldValues("item.communities");
+        if (null != communities)
+            for (Object obj : communities)
+                sets.add(new ReferenceSet((String) obj));
+        else
+            log.warn(String.format("Record for item %s has no communities.", handle));
+
+        Collection<Object> collections = doc.getFieldValues("item.collections");
+        if (null != collections)
+            for (Object obj : collections)
+                sets.add(new ReferenceSet((String) obj));
+        else
+            log.warn(String.format("Record for item %s has no collections.", handle));
+
         deleted = (Boolean) doc.getFieldValue("item.deleted");
     }
 
diff --git a/dspace-oai/src/main/java/org/dspace/xoai/services/impl/xoai/DSpaceItemDatabaseRepository.java b/dspace-oai/src/main/java/org/dspace/xoai/services/impl/xoai/DSpaceItemDatabaseRepository.java
index 65be626e8..508d3739c 100644
--- a/dspace-oai/src/main/java/org/dspace/xoai/services/impl/xoai/DSpaceItemDatabaseRepository.java
+++ b/dspace-oai/src/main/java/org/dspace/xoai/services/impl/xoai/DSpaceItemDatabaseRepository.java
@@ -68,13 +68,13 @@ public class DSpaceItemDatabaseRepository extends DSpaceItemRepository
         this.useCache = configurationService.getBooleanProperty("oai", "cache.enabled", true);
     }
     
-    private Metadata getMetadata (org.dspace.content.Item item) throws IOException {
+    private Metadata getMetadata (org.dspace.content.Item item) throws IOException, ContextServiceException {
         if (this.useCache) {
             if (!cacheService.hasCache(item))
-                cacheService.put(item, ItemUtils.retrieveMetadata(item));
+                cacheService.put(item, ItemUtils.retrieveMetadata(context.getContext(), item));
             
             return cacheService.get(item);
-        } else return ItemUtils.retrieveMetadata(item);
+        } else return ItemUtils.retrieveMetadata(context.getContext(), item);
     }
 
     private List<ReferenceSet> getSets(org.dspace.content.Item item)
diff --git a/dspace-oai/src/main/java/org/dspace/xoai/util/ItemUtils.java b/dspace-oai/src/main/java/org/dspace/xoai/util/ItemUtils.java
index 7ffd48ad7..a06fd8af8 100644
--- a/dspace-oai/src/main/java/org/dspace/xoai/util/ItemUtils.java
+++ b/dspace-oai/src/main/java/org/dspace/xoai/util/ItemUtils.java
@@ -12,6 +12,7 @@ import com.lyncode.xoai.dataprovider.xml.xoai.Metadata;
 import com.lyncode.xoai.util.Base64Utils;
 import org.apache.log4j.LogManager;
 import org.apache.log4j.Logger;
+import org.dspace.app.util.MetadataExposure;
 import org.dspace.authorize.AuthorizeException;
 import org.dspace.content.Bitstream;
 import org.dspace.content.Bundle;
@@ -20,6 +21,7 @@ import org.dspace.content.Item;
 import org.dspace.content.authority.Choices;
 import org.dspace.core.ConfigurationManager;
 import org.dspace.core.Constants;
+import org.dspace.core.Context;
 import org.dspace.core.Utils;
 import org.dspace.xoai.data.DSpaceItem;
 
@@ -62,7 +64,7 @@ public class ItemUtils
         e.setName(name);
         return e;
     }
-    public static Metadata retrieveMetadata (Item item) {
+    public static Metadata retrieveMetadata (Context context, Item item) {
         Metadata metadata;
         
         //DSpaceDatabaseItem dspaceItem = new DSpaceDatabaseItem(item);
@@ -72,6 +74,19 @@ public class ItemUtils
         Metadatum[] vals = item.getMetadata(Item.ANY, Item.ANY, Item.ANY, Item.ANY);
         for (Metadatum val : vals)
         {
+            // Don't expose fields that are hidden by configuration
+            try {
+                if (MetadataExposure.isHidden(context,
+                        val.schema,
+                        val.element,
+                        val.qualifier))
+                {
+                    continue;
+                }
+            } catch(SQLException se) {
+                throw new RuntimeException(se);
+            }
+
             Element valueElem = null;
             Element schema = getElement(metadata.getElement(), val.schema);
             if (schema == null)
diff --git a/dspace-rdf/pom.xml b/dspace-rdf/pom.xml
index 2bf42b29e..2b53f91f8 100644
--- a/dspace-rdf/pom.xml
+++ b/dspace-rdf/pom.xml
@@ -9,7 +9,7 @@
     <parent>
         <groupId>org.dspace</groupId>
         <artifactId>dspace-parent</artifactId>
-        <version>5.9-SNAPSHOT</version>
+        <version>5.11-SNAPSHOT</version>
         <relativePath>..</relativePath>
     </parent>
 
diff --git a/dspace-rest/pom.xml b/dspace-rest/pom.xml
index 3e5c4e993..b670ee919 100644
--- a/dspace-rest/pom.xml
+++ b/dspace-rest/pom.xml
@@ -3,7 +3,7 @@
     <groupId>org.dspace</groupId>
     <artifactId>dspace-rest</artifactId>
     <packaging>war</packaging>
-    <version>5.9-SNAPSHOT</version>
+    <version>5.11-SNAPSHOT</version>
     <name>DSpace REST :: API and Implementation</name>
     <description>DSpace RESTful Web Services API</description>
     <url>http://demo.dspace.org</url>
@@ -11,7 +11,7 @@
     <parent>
         <groupId>org.dspace</groupId>
         <artifactId>dspace-parent</artifactId>
-        <version>5.9-SNAPSHOT</version>
+        <version>5.11-SNAPSHOT</version>
         <relativePath>..</relativePath>
     </parent>
 
@@ -103,6 +103,12 @@
         <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-api</artifactId>
+            <exclusions>
+                <exclusion>
+                    <groupId>org.glassfish.jersey.core</groupId>
+                    <artifactId>jersey-client</artifactId>
+                </exclusion>
+            </exclusions>
         </dependency>
 
         <!-- Connecting to DSpace datasource sets a dependency on Postgres DB-->
@@ -111,7 +117,7 @@
             <artifactId>commons-dbcp</artifactId>
         </dependency>
         <dependency>
-            <groupId>postgresql</groupId>
+            <groupId>org.postgresql</groupId>
             <artifactId>postgresql</artifactId>
         </dependency>
         <dependency>
diff --git a/dspace-services/pom.xml b/dspace-services/pom.xml
index a171af3ba..ee147f2fa 100644
--- a/dspace-services/pom.xml
+++ b/dspace-services/pom.xml
@@ -9,7 +9,7 @@
     <parent>
         <groupId>org.dspace</groupId>
         <artifactId>dspace-parent</artifactId>
-        <version>5.9-SNAPSHOT</version>
+        <version>5.11-SNAPSHOT</version>
     </parent>
 
     <properties>
diff --git a/dspace-solr/pom.xml b/dspace-solr/pom.xml
index a1e2bef6f..bdbeb6d6e 100644
--- a/dspace-solr/pom.xml
+++ b/dspace-solr/pom.xml
@@ -20,7 +20,7 @@
     <parent>
         <groupId>org.dspace</groupId>
         <artifactId>dspace-parent</artifactId>
-        <version>5.9-SNAPSHOT</version>
+        <version>5.11-SNAPSHOT</version>
         <relativePath>..</relativePath>
     </parent>
 
diff --git a/dspace-sword/pom.xml b/dspace-sword/pom.xml
index c9263eb68..e15555844 100644
--- a/dspace-sword/pom.xml
+++ b/dspace-sword/pom.xml
@@ -15,7 +15,7 @@
    <parent>
       <groupId>org.dspace</groupId>
       <artifactId>dspace-parent</artifactId>
-      <version>5.9-SNAPSHOT</version>
+      <version>5.11-SNAPSHOT</version>
       <relativePath>..</relativePath>
    </parent>
 
diff --git a/dspace-swordv2/pom.xml b/dspace-swordv2/pom.xml
index 6c7d2da36..43172a08f 100644
--- a/dspace-swordv2/pom.xml
+++ b/dspace-swordv2/pom.xml
@@ -13,7 +13,7 @@
     <parent>
         <groupId>org.dspace</groupId>
         <artifactId>dspace-parent</artifactId>
-        <version>5.9-SNAPSHOT</version>
+        <version>5.11-SNAPSHOT</version>
         <relativePath>..</relativePath>
     </parent>
 
@@ -81,7 +81,7 @@
             </activation>
             <dependencies>
                 <dependency>
-                    <groupId>postgresql</groupId>
+                    <groupId>org.postgresql</groupId>
                     <artifactId>postgresql</artifactId>
                 </dependency>
             </dependencies>
diff --git a/dspace-xmlui-mirage2/pom.xml b/dspace-xmlui-mirage2/pom.xml
index d062f43ac..c816686c6 100644
--- a/dspace-xmlui-mirage2/pom.xml
+++ b/dspace-xmlui-mirage2/pom.xml
@@ -11,7 +11,7 @@
     <parent>
         <groupId>org.dspace</groupId>
         <artifactId>dspace-parent</artifactId>
-        <version>5.9-SNAPSHOT</version>
+        <version>5.11-SNAPSHOT</version>
         <relativePath>..</relativePath>
     </parent>
 
diff --git a/dspace-xmlui-mirage2/readme.md b/dspace-xmlui-mirage2/readme.md
index 085a6f5db..c8613a881 100644
--- a/dspace-xmlui-mirage2/readme.md
+++ b/dspace-xmlui-mirage2/readme.md
@@ -72,6 +72,7 @@ Afterwards the command `grunt --version` should show the grunt-cli version numbe
 
 For the same reasons as with Node, we’d advise using ruby via [RVM](http://rvm.io/)  (Ruby Version Manager). Even on OSX, which comes with a version of ruby preinstalled, you can save yourself a lot of hassle by using RVM instead. (In most cases there is no need to uninstall the system ruby first). Note that **you need sudo rights to perform the RVM installation**. You won't need sudo again to use RVM, ruby or gem later on
 
+Ruby 2.2.x (or JRuby 9.1.x.x) or above when pre-installing dependencies locally.
 
 #### OSX Ruby Note ####
 On OSX, you need to have the XCode command line tools installed. To test if they're installed try to type `make` in your terminal, if it says "command not found" follow [these instructions](http://www.computersnyou.com/2025/2013/06/install-command-line-tools-in-osx-10-9-mavericks-how-to/) to install them  
@@ -137,6 +138,8 @@ Afterwards the command `grunt --version` should show the grunt-cli version numbe
 
 Download and install: [Ruby Installer](http://rubyinstaller.org/)
 
+Ruby 2.2.x (or JRuby 9.1.x.x) or above when pre-installing dependencies locally.
+
 Make sure its environment variables are set in system variables
 
 Open computer properties:
diff --git a/dspace-xmlui-mirage2/src/main/webapp/package.json b/dspace-xmlui-mirage2/src/main/webapp/package.json
index a2c80b80a..f0096a54d 100644
--- a/dspace-xmlui-mirage2/src/main/webapp/package.json
+++ b/dspace-xmlui-mirage2/src/main/webapp/package.json
@@ -3,7 +3,7 @@
   "version": "0.1.1",
   "dependencies": {},
   "devDependencies": {
-    "bower": "1.3.12",
+    "bower": "1.7.9",
     "grunt": "~0.4.4",
     "grunt-cli": "0.1.13",
     "grunt-contrib-compass": "~0.6.0",
diff --git a/dspace-xmlui-mirage2/src/main/webapp/scripts/search-controls.js b/dspace-xmlui-mirage2/src/main/webapp/scripts/search-controls.js
index 2425a314e..c69028fc5 100644
--- a/dspace-xmlui-mirage2/src/main/webapp/scripts/search-controls.js
+++ b/dspace-xmlui-mirage2/src/main/webapp/scripts/search-controls.js
@@ -262,6 +262,12 @@
 
                 mainForm.find('input[name="' + param + '"]').val(value);
             }
+
+            //DS-3835 ensure that the current scope is passed as form field "scope"
+            mainForm.find('input[name="current-scope"]')
+                    .val($('select[name="scope"]').val())
+                    .attr("name","scope");
+
             //Clear the page param
             mainForm.find('input[name="page"]').val('1');
 
diff --git a/dspace-xmlui-mirage2/src/main/webapp/xsl/core/page-structure.xsl b/dspace-xmlui-mirage2/src/main/webapp/xsl/core/page-structure.xsl
index 08cfcaec9..85ecd4963 100644
--- a/dspace-xmlui-mirage2/src/main/webapp/xsl/core/page-structure.xsl
+++ b/dspace-xmlui-mirage2/src/main/webapp/xsl/core/page-structure.xsl
@@ -309,7 +309,7 @@
                       }
                     });
                 </script>
-                <script type="text/javascript" src="//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">&#160;</script>
+                <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML">&#160;</script>
             </xsl:if>
 
         </head>
diff --git a/dspace-xmlui/pom.xml b/dspace-xmlui/pom.xml
index 76bed7b0e..106104bb4 100644
--- a/dspace-xmlui/pom.xml
+++ b/dspace-xmlui/pom.xml
@@ -11,7 +11,7 @@
    <parent>
       <groupId>org.dspace</groupId>
       <artifactId>dspace-parent</artifactId>
-      <version>5.9-SNAPSHOT</version>
+      <version>5.11-SNAPSHOT</version>
       <relativePath>..</relativePath>
    </parent>
 
@@ -211,6 +211,13 @@
             <artifactId>yuicompressor</artifactId>
             <version>2.3.6</version>
         </dependency>
+
+        <!--Latest spring version requires an up to date jackson core -->
+        <dependency>
+        	<groupId>com.fasterxml.jackson.core</groupId>
+        	<artifactId>jackson-core</artifactId>
+        </dependency>
+
         <!-- Needed for Form Validation -->
         <dependency>
             <groupId>commons-validator</groupId>
diff --git a/dspace-xmlui/src/main/java/org/dspace/app/xmlui/objectmanager/ItemAdapter.java b/dspace-xmlui/src/main/java/org/dspace/app/xmlui/objectmanager/ItemAdapter.java
index 1a135bb2d..338bf7621 100644
--- a/dspace-xmlui/src/main/java/org/dspace/app/xmlui/objectmanager/ItemAdapter.java
+++ b/dspace-xmlui/src/main/java/org/dspace/app/xmlui/objectmanager/ItemAdapter.java
@@ -18,6 +18,7 @@ import org.dspace.content.authority.Choices;
 import org.dspace.content.crosswalk.ContextAwareDisseminationCrosswalk;
 import org.dspace.content.crosswalk.CrosswalkException;
 import org.dspace.content.crosswalk.DisseminationCrosswalk;
+import org.dspace.content.service.ItemService;
 import org.dspace.core.ConfigurationManager;
 import org.dspace.core.Constants;
 import org.dspace.core.Context;
@@ -691,7 +692,10 @@ public class ItemAdapter extends AbstractAdapter
 
         // Suppress license?
         Boolean showLicense = ConfigurationManager.getBooleanProperty("webui.licence_bundle.show");
-        
+
+        // Check if ORIGINAL bundle included (either explicitly or via include all fileGrp types)
+        boolean includeContentBundle = this.fileGrpTypes.isEmpty() ? true : this.fileGrpTypes.contains("ORIGINAL");
+
         // Loop over all requested bundles
         for (Bundle bundle : bundles)
         {
@@ -716,20 +720,41 @@ public class ItemAdapter extends AbstractAdapter
                 continue;
             }
 
+            // /////////////////////////////////////
+            // Determine which bitstreams to include in bundle
+            Bitstream[] bitstreams = new Bitstream[0];
+
+            // If this is the THUMBNAIL bundle, and we are NOT including content bundle,
+            // Then assume this is an item summary page, and we can just include the main thumbnail.
+            if ("THUMBNAIL".equals(bundle.getName()) && !includeContentBundle)
+            {
+                Thumbnail thumbnail = ItemService.getThumbnail(context, item.getID(), false);
+                if(thumbnail != null) {
+                    bitstreams = new Bitstream[] { thumbnail.getThumb() };
+                }
+            }
+            else
+            {   // Default to including all bitstreams
+                bitstreams = bundle.getBitstreams();
+            }
+
+
             // ///////////////////
             // Start bundle's file group
             attributes = new AttributeMap();
             attributes.put("USE", use);
             startElement(METS,"fileGrp",attributes);
-            
-            for (Bitstream bitstream : bundle.getBitstreams())
+
+            for (Bitstream bitstream : bitstreams)
             {
                 // //////////////////////////////
                 // Determine the file's IDs
                 String fileID = getFileID(bitstream);
                 
                 Bitstream originalBitstream = null;
-                if (isDerivedBundle)
+                // If we are looping through a derived bundle and content bundle is included,
+                // ensure each derived bitstream and original bitstream share the same groupID
+                if (isDerivedBundle && includeContentBundle)
                 {
                     originalBitstream = findOriginalBitstream(item, bitstream);
                 }
diff --git a/dspace-xmlui/src/main/webapp/static/js/discovery/search-controls.js b/dspace-xmlui/src/main/webapp/static/js/discovery/search-controls.js
index 31458564e..ddfe9c6ec 100644
--- a/dspace-xmlui/src/main/webapp/static/js/discovery/search-controls.js
+++ b/dspace-xmlui/src/main/webapp/static/js/discovery/search-controls.js
@@ -57,6 +57,12 @@
 
                     mainForm.find('input[name="' + param + '"]').val(value);
                 }
+
+                //DS-3835 ensure that the current scope is passed as form field "scope"
+                mainForm.find('input[name="current-scope"]')
+                        .val($('select[name="scope"]').val())
+                        .attr("name","scope");
+
                 //Clear the page param
                 mainForm.find('input[name="page"]').val('1');
 
diff --git a/dspace-xmlui/src/main/webapp/themes/Mirage/lib/xsl/core/page-structure.xsl b/dspace-xmlui/src/main/webapp/themes/Mirage/lib/xsl/core/page-structure.xsl
index 32b10b2c5..34bd2e3f4 100644
--- a/dspace-xmlui/src/main/webapp/themes/Mirage/lib/xsl/core/page-structure.xsl
+++ b/dspace-xmlui/src/main/webapp/themes/Mirage/lib/xsl/core/page-structure.xsl
@@ -326,7 +326,7 @@
                       }
                     });
                 </script>
-                <script type="text/javascript" src="//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">&#160;</script>
+                <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML">&#160;</script>
             </xsl:if>
 
         </head>
diff --git a/dspace-xmlui/src/main/webapp/themes/Reference/lib/style.css b/dspace-xmlui/src/main/webapp/themes/Reference/lib/style.css
index 539c39af3..e5ab10aa8 100644
--- a/dspace-xmlui/src/main/webapp/themes/Reference/lib/style.css
+++ b/dspace-xmlui/src/main/webapp/themes/Reference/lib/style.css
@@ -1521,4 +1521,10 @@ div.vocabulary-container li.error{
     float:left;
     border: 1px solid #cccccc;
     margin-right: 3px;
-}
\ No newline at end of file
+}
+
+/* DS-3705 fix bottom pagination covering the whole list in /recent-submissions?themepath=Reference/ */
+.pagination.bottom {
+    display: flow-root;
+}
+
diff --git a/dspace/config/crosswalks/google-metadata.properties b/dspace/config/crosswalks/google-metadata.properties
index d1e449c7c..92c4fa2a3 100644
--- a/dspace/config/crosswalks/google-metadata.properties
+++ b/dspace/config/crosswalks/google-metadata.properties
@@ -39,7 +39,7 @@ google.identifiers.technical_report = dc.type:Technical Report
 google.citation_title = dc.title
 google.citation_publisher = dc.publisher
 google.citation_author = dc.author | dc.contributor.author | dc.creator
-google.citation_date = dc.date.copyright | dc.date.issued | dc.date.available | dc.date.accessioned
+google.citation_date = dc.date.issued
 google.citation_language = dc.language.iso
 google.citation_pmid =
 google.citation_abstract_html_url = $handle
diff --git a/dspace/config/crosswalks/oai/xoai.xml b/dspace/config/crosswalks/oai/xoai.xml
index d81d2cf97..051d11c31 100644
--- a/dspace/config/crosswalks/oai/xoai.xml
+++ b/dspace/config/crosswalks/oai/xoai.xml
@@ -39,9 +39,7 @@
         <!--
             Driver Guidelines:
 
-            - http://www.driver-support.eu/documents/DRIVER_Guidelines_v2_Final_2008-11-13.pdf
-
-            Page 57 - 58
+            - https://guidelines.openaire.eu/en/latest/literature/use_of_oai_pmh.html
          -->
         <Context baseurl="driver" name="Driver Context">
             <!-- Date format, field prefixes, etc are ensured by the transformer -->
diff --git a/dspace/config/dspace.cfg b/dspace/config/dspace.cfg
index d73f0f09f..885c4d92d 100644
--- a/dspace/config/dspace.cfg
+++ b/dspace/config/dspace.cfg
@@ -896,6 +896,10 @@ webui.licence_bundle.show = false
 # logged-in user is an Administrator:
 #  1. XMLUI metadata XML view, and Item splash pages (long and short views).
 #  2. JSPUI Item splash pages
+#  3. OAI (every where as there is currently no possibility to authenticate)
+#     Attention: You need to rebuild the OAI SOLR index after every change of
+#     this property. Run [dspace-install]/bin/dspace oai import -c to do so.
+#
 # To designate a field as hidden, add a property here in the form:
 #    metadata.hide.SCHEMA.ELEMENT.QUALIFIER = true
 #
diff --git a/dspace/config/modules/usage-statistics.cfg b/dspace/config/modules/usage-statistics.cfg
index b398f78b1..79cf66538 100644
--- a/dspace/config/modules/usage-statistics.cfg
+++ b/dspace/config/modules/usage-statistics.cfg
@@ -1,5 +1,5 @@
 # The location for the Geo Database retrieved on update/installation
-dbfile = ${dspace.dir}/config/GeoLiteCity.dat
+dbfile = ${dspace.dir}/config/GeoLite2-City.mmdb
 
 # Timeout for the resolver in the DNS lookup
 # Time in milliseconds, defaults to 200 for backward compatibility
diff --git a/dspace/config/spring/api/orcid-authority-services.xml b/dspace/config/spring/api/orcid-authority-services.xml
index a5137e0fe..7cf5e43dc 100644
--- a/dspace/config/spring/api/orcid-authority-services.xml
+++ b/dspace/config/spring/api/orcid-authority-services.xml
@@ -28,7 +28,7 @@
     <bean name="AuthorityTypes" class="org.dspace.authority.AuthorityTypes">
         <property name="types">
             <list>
-                <bean class="org.dspace.authority.orcid.OrcidAuthorityValue"/>
+                <bean class="org.dspace.authority.orcid.Orcidv2AuthorityValue"/>
                 <bean class="org.dspace.authority.PersonAuthorityValue"/>
             </list>
         </property>
@@ -42,9 +42,9 @@
     </bean>
 
     <alias name="OrcidSource" alias="AuthoritySource"/>
-    <bean name="OrcidSource" class="org.dspace.authority.orcid.Orcid">
-        <constructor-arg value="http://pub.orcid.org"/>
+    <bean name="OrcidSource" class="org.dspace.authority.orcid.Orcidv2" init-method="init">
+        <constructor-arg value="https://pub.orcid.org/v2.1"/>
     </bean>
 
 
-</beans>
\ No newline at end of file
+</beans>
diff --git a/dspace/modules/additions/pom.xml b/dspace/modules/additions/pom.xml
index 4ffa4c6f2..b4d4d7adf 100644
--- a/dspace/modules/additions/pom.xml
+++ b/dspace/modules/additions/pom.xml
@@ -17,7 +17,7 @@
    <parent>
       <groupId>org.dspace</groupId>
       <artifactId>modules</artifactId>
-      <version>5.9-SNAPSHOT</version>
+      <version>5.11-SNAPSHOT</version>
       <relativePath>..</relativePath>
    </parent>
 
diff --git a/dspace/modules/jspui/pom.xml b/dspace/modules/jspui/pom.xml
index 12ccccae4..2d73b5f3b 100644
--- a/dspace/modules/jspui/pom.xml
+++ b/dspace/modules/jspui/pom.xml
@@ -12,7 +12,7 @@
     <parent>
         <groupId>org.dspace</groupId>
         <artifactId>modules</artifactId>
-        <version>5.9-SNAPSHOT</version>
+        <version>5.11-SNAPSHOT</version>
         <relativePath>..</relativePath>
     </parent>
 
diff --git a/dspace/modules/lni/pom.xml b/dspace/modules/lni/pom.xml
index d020fd9e8..3fec31740 100644
--- a/dspace/modules/lni/pom.xml
+++ b/dspace/modules/lni/pom.xml
@@ -13,7 +13,7 @@
    <parent>
       <groupId>org.dspace</groupId>
       <artifactId>modules</artifactId>
-      <version>5.9-SNAPSHOT</version>
+      <version>5.11-SNAPSHOT</version>
       <relativePath>..</relativePath>
    </parent>
 
diff --git a/dspace/modules/oai/pom.xml b/dspace/modules/oai/pom.xml
index 13b3095ab..e4afaa1fb 100644
--- a/dspace/modules/oai/pom.xml
+++ b/dspace/modules/oai/pom.xml
@@ -12,7 +12,7 @@
     <parent>
         <artifactId>modules</artifactId>
         <groupId>org.dspace</groupId>
-        <version>5.9-SNAPSHOT</version>
+        <version>5.11-SNAPSHOT</version>
         <relativePath>..</relativePath>
     </parent>
 
diff --git a/dspace/modules/pom.xml b/dspace/modules/pom.xml
index aee15dd12..3d4e18d88 100644
--- a/dspace/modules/pom.xml
+++ b/dspace/modules/pom.xml
@@ -9,7 +9,7 @@
 	<parent>
 		<groupId>org.dspace</groupId>
 		<artifactId>dspace-parent</artifactId>
-		<version>5.9-SNAPSHOT</version>
+		<version>5.11-SNAPSHOT</version>
 		<relativePath>../../pom.xml</relativePath>
 	</parent>
 
diff --git a/dspace/modules/rdf/pom.xml b/dspace/modules/rdf/pom.xml
index 40b0e4157..297ac6a35 100644
--- a/dspace/modules/rdf/pom.xml
+++ b/dspace/modules/rdf/pom.xml
@@ -11,7 +11,7 @@
     <parent>
         <artifactId>modules</artifactId>
         <groupId>org.dspace</groupId>
-        <version>5.9-SNAPSHOT</version>
+        <version>5.11-SNAPSHOT</version>
         <relativePath>..</relativePath>
     </parent>
 
diff --git a/dspace/modules/rest/pom.xml b/dspace/modules/rest/pom.xml
index 770d90bd5..a27baa2cf 100644
--- a/dspace/modules/rest/pom.xml
+++ b/dspace/modules/rest/pom.xml
@@ -12,7 +12,7 @@
     <parent>
         <groupId>org.dspace</groupId>
         <artifactId>modules</artifactId>
-        <version>5.9-SNAPSHOT</version>
+        <version>5.11-SNAPSHOT</version>
         <relativePath>..</relativePath>
     </parent>
 
@@ -88,6 +88,12 @@
         <dependency>
             <groupId>org.dspace.modules</groupId>
             <artifactId>additions</artifactId>
+            <exclusions>
+                <exclusion>
+                    <groupId>org.glassfish.jersey.core</groupId>
+                    <artifactId>jersey-client</artifactId>
+                </exclusion>
+            </exclusions>
         </dependency>
 
         <!-- DSpace REST Webapp -->
diff --git a/dspace/modules/solr/pom.xml b/dspace/modules/solr/pom.xml
index 036bb7272..4e1849b23 100644
--- a/dspace/modules/solr/pom.xml
+++ b/dspace/modules/solr/pom.xml
@@ -2,7 +2,7 @@
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.dspace.modules</groupId>
    <artifactId>solr</artifactId>
-   <version>5.9-SNAPSHOT</version>
+   <version>5.11-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>DSpace SOLR :: Local Customizations</name>
    <description>
@@ -13,7 +13,7 @@
    <parent>
       <groupId>org.dspace</groupId>
       <artifactId>modules</artifactId>
-      <version>5.9-SNAPSHOT</version>
+      <version>5.11-SNAPSHOT</version>
       <relativePath>..</relativePath>
    </parent>
 
diff --git a/dspace/modules/sword/pom.xml b/dspace/modules/sword/pom.xml
index 1c60d5dd5..e65e5f77d 100644
--- a/dspace/modules/sword/pom.xml
+++ b/dspace/modules/sword/pom.xml
@@ -16,7 +16,7 @@
    <parent>
       <groupId>org.dspace</groupId>
       <artifactId>modules</artifactId>
-      <version>5.9-SNAPSHOT</version>
+      <version>5.11-SNAPSHOT</version>
       <relativePath>..</relativePath>
    </parent>
 
diff --git a/dspace/modules/swordv2/pom.xml b/dspace/modules/swordv2/pom.xml
index 077747a81..185944db4 100644
--- a/dspace/modules/swordv2/pom.xml
+++ b/dspace/modules/swordv2/pom.xml
@@ -16,7 +16,7 @@
    <parent>
       <groupId>org.dspace</groupId>
       <artifactId>modules</artifactId>
-      <version>5.9-SNAPSHOT</version>
+      <version>5.11-SNAPSHOT</version>
       <relativePath>..</relativePath>
    </parent>
 
@@ -82,7 +82,7 @@
          </activation>
          <dependencies>
             <dependency>
-               <groupId>postgresql</groupId>
+               <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
             </dependency>
          </dependencies>
diff --git a/dspace/modules/xmlui-mirage2/pom.xml b/dspace/modules/xmlui-mirage2/pom.xml
index f98f5644a..f3a3cdf82 100644
--- a/dspace/modules/xmlui-mirage2/pom.xml
+++ b/dspace/modules/xmlui-mirage2/pom.xml
@@ -12,7 +12,7 @@
     <parent>
         <groupId>org.dspace</groupId>
         <artifactId>modules</artifactId>
-        <version>5.9-SNAPSHOT</version>
+        <version>5.11-SNAPSHOT</version>
         <relativePath>..</relativePath>
     </parent>
 
diff --git a/dspace/modules/xmlui/pom.xml b/dspace/modules/xmlui/pom.xml
index 4d636320d..982c23b05 100644
--- a/dspace/modules/xmlui/pom.xml
+++ b/dspace/modules/xmlui/pom.xml
@@ -12,7 +12,7 @@
     <parent>
         <groupId>org.dspace</groupId>
         <artifactId>modules</artifactId>
-        <version>5.9-SNAPSHOT</version>
+        <version>5.11-SNAPSHOT</version>
         <relativePath>..</relativePath>
     </parent>
 
@@ -179,7 +179,7 @@
                 <dependency>
                     <groupId>org.dspace.modules</groupId>
                     <artifactId>xmlui-mirage2</artifactId>
-                    <version>5.9-SNAPSHOT</version>
+                    <version>5.11-SNAPSHOT</version>
                     <type>war</type>
                 </dependency>
             </dependencies>
diff --git a/dspace/pom.xml b/dspace/pom.xml
index 741087ee7..b11f44d27 100644
--- a/dspace/pom.xml
+++ b/dspace/pom.xml
@@ -15,7 +15,7 @@
     <parent>
         <groupId>org.dspace</groupId>
         <artifactId>dspace-parent</artifactId>
-        <version>5.9-SNAPSHOT</version>
+        <version>5.11-SNAPSHOT</version>
         <relativePath>..</relativePath>
     </parent>
 
diff --git a/dspace/solr/search/conf/solrconfig.xml b/dspace/solr/search/conf/solrconfig.xml
index 1943069d0..09aca6509 100644
--- a/dspace/solr/search/conf/solrconfig.xml
+++ b/dspace/solr/search/conf/solrconfig.xml
@@ -1048,7 +1048,7 @@
       <str name="uprefix">ignored_</str>
 
       <!-- capture link hrefs but ignore div attributes -->
-      <str name="captureAttr">false</str>
+      <str name="captureAttr">true</str>
       <!--<str name="fmap.a">links</str>-->
       <!--<str name="fmap.div">ignored_</str>-->
     </lst>
diff --git a/dspace/src/main/config/build.xml b/dspace/src/main/config/build.xml
index 3264b586d..e75a75fea 100644
--- a/dspace/src/main/config/build.xml
+++ b/dspace/src/main/config/build.xml
@@ -9,10 +9,7 @@
 
 -->
 <!--
-  - DSpace build file
-  -
-  - Version:  $Revision$
-  - Date:     $Date$
+  - DSpace installer scripts
   -->
 
 <project name="DSpace" default="help">
@@ -92,9 +89,9 @@ Common usage:
         <format property="build.date" pattern="yyyyMMdd-HHmmss" />
     </tstamp>
 
-    <!-- Default location of GeoLiteCity.dat.gz to download. This may be overridden, if URL path changes. -->
-    <property name="geolite" value="http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz" />
-    
+    <!-- Default location of GeoLite2 City database to download. This may be overridden, if URL path changes. -->
+    <property name="geolite" value="http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz" />
+
     <!-- Default location of lucene-core JAR to download (for update_solr_indexes). This may be overridden, if URL path changes. -->
     <!-- NOTE: this URL should have the version of the JAR replaced with "[version]" -->
     <property name="lucene-core" value="http://search.maven.org/remotecontent?filepath=org/apache/lucene/lucene-core/[version]/lucene-core-[version].jar" />
@@ -903,9 +900,18 @@ Common usage:
         <echo>Downloading: ${geolite}</echo>
         <trycatch property="geolite.error">
             <try>
-                <get src="${geolite}" dest="${dspace.dir}/config/GeoLiteCity.dat.gz" verbose="true"/>
-                <gunzip src="${dspace.dir}/config/GeoLiteCity.dat.gz" dest="${dspace.dir}/config/GeoLiteCity.dat" />
-                <delete file="${dspace.dir}/config/GeoLiteCity.dat.gz" />
+                <get src="${geolite}"
+                     dest="${dspace.dir}/config/GeoLite2-City.tar.gz"
+                     verbose="true"/>
+                <untar src="${dspace.dir}/config/GeoLite2-City.tar.gz"
+                       dest="${dspace.dir}/config/"
+                       compression='gzip'>
+                    <patternset>
+                        <include name='**/GeoLite2-City.mmdb'/>
+                    </patternset>
+                    <mapper type='flatten'/>
+                </untar>
+                <delete file="${dspace.dir}/config/GeoLite2-City.tar.gz"/>
             </try>
             <catch>
                 <echo>
@@ -923,10 +929,10 @@ ant update_geolite
 OR
 
 You may manually install this file by following these steps:
-(1) Download the file from ${geolite}
-(2) Unzip it to create a file named 'GeoLiteCity.dat'
-(3) Copy that file to '${dspace.dir}/config/GeoLiteCity.dat'
-        
+(1) Download the latest database archive from ${geolite}
+(2) Unpack it.'
+(3) Copy the file 'GeoLite2-City.mmdb' to '${usage-statistics.dbfile}'.
+
 ====================================================================
                 </echo>
             </catch>
@@ -937,7 +943,7 @@ You may manually install this file by following these steps:
     <target name="check_geolite">
         <condition property="need.geolite">
             <not>
-                <available file="${dspace.dir}/config/GeoLiteCity.dat" />
+                <available file="${usage-statistics.dbfile}" />
             </not>
         </condition>
     </target>
diff --git a/dspace/src/main/docker/build.properties b/dspace/src/main/docker/build.properties
new file mode 100644
index 000000000..a167215d3
--- /dev/null
+++ b/dspace/src/main/docker/build.properties
@@ -0,0 +1,178 @@
+# ------------------------------------------------------------------------
+# This file contains the localized properties for published DSpace images.
+# See https://github.com/DSpace-Labs/DSpace-Docker-Images for usage information.
+# ------------------------------------------------------------------------
+
+# DSpace build.properties
+# This file should be customised to suit your build environment.
+# Note that not all configuration is handled here, only the most common
+# properties that tend to differ between build environments.
+# For adjusting global settings or more complex settings, edit the relevant config file.
+#
+# IMPORTANT: Do not remove or comment out settings in build.properties
+# When you edit the "build.properties" file (or a custom *.properties file),
+# take care not to remove or comment out any settings. Doing so, may cause
+# your final "dspace.cfg" file to be misconfigured with regards to that
+# particular setting.  Instead, if you wish to remove/disable a particular
+# setting, just clear out its value.  For example, if you don't want to be
+# notified of new user registrations, ensure the "mail.registration.notify"
+# setting has no value, e.g. "mail.registration.notify="
+#
+
+##########################
+# SERVER CONFIGURATION #
+##########################
+
+# DSpace installation directory. This is the location where you want
+# to install DSpace. NOTE: this value will be copied over to the
+# "dspace.dir" setting in the final "dspace.cfg" file. It can be
+# modified later on in your "dspace.cfg", if needed.
+dspace.install.dir=/dspace
+
+# DSpace host name - should match base URL.  Do not include port number
+dspace.hostname = localhost
+
+# DSpace base host URL.  Include port number etc.
+dspace.baseUrl = http://localhost:8080
+
+# The user interface you will be using for DSpace. Common usage is either xmlui or jspui
+dspace.ui = xmlui
+
+# Full link your end users will use to access DSpace. In most cases, this will be the baseurl followed by
+# the context path to the UI you are using.
+#
+# Alternatively, you can use a url redirect or deploy the web application under the servlet container root.
+# In this case, make sure to remove the /${dspace.ui} from the dspace.url property.
+dspace.url = ${dspace.baseUrl}/${dspace.ui}
+
+# Name of the site
+dspace.name = DSpace at My University
+
+# Solr server
+solr.server=http://localhost:8080/solr
+
+# Default language for metadata values
+default.language = en_US
+
+##########################
+# DATABASE CONFIGURATION #
+##########################
+
+db.name=postgres
+
+# Uncomment the appropriate block below for your database.
+# postgres
+db.driver=org.postgresql.Driver
+db.url=jdbc:postgresql://dspacedb:5432/dspace
+db.username=dspace
+db.password=dspace
+
+# oracle
+#db.driver= oracle.jdbc.OracleDriver
+#db.url=jdbc:oracle:thin:@//localhost:1521/xe
+#db.username=dspace
+#db.password=dspace
+
+# Schema name - if your database contains multiple schemas, you can avoid
+# problems with retrieving the definitions of duplicate object names by
+# specifying the schema name that is used for DSpace.
+# ORACLE USAGE NOTE: In Oracle, schema is equivalent to "username". This means
+# specifying a "db.schema" is often unnecessary (i.e. you can leave it blank),
+# UNLESS your Oracle DB Account (in db.username) has access to multiple schemas.
+db.schema =
+
+# Maximum number of DB connections in pool
+db.maxconnections = 30
+
+# Maximum time to wait before giving up if all connections in pool are busy (milliseconds)
+db.maxwait = 5000
+
+# Maximum number of idle connections in pool (-1 = unlimited)
+db.maxidle = -1
+
+# Determine if prepared statement should be cached. (default is true)
+db.statementpool = true
+
+# Specify a name for the connection pool (useful if you have multiple applications sharing Tomcat's dbcp)
+# If not specified, defaults to 'dspacepool'
+db.poolname = dspacepool
+
+#######################
+# EMAIL CONFIGURATION #
+#######################
+
+# SMTP mail server
+mail.server = smtp.example.com
+
+# SMTP mail server authentication username and password (if required)
+# mail.server.username = myusername
+# mail.server.password = mypassword
+mail.server.username=
+mail.server.password=
+
+# SMTP mail server alternate port (defaults to 25)
+mail.server.port = 25
+
+# From address for mail
+mail.from.address = dspace-noreply@myu.edu
+
+# Currently limited to one recipient!
+mail.feedback.recipient = dspace-help@myu.edu
+
+# General site administration (Webmaster) e-mail
+mail.admin = dspace-help@myu.edu
+
+# Recipient for server errors and alerts
+#mail.alert.recipient = email-address-here
+mail.alert.recipient=
+
+# Recipient for new user registration emails
+#mail.registration.notify = email-address-here
+mail.registration.notify=
+
+
+########################
+# HANDLE CONFIGURATION #
+########################
+
+# Canonical Handle URL prefix
+#
+# By default, DSpace is configured to use http://hdl.handle.net/
+# as the canonical URL prefix when generating dc.identifier.uri
+# during submission, and in the 'identifier' displayed in JSPUI
+# item record pages.
+#
+# If you do not subscribe to CNRI's handle service, you can change this
+# to match the persistent URL service you use, or you can force DSpace
+# to use your site's URL, eg.
+#handle.canonical.prefix = ${dspace.url}/handle/
+#
+# Note that this will not alter dc.identifer.uri metadata for existing
+# items (only for subsequent submissions), but it will alter the URL
+# in JSPUI's 'identifier' message on item record pages for existing items.
+#
+# If omitted, the canonical URL prefix will be http://hdl.handle.net/
+handle.canonical.prefix = http://hdl.handle.net/
+
+# CNRI Handle prefix
+handle.prefix = 123456789
+
+#######################
+# PROXY CONFIGURATION #
+#######################
+# uncomment and specify both properties if proxy server required
+# proxy server for external http requests - use regular hostname without port number
+http.proxy.host =
+
+# port number of proxy server
+http.proxy.port =
+
+#####################
+# LOGLEVEL SETTINGS #
+#####################
+loglevel.other = INFO
+# loglevel.other: Log level for other third-party tools/APIs used by DSpace
+# Possible values (from most to least info): DEBUG, INFO, WARN, ERROR, FATAL
+loglevel.dspace = INFO
+# loglevel.dspace: Log level for all DSpace-specific code (org.dspace.*)
+# Possible values (from most to least info): DEBUG, INFO, WARN, ERROR, FATAL
diff --git a/dspace/src/main/docker/test/rest_web.xml b/dspace/src/main/docker/test/rest_web.xml
new file mode 100644
index 000000000..552940525
--- /dev/null
+++ b/dspace/src/main/docker/test/rest_web.xml
@@ -0,0 +1,107 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+
+    The contents of this file are subject to the license and copyright
+    detailed in the LICENSE and NOTICE files at the root of the source
+    tree and available online at
+
+    http://www.dspace.org/license/
+
+-->
+<!-- 
+    THIS FILE EXISTS TO SIMPLIFY TESTING IN DOCKER.
+    This file overrides the requirement to connect to the legacy rest service over https.
+ -->
+ <web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xmlns="http://java.sun.com/xml/ns/javaee"
+         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
+         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
+         id="WebApp_ID" version="2.5">
+    <servlet>
+        <servlet-name>DSpace REST API</servlet-name>
+        <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
+        <init-param>
+            <!--
+             The jersey ServletContainer will look for our Root Resource Class
+             (i.e. our HelloWorld class) in the foo.bar package
+             There are other ways to register this; see the jersey documentation for
+             more details
+            -->
+            <param-name>com.sun.jersey.config.property.packages</param-name>
+            <param-value>org.dspace.rest</param-value>
+        </init-param>
+        <init-param>
+            <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
+            <param-value>true</param-value>
+        </init-param>
+        <!--
+        Load the ServletContainer at startup.  A value of 1 indicates the ServletContainer
+        is a high priority servlet to load
+         -->
+        <load-on-startup>1</load-on-startup>
+    </servlet>
+
+    <servlet-mapping>
+        <servlet-name>DSpace REST API</servlet-name>
+        <url-pattern>/*</url-pattern>
+    </servlet-mapping>
+    
+    <!-- Security settings and mapping -->
+    <!-- 
+    <security-constraint>
+        <web-resource-collection>
+            <web-resource-name>DSpace REST API</web-resource-name>
+            <url-pattern>/*</url-pattern>
+        </web-resource-collection>
+        <user-data-constraint>
+            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
+        </user-data-constraint>
+    </security-constraint>
+     -->
+     
+    <!-- DSpace Configuration Information -->
+    <context-param>
+        <param-name>dspace-config</param-name>
+        <param-value>${dspace.dir}/config/dspace.cfg</param-value>
+    </context-param>
+
+    <!-- new ConfigurationService initialization for dspace.dir -->
+    <context-param>
+        <description>
+            The location of the main DSpace configuration file
+        </description>
+        <param-name>dspace.dir</param-name>
+        <param-value>${dspace.dir}</param-value>
+    </context-param>
+
+    <context-param>
+        <param-name>contextConfigLocation</param-name>
+        <param-value>
+            /WEB-INF/applicationContext.xml
+        </param-value>
+        <!--
+            Add this context if using Spring Security
+            /WEB-INF/applicationContext-security.xml
+        -->
+    </context-param>
+
+    <!-- 
+       DSpace Kernel startup listener. This listener is in charge of initializing/starting the
+       DSpace Kernel. It MUST be listed BEFORE any other DSpace listeners, as DSpace services
+       will not function until the Kernel is initialized.
+    -->
+    <listener>
+        <listener-class>org.dspace.servicemanager.servlet.DSpaceKernelServletContextListener</listener-class>
+    </listener>
+
+    <listener>
+        <listener-class>org.dspace.app.util.DSpaceContextListener</listener-class>
+    </listener>
+    
+    <listener>
+        <listener-class>
+            org.springframework.web.context.ContextLoaderListener
+        </listener-class>
+    </listener>
+
+</web-app>
diff --git a/dspace/src/main/docker/test/solr_web.xml b/dspace/src/main/docker/test/solr_web.xml
new file mode 100644
index 000000000..eacdeddc4
--- /dev/null
+++ b/dspace/src/main/docker/test/solr_web.xml
@@ -0,0 +1,207 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">
+<!--
+
+    The contents of this file are subject to the license and copyright
+    detailed in the LICENSE and NOTICE files at the root of the source
+    tree and available online at
+
+    http://www.dspace.org/license/
+
+-->
+<!-- 
+    THIS FILE EXISTS TO SIMPLIFY TESTING IN DOCKER.
+    This file overrides the solr localhost restriction.
+ -->
+<web-app>
+
+  <!-- Uncomment if you are trying to use a Resin version before 3.0.19.
+    Their XML implementation isn't entirely compatible with Xerces.
+    Below are the implementations to use with Sun's JVM.
+  <system-property javax.xml.xpath.XPathFactory=
+             "com.sun.org.apache.xpath.internal.jaxp.XPathFactoryImpl"/>
+  <system-property javax.xml.parsers.DocumentBuilderFactory=
+             "com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl"/>
+  <system-property javax.xml.parsers.SAXParserFactory=
+             "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl"/>
+   -->
+
+  <!-- People who want to hardcode their "Solr Home" directly into the
+       WAR File can set the JNDI property here...
+   -->
+  <!--
+    <env-entry>
+       <env-entry-name>solr/home</env-entry-name>
+       <env-entry-value>/put/your/solr/home/here</env-entry-value>
+       <env-entry-type>java.lang.String</env-entry-type>
+    </env-entry>
+   -->
+
+  <context-param>
+      <param-name>log4j.configuration</param-name>
+      <param-value>${dspace.dir}/config/log4j-solr.properties</param-value>
+      <description>URL locating a Log4J configuration file (properties or XML).</description>
+  </context-param>
+   
+  <!-- Any path (name) registered in solrconfig.xml will be sent to that filter -->
+  <filter>
+      <filter-name>LocalHostRestrictionFilter</filter-name>
+      <filter-class>org.dspace.solr.filters.LocalHostRestrictionFilter</filter-class>
+  </filter>
+
+  <!-- Any path (name) registered in solrconfig.xml will be sent to that filter -->
+  <filter>
+    <filter-name>SolrRequestFilter</filter-name>
+    <filter-class>org.apache.solr.servlet.SolrDispatchFilter</filter-class>
+    <!-- If you are wiring Solr into a larger web application which controls
+         the web context root, you will probably want to mount Solr under
+         a path prefix (app.war with /app/solr mounted into it, for example).
+         You will need to put this prefix in front of the SolrDispatchFilter
+         url-pattern mapping too (/solr/*), and also on any paths for
+         legacy Solr servlet mappings you may be using.
+         For the Admin UI to work properly in a path-prefixed configuration,
+         the admin folder containing the resources needs to be under the app context root
+         named to match the path-prefix.  For example:
+
+            .war
+               xxx
+                 js
+                   main.js
+    -->
+    <!--
+    <init-param>
+      <param-name>path-prefix</param-name>
+      <param-value>/xxx</param-value>
+    </init-param>
+    -->
+  </filter>
+
+  <!-- 
+  <filter-mapping>
+      <filter-name>LocalHostRestrictionFilter</filter-name>
+      <url-pattern>/*</url-pattern>
+  </filter-mapping>
+  -->
+ 
+  <filter-mapping>
+    <!--
+      NOTE: When using multicore, /admin JSP URLs with a core specified
+      such as /solr/coreName/admin/stats.jsp get forwarded by a
+      RequestDispatcher to /solr/admin/stats.jsp with the specified core
+      put into request scope keyed as "org.apache.solr.SolrCore".
+
+      It is unnecessary, and potentially problematic, to have the SolrDispatchFilter
+      configured to also filter on forwards.  Do not configure
+      this dispatcher as <dispatcher>FORWARD</dispatcher>.
+    -->
+    <filter-name>SolrRequestFilter</filter-name>
+    <url-pattern>/*</url-pattern>
+  </filter-mapping>
+  
+  <!-- Otherwise it will continue to the old servlets -->
+
+  <listener>
+    <listener-class>org.dspace.solr.filters.ConfigureLog4jListener</listener-class>
+  </listener>
+
+ <servlet>
+    <servlet-name>Zookeeper</servlet-name>
+    <servlet-class>org.apache.solr.servlet.ZookeeperInfoServlet</servlet-class>
+  </servlet>
+  
+  <servlet>
+    <servlet-name>LoadAdminUI</servlet-name>
+    <servlet-class>org.apache.solr.servlet.LoadAdminUiServlet</servlet-class>
+  </servlet>
+  
+  <!-- Remove in Solr 5.0 -->
+  <!-- This sends SC_MOVED_PERMANENTLY (301) for resources that changed in 4.0 -->
+  <servlet>
+    <servlet-name>RedirectOldAdminUI</servlet-name>
+    <servlet-class>org.apache.solr.servlet.RedirectServlet</servlet-class>
+    <init-param>
+      <param-name>destination</param-name>
+      <param-value>${context}/#/</param-value>
+    </init-param>
+  </servlet>
+  
+  <servlet>
+    <servlet-name>RedirectOldZookeeper</servlet-name>
+    <servlet-class>org.apache.solr.servlet.RedirectServlet</servlet-class>
+    <init-param>
+      <param-name>destination</param-name>
+      <param-value>${context}/zookeeper</param-value>
+    </init-param>
+  </servlet>
+  
+  <servlet>
+    <servlet-name>RedirectLogging</servlet-name>
+    <servlet-class>org.apache.solr.servlet.RedirectServlet</servlet-class>
+    <init-param>
+      <param-name>destination</param-name>
+      <param-value>${context}/#/~logging</param-value>
+    </init-param>
+  </servlet>
+
+  <servlet>
+    <servlet-name>SolrRestApi</servlet-name>
+    <servlet-class>org.restlet.ext.servlet.ServerServlet</servlet-class>
+    <init-param>
+      <param-name>org.restlet.application</param-name>
+      <param-value>org.apache.solr.rest.SolrRestApi</param-value>
+    </init-param>
+  </servlet>
+  
+  <servlet-mapping>
+    <servlet-name>RedirectOldAdminUI</servlet-name>
+    <url-pattern>/admin/</url-pattern>
+  </servlet-mapping>
+  <servlet-mapping>
+    <servlet-name>RedirectOldAdminUI</servlet-name>
+    <url-pattern>/admin</url-pattern>
+  </servlet-mapping>
+  <servlet-mapping>
+    <servlet-name>RedirectOldZookeeper</servlet-name>
+    <url-pattern>/zookeeper.jsp</url-pattern>
+  </servlet-mapping>
+  <servlet-mapping>
+    <servlet-name>RedirectLogging</servlet-name>
+    <url-pattern>/logging</url-pattern>
+  </servlet-mapping>
+
+  <!-- Servlet Mapping -->
+  <servlet-mapping>
+    <servlet-name>Zookeeper</servlet-name>
+    <url-pattern>/zookeeper</url-pattern>
+  </servlet-mapping>
+  
+  <servlet-mapping>
+    <servlet-name>LoadAdminUI</servlet-name>
+    <url-pattern>/admin.html</url-pattern>
+  </servlet-mapping>
+
+  <servlet-mapping>
+    <servlet-name>SolrRestApi</servlet-name>
+    <url-pattern>/schema/*</url-pattern>
+  </servlet-mapping>
+  
+  <mime-mapping>
+    <extension>.xsl</extension>
+    <!-- per http://www.w3.org/TR/2006/PR-xslt20-20061121/ -->
+    <mime-type>application/xslt+xml</mime-type>
+  </mime-mapping>
+
+  <welcome-file-list>
+    <welcome-file>admin.html</welcome-file>
+  </welcome-file-list>
+
+  <!-- People who want to hardcode their "Solr Home" directly into the
+       WAR File can set the JNDI property here...
+   -->
+    <env-entry>
+        <env-entry-name>solr/home</env-entry-name>
+        <env-entry-value>${dspace.dir}/solr</env-entry-value>
+        <env-entry-type>java.lang.String</env-entry-type>
+    </env-entry>
+
+</web-app>
diff --git a/pom.xml b/pom.xml
index ce446bee4..6dd03ce03 100644
--- a/pom.xml
+++ b/pom.xml
@@ -4,7 +4,7 @@
    <groupId>org.dspace</groupId>
    <artifactId>dspace-parent</artifactId>
    <packaging>pom</packaging>
-   <version>5.9-SNAPSHOT</version>
+   <version>5.11-SNAPSHOT</version>
    <name>DSpace Parent Project</name>
    <description>
    	DSpace open source software is a turnkey institutional repository application.
@@ -30,6 +30,8 @@
 
     <properties>
         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+        <project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>
+        <jackson.version>2.9.3</jackson.version>
         <java.version>1.7</java.version>
         <lucene.version>4.10.2</lucene.version>
         <solr.version>4.10.2</solr.version>
@@ -405,23 +407,31 @@
                                     <fileTemplate>src/main/license/third-party-file-groupByLicense.ftl</fileTemplate>
                                     <!-- License names that should all be merged into the *first* listed name -->
                                     <licenseMerges>
-                                        <licenseMerge>Apache Software License, Version 2.0|The Apache Software License, Version 2.0|Apache License Version 2.0|Apache License, Version 2.0|Apache Public License 2.0|Apache License 2.0|Apache Software License - Version 2.0|Apache 2.0 License|Apache 2.0 license|Apache License V2.0|Apache 2|Apache License|Apache|ASF 2.0</licenseMerge>
+                                        <licenseMerge>Apache Software License, Version 2.0|The Apache Software License, Version 2.0|Apache License Version 2.0|Apache License, Version 2.0|Apache Public License 2.0|Apache License 2.0|Apache Software License - Version 2.0|Apache 2.0 License|Apache 2.0 license|Apache License V2.0|Apache 2|Apache License|Apache|ASF 2.0|Apache 2.0</licenseMerge>
                                         <!-- Ant-contrib is an Apache License -->
                                         <licenseMerge>Apache Software License, Version 2.0|http://ant-contrib.sourceforge.net/tasks/LICENSE.txt</licenseMerge>
-                                        <licenseMerge>BSD License|The BSD License|BSD licence|BSD license|BSD|BSD-style license|New BSD License|New BSD license|Revised BSD License</licenseMerge>
+                                        <!-- XML Commons claims these licenses, but it's really Apache License: https://xerces.apache.org/xml-commons/licenses.html -->
+                                        <licenseMerge>Apache Software License, Version 2.0|The SAX License|The W3C License</licenseMerge>
+                                        <licenseMerge>BSD License|The BSD License|BSD licence|BSD license|BSD|BSD-style license|BSD-Style License|New BSD License|New BSD license|Revised BSD License|BSD 2-Clause license</licenseMerge>
                                         <!-- DuraSpace uses a BSD License for DSpace -->
                                         <licenseMerge>BSD License|DuraSpace BSD License|DuraSpace Sourcecode License</licenseMerge>
                                         <!-- Coverity uses modified BSD: https://github.com/coverity/coverity-security-library -->
                                         <licenseMerge>BSD License|BSD style modified by Coverity</licenseMerge>
-                                        <licenseMerge>Common Development and Distribution License (CDDL)|Common Development and Distribution License (CDDL) v1.0|COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0|CDDL, v1.0|CDDL 1.0 license|CDDL 1.0|CDDL 1.1</licenseMerge>
+                                        <!-- Jaxen claims this license, but it's really BSD: http://jaxen.codehaus.org/license.html -->
+                                        <licenseMerge>BSD License|http://jaxen.codehaus.org/license.html</licenseMerge>
+                                        <licenseMerge>Common Development and Distribution License (CDDL)|Common Development and Distribution License (CDDL) v1.0|COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0|Common Development and Distribution License|CDDL, v1.0|CDDL 1.0 license|CDDL 1.0|CDDL 1.1|CDDL|CDDL License</licenseMerge>
                                         <!-- Jersey / Java Servlet API claims this license, but is actually CDDL 1.0: http://servlet-spec.java.net -->
                                         <licenseMerge>Common Development and Distribution License (CDDL)|CDDL + GPLv2 with classpath exception</licenseMerge>
-                                        <!-- Jersey claims this license, but it is dual licensed with CDDL 1.0 being one: https://jersey.java.net/license.html -->
+                                        <!-- Jersey claims this license, but it is dual licensed with CDDL 1.1 being one: https://jersey.java.net/license.html -->
+                                        <licenseMerge>Common Development and Distribution License (CDDL)|CDDL+GPL License</licenseMerge>
+                                        <!-- JavaMail claims this license, but it is dual licensed with CDDL being one: https://java.net/projects/javamail/pages/License -->
+                                        <licenseMerge>Common Development and Distribution License (CDDL)|GPLv2+CE</licenseMerge>
+                                        <!-- JAXB claims this license, but it is dual licensed with CDDL being one: https://jaxb.java.net/ -->
                                         <licenseMerge>Common Development and Distribution License (CDDL)|GPL2 w/ CPE</licenseMerge>
                                         <licenseMerge>Eclipse Public License|Eclipse Public License - Version 1.0|Eclipse Public License - v 1.0|EPL 1.0 license</licenseMerge>
                                         <!-- JUnit claims this license but is actually Eclipse Public License: http://junit.org/license.html -->
                                         <licenseMerge>Eclipse Public License|Common Public License Version 1.0</licenseMerge>
-                                        <licenseMerge>GNU Lesser General Public License (LGPL)|GNU Lesser General Public License (LGPL), Version 2.1|GNU LESSER GENERAL PUBLIC LICENSE, Version 2.1|GNU Lesser General Public License|GNU Lesser Public License|GNU Lesser General Public License, Version 2.1|Lesser General Public License (LGPL) v 2.1|LGPL 2.1|LGPL 2.1 license|LGPL 3.0 license|LGPL, v2.1 or later|LGPL</licenseMerge>
+                                        <licenseMerge>GNU Lesser General Public License (LGPL)|The GNU Lesser General Public License, Version 2.1|GNU Lesser General Public License (LGPL), Version 2.1|GNU LESSER GENERAL PUBLIC LICENSE, Version 2.1|GNU Lesser General Public License, version 2.1|GNU LESSER GENERAL PUBLIC LICENSE|GNU Lesser General Public License|GNU Lesser Public License|GNU Lesser General Public License, Version 2.1|Lesser General Public License (LGPL) v 2.1|LGPL 2.1|LGPL 2.1 license|LGPL 3.0 license|LGPL, v2.1 or later|LGPL</licenseMerge>
                                         <licenseMerge>MIT License|The MIT License|MIT LICENSE</licenseMerge>
                                         <!-- BouncyCastle uses a modified MIT License: http://www.bouncycastle.org/license.html -->
                                         <licenseMerge>MIT License|Bouncy Castle Licence</licenseMerge>
@@ -718,132 +728,132 @@
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-api</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
          </dependency>
          <dependency>
             <groupId>org.dspace.modules</groupId>
             <artifactId>additions</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
          </dependency>
 
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-sword</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
             <type>jar</type>
             <classifier>classes</classifier>
          </dependency>
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-sword</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
             <type>war</type>
          </dependency>
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-swordv2</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
             <type>jar</type>
             <classifier>classes</classifier>
          </dependency>
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-swordv2</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
             <type>war</type>
          </dependency>
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-jspui</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
             <type>jar</type>
             <classifier>classes</classifier>
          </dependency>
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-jspui</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
             <type>war</type>
          </dependency>
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-oai</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
             <type>jar</type>
             <classifier>classes</classifier>
          </dependency>
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-oai</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
             <type>war</type>
          </dependency>
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-lni</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
             <type>jar</type>
             <classifier>classes</classifier>
          </dependency>
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-lni-client</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
          </dependency>
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-lni</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
             <type>war</type>
          </dependency>
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-xmlui</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
             <type>jar</type>
             <classifier>classes</classifier>
          </dependency>
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-xmlui</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
             <type>war</type>
          </dependency>
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-services</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
          </dependency>
          <dependency>
              <groupId>org.dspace</groupId>
              <artifactId>dspace-rdf</artifactId>
-             <version>5.9-SNAPSHOT</version>
+             <version>5.11-SNAPSHOT</version>
              <type>war</type>
          </dependency>
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-rest</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
             <type>jar</type>
              <classifier>classes</classifier>
          </dependency>
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-rest</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
             <type>war</type>
          </dependency>
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-solr</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
             <type>jar</type>
             <classifier>classes</classifier>
          </dependency>
          <dependency>
             <groupId>org.dspace</groupId>
             <artifactId>dspace-solr</artifactId>
-            <version>5.9-SNAPSHOT</version>
+            <version>5.11-SNAPSHOT</version>
             <type>war</type>
             <classifier>skinny</classifier>
          </dependency>
@@ -1160,9 +1170,9 @@
             <version>51.1</version>
          </dependency>
          <dependency>
-            <groupId>postgresql</groupId>
+            <groupId>org.postgresql</groupId>
             <artifactId>postgresql</artifactId>
-            <version>9.1-901-1.jdbc4</version>
+            <version>42.2.1.jre7</version>
          </dependency>
          <dependency>
             <groupId>com.oracle</groupId>
@@ -1292,8 +1302,23 @@
               <version>3.0.0</version>
               <scope>provided</scope>
           </dependency>
-      </dependencies>
-   </dependencyManagement>
+            <dependency>
+                <groupId>com.fasterxml.jackson.core</groupId>
+                <artifactId>jackson-core</artifactId>
+                <version>${jackson.version}</version>
+            </dependency>
+            <dependency>
+                <groupId>com.fasterxml.jackson.core</groupId>
+                <artifactId>jackson-databind</artifactId>
+                <version>${jackson.version}</version>
+            </dependency>
+            <dependency>
+                <groupId>com.fasterxml.jackson.core</groupId>
+                <artifactId>jackson-annotations</artifactId>
+                <version>${jackson.version}</version>
+            </dependency>
+        </dependencies>
+    </dependencyManagement>
 
    <licenses>
       <license>
